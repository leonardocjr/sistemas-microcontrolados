

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Dec 04 19:32:38 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 1.45
    46                           ; Generated 16/11/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  00195C                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _temp
    85  00195C  015E               	dw	350
    86  00195E  0000               	dw	0
    87                           
    88                           ;initializer for _dconst
    89  001960  0300               	dw	768
    90  001962  0000               	dw	0
    91  0000                     _LATEbits	set	3981
    92  0000                     _TRISEbits	set	3990
    93  0000                     _TRISD	set	3989
    94  0000                     _PORTD	set	3971
    95  0000                     _CCPR1L	set	4030
    96  0000                     _CCPR2L	set	4027
    97  0000                     _CCP2CONbits	set	4026
    98  0000                     _ADCON2	set	4032
    99  0000                     _ADCON1	set	4033
   100  0000                     _TRISAbits	set	3986
   101  0000                     _T0CON	set	4053
   102  0000                     _INTCON2bits	set	4081
   103  0000                     _RCONbits	set	4048
   104  0000                     _IPR1bits	set	3999
   105  0000                     _PIE1bits	set	3997
   106  0000                     _PR2	set	4043
   107  0000                     _T2CONbits	set	4042
   108  0000                     _CCP1CONbits	set	4029
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISC	set	3988
   111  0000                     _TRISA	set	3986
   112  0000                     _INTCON3bits	set	4080
   113  0000                     _ADRESL	set	4035
   114  0000                     _PIR1bits	set	3998
   115  0000                     _ADCON0bits	set	4034
   116  0000                     _TMR0L	set	4054
   117  0000                     _INTCONbits	set	4082
   118  0000                     _ADRESH	set	4036
   119                           
   120                           	psect	smallconst
   121  000800                     __psmallconst:
   122                           	opt stack 0
   123  000800  00                 	db	0
   124  000801                     STR_3:
   125                           
   126                           ; BSR set to: 0
   127  000801  52                 	db	82	;'R'
   128  000802  61                 	db	97	;'a'
   129  000803  7A                 	db	122	;'z'
   130  000804  61                 	db	97	;'a'
   131  000805  6F                 	db	111	;'o'
   132  000806  3A                 	db	58	;':'
   133  000807  00                 	db	0
   134  000808                     STR_1:
   135                           
   136                           ; BSR set to: 0
   137  000808  54                 	db	84	;'T'
   138  000809  61                 	db	97	;'a'
   139  00080A  3A                 	db	58	;':'
   140  00080B  00                 	db	0
   141  00080C                     STR_2:
   142                           
   143                           ; BSR set to: 0
   144  00080C  54                 	db	84	;'T'
   145  00080D  72                 	db	114	;'r'
   146  00080E  3A                 	db	58	;':'
   147  00080F  00                 	db	0
   148                           
   149                           ; #config settings
   150  000810  00                 	db	0	; dummy byte at the end
   151  0000                     
   152                           	psect	cinit
   153  00177A                     __pcinit:
   154                           	opt stack 0
   155  00177A                     start_initialization:
   156                           	opt stack 0
   157  00177A                     __initialization:
   158                           	opt stack 0
   159                           
   160                           ; Initialize objects allocated to COMRAM (8 bytes)
   161                           ; load TBLPTR registers with __pidataCOMRAM
   162  00177A  0E5C               	movlw	low __pidataCOMRAM
   163  00177C  6EF6               	movwf	tblptrl,c
   164  00177E  0E19               	movlw	high __pidataCOMRAM
   165  001780  6EF7               	movwf	tblptrh,c
   166  001782  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   167  001784  6EF8               	movwf	tblptru,c
   168  001786  EE00  F03C         	lfsr	0,__pdataCOMRAM
   169  00178A  EE10 F008          	lfsr	1,8
   170  00178E                     copy_data0:
   171  00178E  0009               	tblrd		*+
   172  001790  CFF5 FFEE          	movff	tablat,postinc0
   173  001794  50E5               	movf	postdec1,w,c
   174  001796  50E1               	movf	fsr1l,w,c
   175  001798  E1FA               	bnz	copy_data0
   176                           
   177                           ; Clear objects allocated to BANK0 (22 bytes)
   178  00179A  EE00  F0BC         	lfsr	0,__pbssBANK0
   179  00179E  0E16               	movlw	22
   180  0017A0                     clear_0:
   181  0017A0  6AEE               	clrf	postinc0,c
   182  0017A2  06E8               	decf	wreg,f,c
   183  0017A4  E1FD               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to COMRAM (6 bytes)
   186  0017A6  6A49               	clrf	(__pbssCOMRAM+5)& (0+255),c
   187  0017A8  6A48               	clrf	(__pbssCOMRAM+4)& (0+255),c
   188  0017AA  6A47               	clrf	(__pbssCOMRAM+3)& (0+255),c
   189  0017AC  6A46               	clrf	(__pbssCOMRAM+2)& (0+255),c
   190  0017AE  6A45               	clrf	(__pbssCOMRAM+1)& (0+255),c
   191  0017B0  6A44               	clrf	__pbssCOMRAM& (0+255),c
   192  0017B2                     end_of_initialization:
   193                           	opt stack 0
   194  0017B2                     __end_of__initialization:
   195                           	opt stack 0
   196  0017B2  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   197  0017B4  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   198  0017B6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   199  0017B8  6EF8               	movwf	tblptru,c
   200  0017BA  0E08               	movlw	high __Lsmallconst
   201  0017BC  6EF7               	movwf	tblptrh,c
   202  0017BE  0100               	movlb	0
   203  0017C0  EF09  F004         	goto	_main	;jump to C main() function
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           postdec1	equ	0xFE5
   211                           fsr1l	equ	0xFE1
   212                           
   213                           	psect	bssCOMRAM
   214  000044                     __pbssCOMRAM:
   215                           	opt stack 0
   216  000044                     _valorconv:
   217                           	opt stack 0
   218  000044                     	ds	4
   219  000048                     _leiturapotenciometro:
   220                           	opt stack 0
   221  000048                     	ds	2
   222                           tblptru	equ	0xFF8
   223                           tblptrh	equ	0xFF7
   224                           tblptrl	equ	0xFF6
   225                           tablat	equ	0xFF5
   226                           postinc0	equ	0xFEE
   227                           wreg	equ	0xFE8
   228                           postdec1	equ	0xFE5
   229                           fsr1l	equ	0xFE1
   230                           
   231                           	psect	dataCOMRAM
   232  00003C                     __pdataCOMRAM:
   233                           	opt stack 0
   234  00003C                     _temp:
   235                           	opt stack 0
   236  00003C                     	ds	4
   237  000040                     _dconst:
   238                           	opt stack 0
   239  000040                     	ds	4
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           postdec1	equ	0xFE5
   247                           fsr1l	equ	0xFE1
   248                           
   249                           	psect	bssBANK0
   250  0000BC                     __pbssBANK0:
   251                           	opt stack 0
   252  0000BC                     _pot:
   253                           	opt stack 0
   254  0000BC                     	ds	4
   255  0000C0                     _vent:
   256                           	opt stack 0
   257  0000C0                     	ds	4
   258  0000C4                     _result2:
   259                           	opt stack 0
   260  0000C4                     	ds	4
   261  0000C8                     _result:
   262                           	opt stack 0
   263  0000C8                     	ds	4
   264  0000CC                     _dc2:
   265                           	opt stack 0
   266  0000CC                     	ds	3
   267  0000CF                     _contador:
   268                           	opt stack 0
   269  0000CF                     	ds	1
   270  0000D0                     _dc:
   271                           	opt stack 0
   272  0000D0                     	ds	2
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	cstackBANK1
   283  000100                     __pcstackBANK1:
   284                           	opt stack 0
   285  000100                     main@cent:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x0
   289  000100                     	ds	2
   290  000102                     main@dez:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x2
   294  000102                     	ds	2
   295  000104                     main@uni:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x4
   299  000104                     	ds	2
   300  000106                     main@dez2:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x6
   304  000106                     	ds	2
   305  000108                     main@aux2:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x8
   309  000108                     	ds	2
   310  00010A                     main@uni2:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0xA
   314  00010A                     	ds	2
   315  00010C                     main@cent3:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0xC
   319  00010C                     	ds	2
   320  00010E                     main@dez3:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0xE
   324  00010E                     	ds	2
   325  000110                     main@uni3:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x10
   329  000110                     	ds	2
   330  000112                     main@aux:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x12
   334  000112                     	ds	2
   335  000114                     main@porcentagem:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x14
   339  000114                     	ds	2
   340  000116                     main@aux3:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x16
   344  000116                     	ds	2
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	cstackBANK0
   355  000060                     __pcstackBANK0:
   356                           	opt stack 0
   357  000060                     i1___fttol@sign1:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x0
   361  000060                     	ds	1
   362  000061                     i1___fttol@lval:
   363                           	opt stack 0
   364                           
   365                           ; 4 bytes @ 0x1
   366  000061                     	ds	4
   367  000065                     i1___fttol@exp1:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x5
   371  000065                     	ds	1
   372  000066                     ??_LowPriorityISR:
   373                           
   374                           ; 1 bytes @ 0x6
   375  000066                     	ds	23
   376  00007D                     ??_DelayPORXLCD:
   377  00007D                     ??_DelayXLCD:
   378  00007D                     ?___wmul:
   379                           	opt stack 0
   380  00007D                     ?___awdiv:
   381                           	opt stack 0
   382  00007D                     ?___awmod:
   383                           	opt stack 0
   384  00007D                     ?___ftpack:
   385                           	opt stack 0
   386  00007D                     ?___lldiv:
   387                           	opt stack 0
   388  00007D                     ?___llmod:
   389                           	opt stack 0
   390  00007D                     SetDDRamAddr@DDaddr:
   391                           	opt stack 0
   392  00007D                     WriteCmdXLCD@cmd:
   393                           	opt stack 0
   394  00007D                     WriteDataXLCD@data:
   395                           	opt stack 0
   396  00007D                     ___wmul@multiplier:
   397                           	opt stack 0
   398  00007D                     ___awdiv@dividend:
   399                           	opt stack 0
   400  00007D                     ___awmod@dividend:
   401                           	opt stack 0
   402  00007D                     ___ftpack@arg:
   403                           	opt stack 0
   404  00007D                     ___lldiv@dividend:
   405                           	opt stack 0
   406  00007D                     ___llmod@dividend:
   407                           	opt stack 0
   408                           
   409                           ; 4 bytes @ 0x1D
   410  00007D                     	ds	1
   411  00007E                     OpenXLCD@lcdtype:
   412                           	opt stack 0
   413  00007E                     putsXLCD@buffer:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x1E
   417  00007E                     	ds	1
   418  00007F                     ___wmul@multiplicand:
   419                           	opt stack 0
   420  00007F                     ___awdiv@divisor:
   421                           	opt stack 0
   422  00007F                     ___awmod@divisor:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x1F
   426  00007F                     	ds	1
   427  000080                     ___ftpack@exp:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x20
   431  000080                     	ds	1
   432  000081                     ___awdiv@counter:
   433                           	opt stack 0
   434  000081                     ___awmod@counter:
   435                           	opt stack 0
   436  000081                     ___ftpack@sign:
   437                           	opt stack 0
   438  000081                     ___wmul@product:
   439                           	opt stack 0
   440  000081                     ___lldiv@divisor:
   441                           	opt stack 0
   442  000081                     ___llmod@divisor:
   443                           	opt stack 0
   444                           
   445                           ; 4 bytes @ 0x21
   446  000081                     	ds	1
   447  000082                     ??___ftpack:
   448  000082                     ___awdiv@sign:
   449                           	opt stack 0
   450  000082                     ___awmod@sign:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x22
   454  000082                     	ds	1
   455  000083                     ___awdiv@quotient:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x23
   459  000083                     	ds	2
   460  000085                     ?___lltoft:
   461                           	opt stack 0
   462  000085                     ___llmod@counter:
   463                           	opt stack 0
   464  000085                     ___lldiv@quotient:
   465                           	opt stack 0
   466  000085                     ___lltoft@c:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0x25
   470  000085                     	ds	4
   471  000089                     ??___lltoft:
   472  000089                     ___lldiv@counter:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x29
   476  000089                     	ds	4
   477  00008D                     ___lltoft@exp:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x2D
   481  00008D                     	ds	1
   482  00008E                     ?___ftmul:
   483                           	opt stack 0
   484  00008E                     ___ftmul@f1:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x2E
   488  00008E                     	ds	3
   489  000091                     ___ftmul@f2:
   490                           	opt stack 0
   491                           
   492                           ; 3 bytes @ 0x31
   493  000091                     	ds	3
   494  000094                     ??___ftmul:
   495                           
   496                           ; 1 bytes @ 0x34
   497  000094                     	ds	3
   498  000097                     ___ftmul@exp:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x37
   502  000097                     	ds	1
   503  000098                     ___ftmul@f3_as_product:
   504                           	opt stack 0
   505                           
   506                           ; 3 bytes @ 0x38
   507  000098                     	ds	3
   508  00009B                     ___ftmul@cntr:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x3B
   512  00009B                     	ds	1
   513  00009C                     ___ftmul@sign:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x3C
   517  00009C                     	ds	1
   518  00009D                     ?___ftadd:
   519                           	opt stack 0
   520  00009D                     ___ftadd@f1:
   521                           	opt stack 0
   522                           
   523                           ; 3 bytes @ 0x3D
   524  00009D                     	ds	3
   525  0000A0                     ___ftadd@f2:
   526                           	opt stack 0
   527                           
   528                           ; 3 bytes @ 0x40
   529  0000A0                     	ds	3
   530  0000A3                     ??___ftadd:
   531                           
   532                           ; 1 bytes @ 0x43
   533  0000A3                     	ds	3
   534  0000A6                     ___ftadd@sign:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x46
   538  0000A6                     	ds	1
   539  0000A7                     ___ftadd@exp2:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x47
   543  0000A7                     	ds	1
   544  0000A8                     ___ftadd@exp1:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x48
   548  0000A8                     	ds	1
   549  0000A9                     ?___fttol:
   550                           	opt stack 0
   551  0000A9                     ___fttol@f1:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x49
   555  0000A9                     	ds	4
   556  0000AD                     ??___fttol:
   557                           
   558                           ; 1 bytes @ 0x4D
   559  0000AD                     	ds	5
   560  0000B2                     ___fttol@sign1:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x52
   564  0000B2                     	ds	1
   565  0000B3                     ___fttol@lval:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x53
   569  0000B3                     	ds	4
   570  0000B7                     ___fttol@exp1:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x57
   574  0000B7                     	ds	1
   575  0000B8                     ??_main:
   576                           
   577                           ; 1 bytes @ 0x58
   578  0000B8                     	ds	4
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           postinc0	equ	0xFEE
   584                           wreg	equ	0xFE8
   585                           postdec1	equ	0xFE5
   586                           fsr1l	equ	0xFE1
   587                           
   588                           	psect	cstackCOMRAM
   589  000001                     __pcstackCOMRAM:
   590                           	opt stack 0
   591  000001                     ??_HighPriorityISR:
   592  000001                     
   593                           ; 1 bytes @ 0x0
   594  000001                     	ds	18
   595  000013                     ?i1___ftpack:
   596                           	opt stack 0
   597  000013                     i1___ftpack@arg:
   598                           	opt stack 0
   599                           
   600                           ; 3 bytes @ 0x12
   601  000013                     	ds	3
   602  000016                     i1___ftpack@exp:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x15
   606  000016                     	ds	1
   607  000017                     i1___ftpack@sign:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x16
   611  000017                     	ds	1
   612  000018                     ??i1___ftpack:
   613                           
   614                           ; 1 bytes @ 0x17
   615  000018                     	ds	3
   616  00001B                     ?i1___lltoft:
   617                           	opt stack 0
   618  00001B                     i1___lltoft@c:
   619                           	opt stack 0
   620                           
   621                           ; 4 bytes @ 0x1A
   622  00001B                     	ds	4
   623  00001F                     ??i1___lltoft:
   624                           
   625                           ; 1 bytes @ 0x1E
   626  00001F                     	ds	4
   627  000023                     i1___lltoft@exp:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x22
   631  000023                     	ds	1
   632  000024                     ?i1___ftmul:
   633                           	opt stack 0
   634  000024                     i1___ftmul@f1:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x23
   638  000024                     	ds	3
   639  000027                     i1___ftmul@f2:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x26
   643  000027                     	ds	3
   644  00002A                     ??i1___ftmul:
   645                           
   646                           ; 1 bytes @ 0x29
   647  00002A                     	ds	3
   648  00002D                     i1___ftmul@exp:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x2C
   652  00002D                     	ds	1
   653  00002E                     i1___ftmul@f3_as_product:
   654                           	opt stack 0
   655                           
   656                           ; 3 bytes @ 0x2D
   657  00002E                     	ds	3
   658  000031                     i1___ftmul@cntr:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x30
   662  000031                     	ds	1
   663  000032                     i1___ftmul@sign:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x31
   667  000032                     	ds	1
   668  000033                     ?i1___fttol:
   669                           	opt stack 0
   670  000033                     i1___fttol@f1:
   671                           	opt stack 0
   672                           
   673                           ; 3 bytes @ 0x32
   674  000033                     	ds	4
   675  000037                     ??i1___fttol:
   676                           
   677                           ; 1 bytes @ 0x36
   678  000037                     	ds	5
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           postdec1	equ	0xFE5
   686                           fsr1l	equ	0xFE1
   687                           
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 69 in file "main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  aux3            2   22[BANK1 ] int 
   698 ;;  porcentagem     2   20[BANK1 ] int 
   699 ;;  aux             2   18[BANK1 ] int 
   700 ;;  uni3            2   16[BANK1 ] int 
   701 ;;  dez3            2   14[BANK1 ] int 
   702 ;;  cent3           2   12[BANK1 ] int 
   703 ;;  uni2            2   10[BANK1 ] int 
   704 ;;  aux2            2    8[BANK1 ] int 
   705 ;;  dez2            2    6[BANK1 ] int 
   706 ;;  uni             2    4[BANK1 ] int 
   707 ;;  dez             2    2[BANK1 ] int 
   708 ;;  cent            2    0[BANK1 ] int 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   718 ;;      Params:         0       0       0       0       0       0       0       0       0
   719 ;;      Locals:         0       0      24       0       0       0       0       0       0
   720 ;;      Temps:          0       4       0       0       0       0       0       0       0
   721 ;;      Totals:         0       4      24       0       0       0       0       0       0
   722 ;;Total ram usage:       28 bytes
   723 ;; Hardware stack levels required when called:    7
   724 ;; This function calls:
   725 ;;		_OpenXLCD
   726 ;;		_WriteCmdXLCD
   727 ;;		_WriteDataXLCD
   728 ;;		___awdiv
   729 ;;		___awmod
   730 ;;		___ftadd
   731 ;;		___ftmul
   732 ;;		___fttol
   733 ;;		___lldiv
   734 ;;		___llmod
   735 ;;		___lltoft
   736 ;;		___wmul
   737 ;;		_putsXLCD
   738 ;; This function is called by:
   739 ;;		Startup code after reset
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text0
   744  000812                     __ptext0:
   745                           	opt stack 0
   746  000812                     _main:
   747                           	opt stack 24
   748                           
   749                           ;main.c: 70: int cent, aux, dez, uni;
   750                           ;main.c: 71: int dez2, aux2, uni2;
   751                           ;main.c: 72: int porcentagem, cent3, aux3, dez3, uni3;
   752                           ;main.c: 74: TRISA = 0xFF;
   753                           
   754                           ;incstack = 0
   755  000812  6892               	setf	3986,c	;volatile
   756                           
   757                           ;main.c: 75: TRISC = 0x00;
   758  000814  0E00               	movlw	0
   759  000816  6E94               	movwf	3988,c	;volatile
   760                           
   761                           ;main.c: 76: TRISB = 0XFF;
   762  000818  6893               	setf	3987,c	;volatile
   763                           
   764                           ;main.c: 79: CCP1CONbits.CCP1M3 = 1;
   765  00081A  86BD               	bsf	4029,3,c	;volatile
   766                           
   767                           ;main.c: 80: CCP1CONbits.CCP1M2 = 1;
   768  00081C  84BD               	bsf	4029,2,c	;volatile
   769                           
   770                           ;main.c: 81: CCP1CONbits.CCP1M1 = 0;
   771  00081E  92BD               	bcf	4029,1,c	;volatile
   772                           
   773                           ;main.c: 82: CCP1CONbits.CCP1M0 = 0;
   774  000820  90BD               	bcf	4029,0,c	;volatile
   775                           
   776                           ;main.c: 85: T2CONbits.T2OUTPS3 = 0;
   777  000822  9CCA               	bcf	4042,6,c	;volatile
   778                           
   779                           ;main.c: 86: T2CONbits.T2OUTPS2 = 0;
   780  000824  9ACA               	bcf	4042,5,c	;volatile
   781                           
   782                           ;main.c: 87: T2CONbits.T2OUTPS1 = 0;
   783  000826  98CA               	bcf	4042,4,c	;volatile
   784                           
   785                           ;main.c: 88: T2CONbits.T2OUTPS0 = 0;
   786  000828  96CA               	bcf	4042,3,c	;volatile
   787                           
   788                           ;main.c: 89: T2CONbits.TMR2ON = 1;
   789  00082A  84CA               	bsf	4042,2,c	;volatile
   790                           
   791                           ;main.c: 90: T2CONbits.T2CKPS1 = 0;
   792  00082C  92CA               	bcf	4042,1,c	;volatile
   793                           
   794                           ;main.c: 91: T2CONbits.T2CKPS0 = 1;
   795  00082E  80CA               	bsf	4042,0,c	;volatile
   796                           
   797                           ;main.c: 95: PR2 = 191;
   798  000830  0EBF               	movlw	191
   799  000832  6ECB               	movwf	4043,c	;volatile
   800                           
   801                           ;main.c: 99: PIE1bits.ADIE = 1;
   802  000834  8C9D               	bsf	3997,6,c	;volatile
   803                           
   804                           ;main.c: 100: PIR1bits.ADIF = 0;
   805  000836  9C9E               	bcf	3998,6,c	;volatile
   806                           
   807                           ;main.c: 101: IPR1bits.ADIP = 0;
   808  000838  9C9F               	bcf	3999,6,c	;volatile
   809                           
   810                           ;main.c: 104: ADCON0bits.CHS3 = 0;
   811  00083A  9AC2               	bcf	4034,5,c	;volatile
   812                           
   813                           ;main.c: 105: ADCON0bits.CHS2 = 0;
   814  00083C  98C2               	bcf	4034,4,c	;volatile
   815                           
   816                           ;main.c: 106: ADCON0bits.CHS1 = 0;
   817  00083E  96C2               	bcf	4034,3,c	;volatile
   818                           
   819                           ;main.c: 107: ADCON0bits.CHS0 = 0;
   820  000840  94C2               	bcf	4034,2,c	;volatile
   821                           
   822                           ;main.c: 108: ADCON0bits.ADON = 1;
   823  000842  80C2               	bsf	4034,0,c	;volatile
   824                           
   825                           ;main.c: 111: RCONbits.IPEN = 1;
   826  000844  8ED0               	bsf	4048,7,c	;volatile
   827                           
   828                           ;main.c: 112: INTCONbits.GIEH = 1;
   829  000846  8EF2               	bsf	intcon,7,c	;volatile
   830                           
   831                           ;main.c: 113: INTCONbits.GIEL = 1;
   832  000848  8CF2               	bsf	intcon,6,c	;volatile
   833                           
   834                           ;main.c: 116: INTCON3bits.INT1IE = 1;
   835  00084A  86F0               	bsf	intcon3,3,c	;volatile
   836                           
   837                           ;main.c: 117: INTCON3bits.INT2IE = 1;
   838  00084C  88F0               	bsf	intcon3,4,c	;volatile
   839                           
   840                           ;main.c: 118: INTCON2bits.INTEDG1 = 0;
   841  00084E  9AF1               	bcf	intcon2,5,c	;volatile
   842                           
   843                           ;main.c: 119: INTCON2bits.INTEDG2 = 0;
   844  000850  98F1               	bcf	intcon2,4,c	;volatile
   845                           
   846                           ;main.c: 120: INTCON3bits.INT1IF = 0;
   847  000852  90F0               	bcf	intcon3,0,c	;volatile
   848                           
   849                           ;main.c: 121: INTCON3bits.INT2IF = 0;
   850  000854  92F0               	bcf	intcon3,1,c	;volatile
   851                           
   852                           ;main.c: 122: INTCON3bits.INT1IP = 0;
   853  000856  9CF0               	bcf	intcon3,6,c	;volatile
   854                           
   855                           ;main.c: 123: INTCON3bits.INT2IP = 0;
   856  000858  9EF0               	bcf	intcon3,7,c	;volatile
   857                           
   858                           ;main.c: 124: INTCON2bits.RBPU = 0;
   859  00085A  9EF1               	bcf	intcon2,7,c	;volatile
   860                           
   861                           ;main.c: 127: T0CON = 0b11000101;
   862  00085C  0EC5               	movlw	197
   863  00085E  6ED5               	movwf	4053,c	;volatile
   864                           
   865                           ;main.c: 128: TMR0L = 100;
   866  000860  0E64               	movlw	100
   867  000862  6ED6               	movwf	4054,c	;volatile
   868                           
   869                           ;main.c: 129: TRISAbits.TRISA0 = 1;
   870  000864  8092               	bsf	3986,0,c	;volatile
   871                           
   872                           ;main.c: 130: ADCON1 = 0b00001011;
   873  000866  0E0B               	movlw	11
   874  000868  6EC1               	movwf	4033,c	;volatile
   875                           
   876                           ;main.c: 131: ADCON2 = 0b10010101;
   877  00086A  0E95               	movlw	149
   878  00086C  6EC0               	movwf	4032,c	;volatile
   879                           
   880                           ;main.c: 132: INTCONbits.TMR0IF = 0;
   881  00086E  94F2               	bcf	intcon,2,c	;volatile
   882                           
   883                           ;main.c: 133: INTCONbits.TMR0IE = 1;
   884  000870  8AF2               	bsf	intcon,5,c	;volatile
   885                           
   886                           ;main.c: 134: INTCON2bits.TMR0IP = 1;
   887  000872  84F1               	bsf	intcon2,2,c	;volatile
   888                           
   889                           ;main.c: 139: TMR0L = 100;
   890  000874  0E64               	movlw	100
   891  000876  6ED6               	movwf	4054,c	;volatile
   892                           
   893                           ;main.c: 142: CCP2CONbits.CCP2M3 = 1;
   894  000878  86BA               	bsf	4026,3,c	;volatile
   895                           
   896                           ;main.c: 143: CCP2CONbits.CCP2M2 = 1;
   897  00087A  84BA               	bsf	4026,2,c	;volatile
   898                           
   899                           ;main.c: 146: OpenXLCD(0b00101100 & 0b00111000);
   900  00087C  0E28               	movlw	40
   901  00087E  EC18  F00A         	call	_OpenXLCD
   902                           
   903                           ;main.c: 147: WriteCmdXLCD(0x01);
   904  000882  0E01               	movlw	1
   905  000884  EC27  F00C         	call	_WriteCmdXLCD
   906                           
   907                           ;main.c: 148: _delay((unsigned long)((2)*(20000000/4000.0)));
   908  000888  0E0D               	movlw	13
   909  00088A  0100               	movlb	0	; () banked
   910  00088C  6FB8               	movwf	??_main& (0+255),b
   911  00088E  0EFB               	movlw	251
   912  000890                     u3067:
   913  000890  2EE8               	decfsz	wreg,f,c
   914  000892  D7FE               	bra	u3067
   915  000894  2FB8               	decfsz	??_main& (0+255),f,b
   916  000896  D7FC               	bra	u3067
   917  000898  D000               	nop2	
   918  00089A                     
   919                           ;main.c: 156: if (contador == 100) {
   920  00089A  0E64               	movlw	100
   921  00089C  0100               	movlb	0	; () banked
   922  00089E  19CF               	xorwf	_contador& (0+255),w,b
   923  0008A0  A4D8               	btfss	status,2,c
   924  0008A2  D7FB               	goto	l103
   925                           
   926                           ; BSR set to: 0
   927                           ;main.c: 158: pot = 537 + (0.22 * result2);
   928  0008A4  0E40               	movlw	64
   929  0008A6  6FA0               	movwf	___ftadd@f2& (0+255),b
   930  0008A8  0E06               	movlw	6
   931  0008AA  6FA1               	movwf	(___ftadd@f2+1)& (0+255),b
   932  0008AC  0E44               	movlw	68
   933  0008AE  6FA2               	movwf	(___ftadd@f2+2)& (0+255),b
   934  0008B0  0E48               	movlw	72
   935  0008B2  6F91               	movwf	___ftmul@f2& (0+255),b
   936  0008B4  0E61               	movlw	97
   937  0008B6  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
   938  0008B8  0E3E               	movlw	62
   939  0008BA  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
   940  0008BC  C0C4  F085         	movff	_result2,___lltoft@c
   941  0008C0  C0C5  F086         	movff	_result2+1,___lltoft@c+1
   942  0008C4  C0C6  F087         	movff	_result2+2,___lltoft@c+2
   943  0008C8  C0C7  F088         	movff	_result2+3,___lltoft@c+3
   944  0008CC  EC60  F00B         	call	___lltoft	;wreg free
   945  0008D0  C085  F08E         	movff	?___lltoft,___ftmul@f1
   946  0008D4  C086  F08F         	movff	?___lltoft+1,___ftmul@f1+1
   947  0008D8  C087  F090         	movff	?___lltoft+2,___ftmul@f1+2
   948  0008DC  EC14  F008         	call	___ftmul	;wreg free
   949  0008E0  C08E  F09D         	movff	?___ftmul,___ftadd@f1
   950  0008E4  C08F  F09E         	movff	?___ftmul+1,___ftadd@f1+1
   951  0008E8  C090  F09F         	movff	?___ftmul+2,___ftadd@f1+2
   952  0008EC  EC45  F006         	call	___ftadd	;wreg free
   953  0008F0  C09D  F0A9         	movff	?___ftadd,___fttol@f1
   954  0008F4  C09E  F0AA         	movff	?___ftadd+1,___fttol@f1+1
   955  0008F8  C09F  F0AB         	movff	?___ftadd+2,___fttol@f1+2
   956  0008FC  EC1C  F007         	call	___fttol	;wreg free
   957  000900  C0A9  F0BC         	movff	?___fttol,_pot
   958  000904  C0AA  F0BD         	movff	?___fttol+1,_pot+1
   959  000908  C0AB  F0BE         	movff	?___fttol+2,_pot+2
   960  00090C  C0AC  F0BF         	movff	?___fttol+3,_pot+3
   961                           
   962                           ;main.c: 159: CCPR2L = (char) pot >> 2;
   963  000910  0100               	movlb	0	; () banked
   964  000912  41BC               	rrncf	_pot& (0+255),w,b
   965  000914  42E8               	rrncf	wreg,f,c
   966  000916  0B3F               	andlw	63
   967  000918  6EBB               	movwf	4027,c	;volatile
   968                           
   969                           ; BSR set to: 0
   970                           ;main.c: 160: CCP2CONbits.DC2B1 = (pot >> 1) % 2;
   971  00091A  C0BC  F0B8         	movff	_pot,??_main
   972  00091E  C0BD  F0B9         	movff	_pot+1,??_main+1
   973  000922  C0BE  F0BA         	movff	_pot+2,??_main+2
   974  000926  C0BF  F0BB         	movff	_pot+3,??_main+3
   975  00092A  90D8               	bcf	status,0,c
   976  00092C  33BB               	rrcf	(??_main+3)& (0+255),f,b
   977  00092E  33BA               	rrcf	(??_main+2)& (0+255),f,b
   978  000930  33B9               	rrcf	(??_main+1)& (0+255),f,b
   979  000932  33B8               	rrcf	??_main& (0+255),f,b
   980  000934  0E01               	movlw	1
   981  000936  17B8               	andwf	??_main& (0+255),f,b
   982  000938  3BB8               	swapf	??_main& (0+255),f,b
   983  00093A  47B8               	rlncf	??_main& (0+255),f,b
   984  00093C  50BA               	movf	4026,w,c	;volatile
   985  00093E  19B8               	xorwf	??_main& (0+255),w,b
   986  000940  0BDF               	andlw	-33
   987  000942  19B8               	xorwf	??_main& (0+255),w,b
   988  000944  6EBA               	movwf	4026,c	;volatile
   989                           
   990                           ; BSR set to: 0
   991                           ;main.c: 161: CCP2CONbits.DC2B0 = pot % 2;
   992  000946  C0BC  F0B8         	movff	_pot,??_main
   993  00094A  0E01               	movlw	1
   994  00094C  17B8               	andwf	??_main& (0+255),f,b
   995  00094E  3BB8               	swapf	??_main& (0+255),f,b
   996  000950  50BA               	movf	4026,w,c	;volatile
   997  000952  19B8               	xorwf	??_main& (0+255),w,b
   998  000954  0BEF               	andlw	-17
   999  000956  19B8               	xorwf	??_main& (0+255),w,b
  1000  000958  6EBA               	movwf	4026,c	;volatile
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;main.c: 163: cent = result / 100;
  1004  00095A  C0C8  F07D         	movff	_result,___lldiv@dividend
  1005  00095E  C0C9  F07E         	movff	_result+1,___lldiv@dividend+1
  1006  000962  C0CA  F07F         	movff	_result+2,___lldiv@dividend+2
  1007  000966  C0CB  F080         	movff	_result+3,___lldiv@dividend+3
  1008  00096A  0E64               	movlw	100
  1009  00096C  6F81               	movwf	___lldiv@divisor& (0+255),b
  1010  00096E  0E00               	movlw	0
  1011  000970  6F82               	movwf	(___lldiv@divisor+1)& (0+255),b
  1012  000972  0E00               	movlw	0
  1013  000974  6F83               	movwf	(___lldiv@divisor+2)& (0+255),b
  1014  000976  0E00               	movlw	0
  1015  000978  6F84               	movwf	(___lldiv@divisor+3)& (0+255),b
  1016  00097A  ECB1  F00A         	call	___lldiv	;wreg free
  1017  00097E  C07D  F100         	movff	?___lldiv,main@cent
  1018  000982  C07E  F101         	movff	?___lldiv+1,main@cent+1
  1019                           
  1020                           ;main.c: 164: aux = result % 100;
  1021  000986  C0C8  F07D         	movff	_result,___llmod@dividend
  1022  00098A  C0C9  F07E         	movff	_result+1,___llmod@dividend+1
  1023  00098E  C0CA  F07F         	movff	_result+2,___llmod@dividend+2
  1024  000992  C0CB  F080         	movff	_result+3,___llmod@dividend+3
  1025  000996  0E64               	movlw	100
  1026  000998  0100               	movlb	0	; () banked
  1027  00099A  6F81               	movwf	___llmod@divisor& (0+255),b
  1028  00099C  0E00               	movlw	0
  1029  00099E  6F82               	movwf	(___llmod@divisor+1)& (0+255),b
  1030  0009A0  0E00               	movlw	0
  1031  0009A2  6F83               	movwf	(___llmod@divisor+2)& (0+255),b
  1032  0009A4  0E00               	movlw	0
  1033  0009A6  6F84               	movwf	(___llmod@divisor+3)& (0+255),b
  1034  0009A8  EC2C  F00B         	call	___llmod	;wreg free
  1035  0009AC  C07D  F112         	movff	?___llmod,main@aux
  1036  0009B0  C07E  F113         	movff	?___llmod+1,main@aux+1
  1037                           
  1038                           ;main.c: 165: dez = aux / 10;
  1039  0009B4  C112  F07D         	movff	main@aux,___awdiv@dividend
  1040  0009B8  C113  F07E         	movff	main@aux+1,___awdiv@dividend+1
  1041  0009BC  0E00               	movlw	0
  1042  0009BE  0100               	movlb	0	; () banked
  1043  0009C0  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
  1044  0009C2  0E0A               	movlw	10
  1045  0009C4  6F7F               	movwf	___awdiv@divisor& (0+255),b
  1046  0009C6  EC6E  F00A         	call	___awdiv	;wreg free
  1047  0009CA  C07D  F102         	movff	?___awdiv,main@dez
  1048  0009CE  C07E  F103         	movff	?___awdiv+1,main@dez+1
  1049                           
  1050                           ;main.c: 166: uni = aux % 10;
  1051  0009D2  C112  F07D         	movff	main@aux,___awmod@dividend
  1052  0009D6  C113  F07E         	movff	main@aux+1,___awmod@dividend+1
  1053  0009DA  0E00               	movlw	0
  1054  0009DC  0100               	movlb	0	; () banked
  1055  0009DE  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
  1056  0009E0  0E0A               	movlw	10
  1057  0009E2  6F7F               	movwf	___awmod@divisor& (0+255),b
  1058  0009E4  ECF3  F00A         	call	___awmod	;wreg free
  1059  0009E8  C07D  F104         	movff	?___awmod,main@uni
  1060  0009EC  C07E  F105         	movff	?___awmod+1,main@uni+1
  1061                           
  1062                           ;main.c: 167: WriteCmdXLCD(0x80);
  1063  0009F0  0E80               	movlw	128
  1064  0009F2  EC27  F00C         	call	_WriteCmdXLCD
  1065                           
  1066                           ;main.c: 168: putsXLCD("Ta:");
  1067  0009F6  0E08               	movlw	low STR_1
  1068  0009F8  0100               	movlb	0	; () banked
  1069  0009FA  6F7E               	movwf	putsXLCD@buffer& (0+255),b
  1070  0009FC  0E08               	movlw	high STR_1
  1071  0009FE  6F7F               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1072  000A00  EC66  F00C         	call	_putsXLCD	;wreg free
  1073                           
  1074                           ;main.c: 169: WriteDataXLCD(0x30 + cent);
  1075  000A04  0101               	movlb	1	; () banked
  1076  000A06  5100               	movf	main@cent& (0+255),w,b
  1077  000A08  0F30               	addlw	48
  1078  000A0A  EC05  F00C         	call	_WriteDataXLCD
  1079                           
  1080                           ;main.c: 170: WriteDataXLCD(0x30 + dez);
  1081  000A0E  0101               	movlb	1	; () banked
  1082  000A10  5102               	movf	main@dez& (0+255),w,b
  1083  000A12  0F30               	addlw	48
  1084  000A14  EC05  F00C         	call	_WriteDataXLCD
  1085                           
  1086                           ;main.c: 171: WriteDataXLCD(',');
  1087  000A18  0E2C               	movlw	44
  1088  000A1A  EC05  F00C         	call	_WriteDataXLCD
  1089                           
  1090                           ;main.c: 172: WriteDataXLCD(0x30 + uni);
  1091  000A1E  0101               	movlb	1	; () banked
  1092  000A20  5104               	movf	main@uni& (0+255),w,b
  1093  000A22  0F30               	addlw	48
  1094  000A24  EC05  F00C         	call	_WriteDataXLCD
  1095                           
  1096                           ;main.c: 174: dez2 = temp/100;
  1097  000A28  C03C  F07D         	movff	_temp,___lldiv@dividend
  1098  000A2C  C03D  F07E         	movff	_temp+1,___lldiv@dividend+1
  1099  000A30  C03E  F07F         	movff	_temp+2,___lldiv@dividend+2
  1100  000A34  C03F  F080         	movff	_temp+3,___lldiv@dividend+3
  1101  000A38  0E64               	movlw	100
  1102  000A3A  0100               	movlb	0	; () banked
  1103  000A3C  6F81               	movwf	___lldiv@divisor& (0+255),b
  1104  000A3E  0E00               	movlw	0
  1105  000A40  6F82               	movwf	(___lldiv@divisor+1)& (0+255),b
  1106  000A42  0E00               	movlw	0
  1107  000A44  6F83               	movwf	(___lldiv@divisor+2)& (0+255),b
  1108  000A46  0E00               	movlw	0
  1109  000A48  6F84               	movwf	(___lldiv@divisor+3)& (0+255),b
  1110  000A4A  ECB1  F00A         	call	___lldiv	;wreg free
  1111  000A4E  C07D  F106         	movff	?___lldiv,main@dez2
  1112  000A52  C07E  F107         	movff	?___lldiv+1,main@dez2+1
  1113                           
  1114                           ;main.c: 175: aux2 = temp%100;
  1115  000A56  C03C  F07D         	movff	_temp,___llmod@dividend
  1116  000A5A  C03D  F07E         	movff	_temp+1,___llmod@dividend+1
  1117  000A5E  C03E  F07F         	movff	_temp+2,___llmod@dividend+2
  1118  000A62  C03F  F080         	movff	_temp+3,___llmod@dividend+3
  1119  000A66  0E64               	movlw	100
  1120  000A68  0100               	movlb	0	; () banked
  1121  000A6A  6F81               	movwf	___llmod@divisor& (0+255),b
  1122  000A6C  0E00               	movlw	0
  1123  000A6E  6F82               	movwf	(___llmod@divisor+1)& (0+255),b
  1124  000A70  0E00               	movlw	0
  1125  000A72  6F83               	movwf	(___llmod@divisor+2)& (0+255),b
  1126  000A74  0E00               	movlw	0
  1127  000A76  6F84               	movwf	(___llmod@divisor+3)& (0+255),b
  1128  000A78  EC2C  F00B         	call	___llmod	;wreg free
  1129  000A7C  C07D  F108         	movff	?___llmod,main@aux2
  1130  000A80  C07E  F109         	movff	?___llmod+1,main@aux2+1
  1131                           
  1132                           ;main.c: 176: uni2 = aux2/10;
  1133  000A84  C108  F07D         	movff	main@aux2,___awdiv@dividend
  1134  000A88  C109  F07E         	movff	main@aux2+1,___awdiv@dividend+1
  1135  000A8C  0E00               	movlw	0
  1136  000A8E  0100               	movlb	0	; () banked
  1137  000A90  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
  1138  000A92  0E0A               	movlw	10
  1139  000A94  6F7F               	movwf	___awdiv@divisor& (0+255),b
  1140  000A96  EC6E  F00A         	call	___awdiv	;wreg free
  1141  000A9A  C07D  F10A         	movff	?___awdiv,main@uni2
  1142  000A9E  C07E  F10B         	movff	?___awdiv+1,main@uni2+1
  1143                           
  1144                           ;main.c: 177: WriteCmdXLCD(0x89);
  1145  000AA2  0E89               	movlw	137
  1146  000AA4  EC27  F00C         	call	_WriteCmdXLCD
  1147                           
  1148                           ;main.c: 178: putsXLCD("Tr:");
  1149  000AA8  0E0C               	movlw	low STR_2
  1150  000AAA  0100               	movlb	0	; () banked
  1151  000AAC  6F7E               	movwf	putsXLCD@buffer& (0+255),b
  1152  000AAE  0E08               	movlw	high STR_2
  1153  000AB0  6F7F               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1154  000AB2  EC66  F00C         	call	_putsXLCD	;wreg free
  1155                           
  1156                           ;main.c: 179: WriteDataXLCD(0x30 + dez2);
  1157  000AB6  0101               	movlb	1	; () banked
  1158  000AB8  5106               	movf	main@dez2& (0+255),w,b
  1159  000ABA  0F30               	addlw	48
  1160  000ABC  EC05  F00C         	call	_WriteDataXLCD
  1161                           
  1162                           ;main.c: 180: WriteDataXLCD(0x30 + uni2);
  1163  000AC0  0101               	movlb	1	; () banked
  1164  000AC2  510A               	movf	main@uni2& (0+255),w,b
  1165  000AC4  0F30               	addlw	48
  1166  000AC6  EC05  F00C         	call	_WriteDataXLCD
  1167                           
  1168                           ;main.c: 182: dc = (result-temp);
  1169  000ACA  C03C  F0B8         	movff	_temp,??_main
  1170  000ACE  C03D  F0B9         	movff	_temp+1,??_main+1
  1171  000AD2  0100               	movlb	0	; () banked
  1172  000AD4  1FB8               	comf	??_main& (0+255),f,b
  1173  000AD6  1FB9               	comf	(??_main+1)& (0+255),f,b
  1174  000AD8  4BB8               	infsnz	??_main& (0+255),f,b
  1175  000ADA  2BB9               	incf	(??_main+1)& (0+255),f,b
  1176  000ADC  51C8               	movf	_result& (0+255),w,b
  1177  000ADE  25B8               	addwf	??_main& (0+255),w,b
  1178  000AE0  6FD0               	movwf	_dc& (0+255),b
  1179  000AE2  51C9               	movf	(_result+1)& (0+255),w,b
  1180  000AE4  21B9               	addwfc	(??_main+1)& (0+255),w,b
  1181  000AE6  6FD1               	movwf	(_dc+1)& (0+255),b
  1182                           
  1183                           ;main.c: 183: if(dc<=0)
  1184  000AE8  BFD1               	btfsc	(_dc+1)& (0+255),7,b
  1185  000AEA  D005               	goto	u3010
  1186  000AEC  51D1               	movf	(_dc+1)& (0+255),w,b
  1187  000AEE  E107               	bnz	l3462
  1188  000AF0  05D0               	decf	_dc& (0+255),w,b
  1189  000AF2  B0D8               	btfsc	status,0,c
  1190  000AF4  D004               	goto	l105
  1191  000AF6                     u3010:
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;main.c: 184: dc = 0;
  1195  000AF6  0E00               	movlw	0
  1196  000AF8  6FD1               	movwf	(_dc+1)& (0+255),b
  1197  000AFA  0E00               	movlw	0
  1198  000AFC  D00B               	goto	L1
  1199  000AFE                     l105:
  1200  000AFE                     l3462:
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 185: else if(dc>1)
  1204  000AFE  BFD1               	btfsc	(_dc+1)& (0+255),7,b
  1205  000B00  D00A               	goto	l107
  1206  000B02  51D1               	movf	(_dc+1)& (0+255),w,b
  1207  000B04  E104               	bnz	u3020
  1208  000B06  0E02               	movlw	2
  1209  000B08  5DD0               	subwf	_dc& (0+255),w,b
  1210  000B0A  A0D8               	btfss	status,0,c
  1211  000B0C  D004               	goto	l107
  1212  000B0E                     u3020:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 186: dc = 1;
  1216  000B0E  0E00               	movlw	0
  1217  000B10  6FD1               	movwf	(_dc+1)& (0+255),b
  1218  000B12  0E01               	movlw	1
  1219  000B14                     L1:
  1220  000B14  6FD0               	movwf	_dc& (0+255),b
  1221  000B16                     l107:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;main.c: 188: vent = 768*dc;
  1225                           
  1226                           ; BSR set to: 0
  1227                           
  1228                           ; BSR set to: 0
  1229  000B16  C0D0  F07D         	movff	_dc,___wmul@multiplier
  1230  000B1A  C0D1  F07E         	movff	_dc+1,___wmul@multiplier+1
  1231  000B1E  0E03               	movlw	3
  1232  000B20  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1233  000B22  0E00               	movlw	0
  1234  000B24  6F7F               	movwf	___wmul@multiplicand& (0+255),b
  1235  000B26  EC81  F00C         	call	___wmul	;wreg free
  1236  000B2A  0100               	movlb	0	; () banked
  1237  000B2C  C07D  F0C0         	movff	?___wmul,_vent
  1238  000B30  C07E  F0C1         	movff	?___wmul+1,_vent+1
  1239  000B34  0E00               	movlw	0
  1240  000B36  BFC1               	btfsc	(_vent+1)& (0+255),7,b
  1241  000B38  0EFF               	movlw	-1
  1242  000B3A  6FC2               	movwf	(_vent+2)& (0+255),b
  1243  000B3C  6FC3               	movwf	(_vent+3)& (0+255),b
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;main.c: 189: CCPR1L = (char) (vent >> 2);
  1247  000B3E  C0C0  F0B8         	movff	_vent,??_main
  1248  000B42  C0C1  F0B9         	movff	_vent+1,??_main+1
  1249  000B46  C0C2  F0BA         	movff	_vent+2,??_main+2
  1250  000B4A  C0C3  F0BB         	movff	_vent+3,??_main+3
  1251  000B4E  0E03               	movlw	3
  1252  000B50  D005               	goto	u3030
  1253  000B52                     u3035:
  1254  000B52  90D8               	bcf	status,0,c
  1255  000B54  33BB               	rrcf	(??_main+3)& (0+255),f,b
  1256  000B56  33BA               	rrcf	(??_main+2)& (0+255),f,b
  1257  000B58  33B9               	rrcf	(??_main+1)& (0+255),f,b
  1258  000B5A  33B8               	rrcf	??_main& (0+255),f,b
  1259  000B5C                     u3030:
  1260  000B5C  2EE8               	decfsz	wreg,f,c
  1261  000B5E  D7F9               	goto	u3035
  1262  000B60  51B8               	movf	??_main& (0+255),w,b
  1263  000B62  6EBE               	movwf	4030,c	;volatile
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;main.c: 190: CCP1CONbits.DC1B0 = vent % 2;
  1267  000B64  C0C0  F0B8         	movff	_vent,??_main
  1268  000B68  0E01               	movlw	1
  1269  000B6A  17B8               	andwf	??_main& (0+255),f,b
  1270  000B6C  3BB8               	swapf	??_main& (0+255),f,b
  1271  000B6E  50BD               	movf	4029,w,c	;volatile
  1272  000B70  19B8               	xorwf	??_main& (0+255),w,b
  1273  000B72  0BEF               	andlw	-17
  1274  000B74  19B8               	xorwf	??_main& (0+255),w,b
  1275  000B76  6EBD               	movwf	4029,c	;volatile
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;main.c: 191: CCP1CONbits.DC1B1 = (vent >> 1) % 2;
  1279  000B78  C0C0  F0B8         	movff	_vent,??_main
  1280  000B7C  C0C1  F0B9         	movff	_vent+1,??_main+1
  1281  000B80  C0C2  F0BA         	movff	_vent+2,??_main+2
  1282  000B84  C0C3  F0BB         	movff	_vent+3,??_main+3
  1283  000B88  90D8               	bcf	status,0,c
  1284  000B8A  33BB               	rrcf	(??_main+3)& (0+255),f,b
  1285  000B8C  33BA               	rrcf	(??_main+2)& (0+255),f,b
  1286  000B8E  33B9               	rrcf	(??_main+1)& (0+255),f,b
  1287  000B90  33B8               	rrcf	??_main& (0+255),f,b
  1288  000B92  0E01               	movlw	1
  1289  000B94  17B8               	andwf	??_main& (0+255),f,b
  1290  000B96  3BB8               	swapf	??_main& (0+255),f,b
  1291  000B98  47B8               	rlncf	??_main& (0+255),f,b
  1292  000B9A  50BD               	movf	4029,w,c	;volatile
  1293  000B9C  19B8               	xorwf	??_main& (0+255),w,b
  1294  000B9E  0BDF               	andlw	-33
  1295  000BA0  19B8               	xorwf	??_main& (0+255),w,b
  1296  000BA2  6EBD               	movwf	4029,c	;volatile
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;main.c: 193: porcentagem = dc2*100;
  1300  000BA4  0E00               	movlw	0
  1301  000BA6  6F91               	movwf	___ftmul@f2& (0+255),b
  1302  000BA8  0EC8               	movlw	200
  1303  000BAA  6F92               	movwf	(___ftmul@f2+1)& (0+255),b
  1304  000BAC  0E42               	movlw	66
  1305  000BAE  6F93               	movwf	(___ftmul@f2+2)& (0+255),b
  1306  000BB0  C0CC  F08E         	movff	_dc2,___ftmul@f1
  1307  000BB4  C0CD  F08F         	movff	_dc2+1,___ftmul@f1+1
  1308  000BB8  C0CE  F090         	movff	_dc2+2,___ftmul@f1+2
  1309  000BBC  EC14  F008         	call	___ftmul	;wreg free
  1310  000BC0  C08E  F0A9         	movff	?___ftmul,___fttol@f1
  1311  000BC4  C08F  F0AA         	movff	?___ftmul+1,___fttol@f1+1
  1312  000BC8  C090  F0AB         	movff	?___ftmul+2,___fttol@f1+2
  1313  000BCC  EC1C  F007         	call	___fttol	;wreg free
  1314  000BD0  C0A9  F114         	movff	?___fttol,main@porcentagem
  1315  000BD4  C0AA  F115         	movff	?___fttol+1,main@porcentagem+1
  1316                           
  1317                           ;main.c: 194: WriteCmdXLCD(0xC3);
  1318  000BD8  0EC3               	movlw	195
  1319  000BDA  EC27  F00C         	call	_WriteCmdXLCD
  1320                           
  1321                           ;main.c: 195: putsXLCD("Razao:");
  1322  000BDE  0E01               	movlw	low STR_3
  1323  000BE0  0100               	movlb	0	; () banked
  1324  000BE2  6F7E               	movwf	putsXLCD@buffer& (0+255),b
  1325  000BE4  0E08               	movlw	high STR_3
  1326  000BE6  6F7F               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1327  000BE8  EC66  F00C         	call	_putsXLCD	;wreg free
  1328                           
  1329                           ;main.c: 196: cent3 = porcentagem / 100;
  1330  000BEC  C114  F07D         	movff	main@porcentagem,___awdiv@dividend
  1331  000BF0  C115  F07E         	movff	main@porcentagem+1,___awdiv@dividend+1
  1332  000BF4  0E00               	movlw	0
  1333  000BF6  0100               	movlb	0	; () banked
  1334  000BF8  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
  1335  000BFA  0E64               	movlw	100
  1336  000BFC  6F7F               	movwf	___awdiv@divisor& (0+255),b
  1337  000BFE  EC6E  F00A         	call	___awdiv	;wreg free
  1338  000C02  C07D  F10C         	movff	?___awdiv,main@cent3
  1339  000C06  C07E  F10D         	movff	?___awdiv+1,main@cent3+1
  1340                           
  1341                           ;main.c: 197: aux3 = porcentagem % 100;
  1342  000C0A  C114  F07D         	movff	main@porcentagem,___awmod@dividend
  1343  000C0E  C115  F07E         	movff	main@porcentagem+1,___awmod@dividend+1
  1344  000C12  0E00               	movlw	0
  1345  000C14  0100               	movlb	0	; () banked
  1346  000C16  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
  1347  000C18  0E64               	movlw	100
  1348  000C1A  6F7F               	movwf	___awmod@divisor& (0+255),b
  1349  000C1C  ECF3  F00A         	call	___awmod	;wreg free
  1350  000C20  C07D  F116         	movff	?___awmod,main@aux3
  1351  000C24  C07E  F117         	movff	?___awmod+1,main@aux3+1
  1352                           
  1353                           ;main.c: 198: dez3 = aux3 / 10;
  1354  000C28  C116  F07D         	movff	main@aux3,___awdiv@dividend
  1355  000C2C  C117  F07E         	movff	main@aux3+1,___awdiv@dividend+1
  1356  000C30  0E00               	movlw	0
  1357  000C32  0100               	movlb	0	; () banked
  1358  000C34  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
  1359  000C36  0E0A               	movlw	10
  1360  000C38  6F7F               	movwf	___awdiv@divisor& (0+255),b
  1361  000C3A  EC6E  F00A         	call	___awdiv	;wreg free
  1362  000C3E  C07D  F10E         	movff	?___awdiv,main@dez3
  1363  000C42  C07E  F10F         	movff	?___awdiv+1,main@dez3+1
  1364                           
  1365                           ;main.c: 199: uni3 = aux3 % 10;
  1366  000C46  C116  F07D         	movff	main@aux3,___awmod@dividend
  1367  000C4A  C117  F07E         	movff	main@aux3+1,___awmod@dividend+1
  1368  000C4E  0E00               	movlw	0
  1369  000C50  0100               	movlb	0	; () banked
  1370  000C52  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
  1371  000C54  0E0A               	movlw	10
  1372  000C56  6F7F               	movwf	___awmod@divisor& (0+255),b
  1373  000C58  ECF3  F00A         	call	___awmod	;wreg free
  1374  000C5C  C07D  F110         	movff	?___awmod,main@uni3
  1375  000C60  C07E  F111         	movff	?___awmod+1,main@uni3+1
  1376                           
  1377                           ;main.c: 200: WriteDataXLCD(0x30 + cent3);
  1378  000C64  0101               	movlb	1	; () banked
  1379  000C66  510C               	movf	main@cent3& (0+255),w,b
  1380  000C68  0F30               	addlw	48
  1381  000C6A  EC05  F00C         	call	_WriteDataXLCD
  1382                           
  1383                           ;main.c: 201: WriteDataXLCD(0x30 + dez3);
  1384  000C6E  0101               	movlb	1	; () banked
  1385  000C70  510E               	movf	main@dez3& (0+255),w,b
  1386  000C72  0F30               	addlw	48
  1387  000C74  EC05  F00C         	call	_WriteDataXLCD
  1388                           
  1389                           ;main.c: 202: WriteDataXLCD(0x30 + uni3);
  1390  000C78  0101               	movlb	1	; () banked
  1391  000C7A  5110               	movf	main@uni3& (0+255),w,b
  1392  000C7C  0F30               	addlw	48
  1393  000C7E  EC05  F00C         	call	_WriteDataXLCD
  1394                           
  1395                           ;main.c: 203: WriteDataXLCD('%');
  1396  000C82  0E25               	movlw	37
  1397  000C84  EC05  F00C         	call	_WriteDataXLCD
  1398  000C88  D608               	goto	l103
  1399  000C8A                     __end_of_main:
  1400                           	opt stack 0
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           intcon	equ	0xFF2
  1406                           intcon2	equ	0xFF1
  1407                           intcon3	equ	0xFF0
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postdec1	equ	0xFE5
  1411                           fsr1l	equ	0xFE1
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _putsXLCD *****************
  1415 ;; Defined at:
  1416 ;;		line 510 in file "nxlcd.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  buffer          2   30[BANK0 ] PTR unsigned char 
  1419 ;;		 -> STR_3(7), STR_2(4), STR_1(4), 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1431 ;;      Params:         0       2       0       0       0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1434 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    6
  1438 ;; This function calls:
  1439 ;;		_BusyXLCD
  1440 ;;		_WriteDataXLCD
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text1
  1447  0018CC                     __ptext1:
  1448                           	opt stack 0
  1449  0018CC                     _putsXLCD:
  1450                           	opt stack 24
  1451                           
  1452                           ;nxlcd.c: 512: while(*buffer)
  1453                           
  1454                           ;incstack = 0
  1455  0018CC  D010               	goto	l185
  1456  0018CE                     
  1457                           ;nxlcd.c: 513: {
  1458                           ;nxlcd.c: 514: while(BusyXLCD());
  1459  0018CE  EC49  F00C         	call	_BusyXLCD	;wreg free
  1460  0018D2  0900               	iorlw	0
  1461  0018D4  A4D8               	btfss	status,2,c
  1462  0018D6  D7FB               	goto	l186
  1463                           
  1464                           ;nxlcd.c: 515: WriteDataXLCD(*buffer);
  1465  0018D8  C07E  FFF6         	movff	putsXLCD@buffer,tblptrl
  1466  0018DC  C07F  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1467  0018E0                     	if	0	;tblptru may be non-zero
  1468  0018E0                     	endif
  1469  0018E0                     	if	0	;tblptru may be non-zero
  1470  0018E0                     	endif
  1471  0018E0  0008               	tblrd		*
  1472  0018E2  50F5               	movf	tablat,w,c
  1473  0018E4  EC05  F00C         	call	_WriteDataXLCD
  1474                           
  1475                           ;nxlcd.c: 516: buffer++;
  1476  0018E8  0100               	movlb	0	; () banked
  1477  0018EA  4B7E               	infsnz	putsXLCD@buffer& (0+255),f,b
  1478  0018EC  2B7F               	incf	(putsXLCD@buffer+1)& (0+255),f,b
  1479  0018EE                     l185:
  1480                           
  1481                           ; BSR set to: 0
  1482  0018EE  C07E  FFF6         	movff	putsXLCD@buffer,tblptrl
  1483  0018F2  C07F  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1484  0018F6                     	if	0	;tblptru may be non-zero
  1485  0018F6                     	endif
  1486  0018F6                     	if	0	;tblptru may be non-zero
  1487  0018F6                     	endif
  1488  0018F6  0008               	tblrd		*
  1489  0018F8  50F5               	movf	tablat,w,c
  1490  0018FA  0900               	iorlw	0
  1491  0018FC  B4D8               	btfsc	status,2,c
  1492  0018FE  0012               	return	
  1493  001900  D7E6               	goto	l186
  1494  001902                     __end_of_putsXLCD:
  1495                           	opt stack 0
  1496                           tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           intcon	equ	0xFF2
  1501                           intcon2	equ	0xFF1
  1502                           intcon3	equ	0xFF0
  1503                           postinc0	equ	0xFEE
  1504                           wreg	equ	0xFE8
  1505                           postdec1	equ	0xFE5
  1506                           fsr1l	equ	0xFE1
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _WriteDataXLCD *****************
  1510 ;; Defined at:
  1511 ;;		line 449 in file "nxlcd.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  data            1    wreg     unsigned char 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  data            1   29[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0
  1526 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1528 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1529 ;;Total ram usage:        1 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    5
  1532 ;; This function calls:
  1533 ;;		_DelayFor18TCY
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;;		_putsXLCD
  1537 ;;		_putrsXLCD
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text2
  1542  00180A                     __ptext2:
  1543                           	opt stack 0
  1544  00180A                     _WriteDataXLCD:
  1545                           	opt stack 24
  1546                           
  1547                           ;incstack = 0
  1548                           ;WriteDataXLCD@data stored from wreg
  1549  00180A  0100               	movlb	0	; () banked
  1550  00180C  6F7D               	movwf	WriteDataXLCD@data& (0+255),b
  1551                           
  1552                           ;nxlcd.c: 464: TRISD &= 0x0f;
  1553  00180E  0E0F               	movlw	15
  1554  001810  1695               	andwf	3989,f,c	;volatile
  1555                           
  1556                           ;nxlcd.c: 465: PORTD &= 0x0f;
  1557  001812  0E0F               	movlw	15
  1558  001814  1683               	andwf	3971,f,c	;volatile
  1559                           
  1560                           ;nxlcd.c: 466: PORTD |= data&0xf0;
  1561  001816  0100               	movlb	0	; () banked
  1562  001818  517D               	movf	WriteDataXLCD@data& (0+255),w,b
  1563  00181A  0BF0               	andlw	240
  1564  00181C  1283               	iorwf	3971,f,c	;volatile
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;nxlcd.c: 472: LATEbits.LATE0 = 1;
  1568  00181E  808D               	bsf	3981,0,c	;volatile
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;nxlcd.c: 473: LATEbits.LATE2 = 0;
  1572  001820  948D               	bcf	3981,2,c	;volatile
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;nxlcd.c: 474: DelayFor18TCY();
  1576  001822  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  1577                           
  1578                           ;nxlcd.c: 475: LATEbits.LATE1 = 1;
  1579  001826  828D               	bsf	3981,1,c	;volatile
  1580                           
  1581                           ;nxlcd.c: 476: DelayFor18TCY();
  1582  001828  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  1583                           
  1584                           ;nxlcd.c: 477: LATEbits.LATE1 = 0;
  1585  00182C  928D               	bcf	3981,1,c	;volatile
  1586                           
  1587                           ;nxlcd.c: 479: PORTD &= 0x0f;
  1588  00182E  0E0F               	movlw	15
  1589  001830  1683               	andwf	3971,f,c	;volatile
  1590                           
  1591                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
  1592  001832  0100               	movlb	0	; () banked
  1593  001834  397D               	swapf	WriteDataXLCD@data& (0+255),w,b
  1594  001836  0BF0               	andlw	240
  1595  001838  0BF0               	andlw	240
  1596  00183A  1283               	iorwf	3971,f,c	;volatile
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;nxlcd.c: 485: DelayFor18TCY();
  1600  00183C  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  1601                           
  1602                           ;nxlcd.c: 486: LATEbits.LATE1 = 1;
  1603  001840  828D               	bsf	3981,1,c	;volatile
  1604                           
  1605                           ;nxlcd.c: 487: DelayFor18TCY();
  1606  001842  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  1607                           
  1608                           ;nxlcd.c: 488: LATEbits.LATE1 = 0;
  1609  001846  928D               	bcf	3981,1,c	;volatile
  1610                           
  1611                           ;nxlcd.c: 490: TRISD |= 0xf0;
  1612  001848  0EF0               	movlw	240
  1613  00184A  1295               	iorwf	3989,f,c	;volatile
  1614  00184C  0012               	return	
  1615  00184E                     __end_of_WriteDataXLCD:
  1616                           	opt stack 0
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           intcon	equ	0xFF2
  1622                           intcon2	equ	0xFF1
  1623                           intcon3	equ	0xFF0
  1624                           postinc0	equ	0xFEE
  1625                           wreg	equ	0xFE8
  1626                           postdec1	equ	0xFE5
  1627                           fsr1l	equ	0xFE1
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function ___wmul *****************
  1631 ;; Defined at:
  1632 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  multiplier      2   29[BANK0 ] unsigned int 
  1635 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  product         2   33[BANK0 ] unsigned int 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  2   29[BANK0 ] unsigned int 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, prodl, prodh
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1647 ;;      Params:         0       4       0       0       0       0       0       0       0
  1648 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1650 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1651 ;;Total ram usage:        6 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    4
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text3
  1662  001902                     __ptext3:
  1663                           	opt stack 0
  1664  001902                     ___wmul:
  1665                           	opt stack 26
  1666                           
  1667                           ;incstack = 0
  1668  001902  0100               	movlb	0	; () banked
  1669  001904  517D               	movf	___wmul@multiplier& (0+255),w,b
  1670  001906  037F               	mulwf	___wmul@multiplicand& (0+255),b
  1671  001908  CFF3 F081          	movff	prodl,___wmul@product
  1672  00190C  CFF4 F082          	movff	prodh,___wmul@product+1
  1673  001910  517D               	movf	___wmul@multiplier& (0+255),w,b
  1674  001912  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1675  001914  50F3               	movf	prodl,w,c
  1676  001916  2782               	addwf	(___wmul@product+1)& (0+255),f,b
  1677  001918  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1678  00191A  037F               	mulwf	___wmul@multiplicand& (0+255),b
  1679  00191C  50F3               	movf	prodl,w,c
  1680  00191E  2782               	addwf	(___wmul@product+1)& (0+255),f,b
  1681                           
  1682                           ; BSR set to: 0
  1683  001920  C081  F07D         	movff	___wmul@product,?___wmul
  1684  001924  C082  F07E         	movff	___wmul@product+1,?___wmul+1
  1685  001928  0012               	return	
  1686  00192A                     __end_of___wmul:
  1687                           	opt stack 0
  1688                           tblptru	equ	0xFF8
  1689                           tblptrh	equ	0xFF7
  1690                           tblptrl	equ	0xFF6
  1691                           tablat	equ	0xFF5
  1692                           prodh	equ	0xFF4
  1693                           prodl	equ	0xFF3
  1694                           intcon	equ	0xFF2
  1695                           intcon2	equ	0xFF1
  1696                           intcon3	equ	0xFF0
  1697                           postinc0	equ	0xFEE
  1698                           wreg	equ	0xFE8
  1699                           postdec1	equ	0xFE5
  1700                           fsr1l	equ	0xFE1
  1701                           status	equ	0xFD8
  1702                           
  1703 ;; *************** function ___lltoft *****************
  1704 ;; Defined at:
  1705 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  c               4   37[BANK0 ] unsigned long 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  exp             1   45[BANK0 ] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  3   37[BANK0 ] float 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1719 ;;      Params:         0       4       0       0       0       0       0       0       0
  1720 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1721 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1722 ;;      Totals:         0       9       0       0       0       0       0       0       0
  1723 ;;Total ram usage:        9 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    5
  1726 ;; This function calls:
  1727 ;;		___ftpack
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text4
  1734  0016C0                     __ptext4:
  1735                           	opt stack 0
  1736  0016C0                     ___lltoft:
  1737                           	opt stack 25
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;incstack = 0
  1741  0016C0  0E8E               	movlw	142
  1742  0016C2  0100               	movlb	0	; () banked
  1743  0016C4  6F8D               	movwf	___lltoft@exp& (0+255),b
  1744  0016C6  D006               	goto	l572
  1745  0016C8                     
  1746                           ; BSR set to: 0
  1747                           
  1748                           ; BSR set to: 0
  1749  0016C8  90D8               	bcf	status,0,c
  1750  0016CA  3388               	rrcf	(___lltoft@c+3)& (0+255),f,b
  1751  0016CC  3387               	rrcf	(___lltoft@c+2)& (0+255),f,b
  1752  0016CE  3386               	rrcf	(___lltoft@c+1)& (0+255),f,b
  1753  0016D0  3385               	rrcf	___lltoft@c& (0+255),f,b
  1754  0016D2  2B8D               	incf	___lltoft@exp& (0+255),f,b
  1755  0016D4                     l572:
  1756                           
  1757                           ; BSR set to: 0
  1758                           
  1759                           ; BSR set to: 0
  1760  0016D4  0E00               	movlw	0
  1761  0016D6  1585               	andwf	___lltoft@c& (0+255),w,b
  1762  0016D8  6F89               	movwf	??___lltoft& (0+255),b
  1763  0016DA  0E00               	movlw	0
  1764  0016DC  1586               	andwf	(___lltoft@c+1)& (0+255),w,b
  1765  0016DE  6F8A               	movwf	(??___lltoft+1)& (0+255),b
  1766  0016E0  0E00               	movlw	0
  1767  0016E2  1587               	andwf	(___lltoft@c+2)& (0+255),w,b
  1768  0016E4  6F8B               	movwf	(??___lltoft+2)& (0+255),b
  1769  0016E6  0EFF               	movlw	255
  1770  0016E8  1588               	andwf	(___lltoft@c+3)& (0+255),w,b
  1771  0016EA  6F8C               	movwf	(??___lltoft+3)& (0+255),b
  1772  0016EC  5189               	movf	??___lltoft& (0+255),w,b
  1773  0016EE  118A               	iorwf	(??___lltoft+1)& (0+255),w,b
  1774  0016F0  118B               	iorwf	(??___lltoft+2)& (0+255),w,b
  1775  0016F2  118C               	iorwf	(??___lltoft+3)& (0+255),w,b
  1776  0016F4  A4D8               	btfss	status,2,c
  1777  0016F6  D7E8               	goto	l573
  1778                           
  1779                           ; BSR set to: 0
  1780                           
  1781                           ; BSR set to: 0
  1782  0016F8  C085  F07D         	movff	___lltoft@c,___ftpack@arg
  1783  0016FC  C086  F07E         	movff	___lltoft@c+1,___ftpack@arg+1
  1784  001700  C087  F07F         	movff	___lltoft@c+2,___ftpack@arg+2
  1785  001704  C08D  F080         	movff	___lltoft@exp,___ftpack@exp
  1786  001708  0E00               	movlw	0
  1787  00170A  6F81               	movwf	___ftpack@sign& (0+255),b
  1788  00170C  EC69  F009         	call	___ftpack	;wreg free
  1789  001710  C07D  F085         	movff	?___ftpack,?___lltoft
  1790  001714  C07E  F086         	movff	?___ftpack+1,?___lltoft+1
  1791  001718  C07F  F087         	movff	?___ftpack+2,?___lltoft+2
  1792  00171C  0012               	return	
  1793  00171E                     __end_of___lltoft:
  1794                           	opt stack 0
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           prodh	equ	0xFF4
  1800                           prodl	equ	0xFF3
  1801                           intcon	equ	0xFF2
  1802                           intcon2	equ	0xFF1
  1803                           intcon3	equ	0xFF0
  1804                           postinc0	equ	0xFEE
  1805                           wreg	equ	0xFE8
  1806                           postdec1	equ	0xFE5
  1807                           fsr1l	equ	0xFE1
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function ___llmod *****************
  1811 ;; Defined at:
  1812 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  dividend        4   29[BANK0 ] unsigned long 
  1815 ;;  divisor         4   33[BANK0 ] unsigned long 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  counter         1   37[BANK0 ] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  4   29[BANK0 ] unsigned long 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1827 ;;      Params:         0       8       0       0       0       0       0       0       0
  1828 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1830 ;;      Totals:         0       9       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        9 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    4
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text5
  1842  001658                     __ptext5:
  1843                           	opt stack 0
  1844  001658                     ___llmod:
  1845                           	opt stack 26
  1846                           
  1847                           ;incstack = 0
  1848  001658  0100               	movlb	0	; () banked
  1849  00165A  5181               	movf	___llmod@divisor& (0+255),w,b
  1850  00165C  1182               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  1851  00165E  1183               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  1852  001660  1184               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  1853  001662  B4D8               	btfsc	status,2,c
  1854  001664  D024               	goto	l566
  1855                           
  1856                           ; BSR set to: 0
  1857  001666  0E01               	movlw	1
  1858  001668  6F85               	movwf	___llmod@counter& (0+255),b
  1859  00166A  D006               	goto	l561
  1860  00166C                     
  1861                           ; BSR set to: 0
  1862                           
  1863                           ; BSR set to: 0
  1864  00166C  90D8               	bcf	status,0,c
  1865  00166E  3781               	rlcf	___llmod@divisor& (0+255),f,b
  1866  001670  3782               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  1867  001672  3783               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  1868  001674  3784               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  1869  001676  2B85               	incf	___llmod@counter& (0+255),f,b
  1870  001678                     l561:
  1871                           
  1872                           ; BSR set to: 0
  1873                           
  1874                           ; BSR set to: 0
  1875  001678  AF84               	btfss	(___llmod@divisor+3)& (0+255),7,b
  1876  00167A  D7F8               	goto	l562
  1877  00167C                     u2840:
  1878                           
  1879                           ; BSR set to: 0
  1880                           
  1881                           ; BSR set to: 0
  1882                           
  1883                           ; BSR set to: 0
  1884  00167C  5181               	movf	___llmod@divisor& (0+255),w,b
  1885  00167E  5D7D               	subwf	___llmod@dividend& (0+255),w,b
  1886  001680  5182               	movf	(___llmod@divisor+1)& (0+255),w,b
  1887  001682  597E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  1888  001684  5183               	movf	(___llmod@divisor+2)& (0+255),w,b
  1889  001686  597F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  1890  001688  5184               	movf	(___llmod@divisor+3)& (0+255),w,b
  1891  00168A  5980               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  1892  00168C  A0D8               	btfss	status,0,c
  1893  00168E  D008               	goto	l565
  1894                           
  1895                           ; BSR set to: 0
  1896  001690  5181               	movf	___llmod@divisor& (0+255),w,b
  1897  001692  5F7D               	subwf	___llmod@dividend& (0+255),f,b
  1898  001694  5182               	movf	(___llmod@divisor+1)& (0+255),w,b
  1899  001696  5B7E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  1900  001698  5183               	movf	(___llmod@divisor+2)& (0+255),w,b
  1901  00169A  5B7F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  1902  00169C  5184               	movf	(___llmod@divisor+3)& (0+255),w,b
  1903  00169E  5B80               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  1904  0016A0                     l565:
  1905                           
  1906                           ; BSR set to: 0
  1907                           
  1908                           ; BSR set to: 0
  1909  0016A0  90D8               	bcf	status,0,c
  1910  0016A2  3384               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  1911  0016A4  3383               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  1912  0016A6  3382               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  1913  0016A8  3381               	rrcf	___llmod@divisor& (0+255),f,b
  1914                           
  1915                           ; BSR set to: 0
  1916  0016AA  2F85               	decfsz	___llmod@counter& (0+255),f,b
  1917  0016AC  D7E7               	goto	u2840
  1918  0016AE                     l566:
  1919                           
  1920                           ; BSR set to: 0
  1921                           
  1922                           ; BSR set to: 0
  1923  0016AE  C07D  F07D         	movff	___llmod@dividend,?___llmod
  1924  0016B2  C07E  F07E         	movff	___llmod@dividend+1,?___llmod+1
  1925  0016B6  C07F  F07F         	movff	___llmod@dividend+2,?___llmod+2
  1926  0016BA  C080  F080         	movff	___llmod@dividend+3,?___llmod+3
  1927                           
  1928                           ; BSR set to: 0
  1929  0016BE  0012               	return		;funcret
  1930  0016C0                     __end_of___llmod:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           prodh	equ	0xFF4
  1937                           prodl	equ	0xFF3
  1938                           intcon	equ	0xFF2
  1939                           intcon2	equ	0xFF1
  1940                           intcon3	equ	0xFF0
  1941                           postinc0	equ	0xFEE
  1942                           wreg	equ	0xFE8
  1943                           postdec1	equ	0xFE5
  1944                           fsr1l	equ	0xFE1
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function ___lldiv *****************
  1948 ;; Defined at:
  1949 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  dividend        4   29[BANK0 ] unsigned long 
  1952 ;;  divisor         4   33[BANK0 ] unsigned long 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  quotient        4   37[BANK0 ] unsigned long 
  1955 ;;  counter         1   41[BANK0 ] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  4   29[BANK0 ] unsigned long 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1965 ;;      Params:         0       8       0       0       0       0       0       0       0
  1966 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1968 ;;      Totals:         0      13       0       0       0       0       0       0       0
  1969 ;;Total ram usage:       13 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    4
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text6
  1980  001562                     __ptext6:
  1981                           	opt stack 0
  1982  001562                     ___lldiv:
  1983                           	opt stack 26
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;incstack = 0
  1987  001562  0E00               	movlw	0
  1988  001564  0100               	movlb	0	; () banked
  1989  001566  6F85               	movwf	___lldiv@quotient& (0+255),b
  1990  001568  0E00               	movlw	0
  1991  00156A  6F86               	movwf	(___lldiv@quotient+1)& (0+255),b
  1992  00156C  0E00               	movlw	0
  1993  00156E  6F87               	movwf	(___lldiv@quotient+2)& (0+255),b
  1994  001570  0E00               	movlw	0
  1995  001572  6F88               	movwf	(___lldiv@quotient+3)& (0+255),b
  1996                           
  1997                           ; BSR set to: 0
  1998  001574  5181               	movf	___lldiv@divisor& (0+255),w,b
  1999  001576  1182               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  2000  001578  1183               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  2001  00157A  1184               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  2002  00157C  B4D8               	btfsc	status,2,c
  2003  00157E  D02A               	goto	l556
  2004                           
  2005                           ; BSR set to: 0
  2006  001580  0E01               	movlw	1
  2007  001582  6F89               	movwf	___lldiv@counter& (0+255),b
  2008  001584  D006               	goto	l551
  2009  001586                     
  2010                           ; BSR set to: 0
  2011                           
  2012                           ; BSR set to: 0
  2013  001586  90D8               	bcf	status,0,c
  2014  001588  3781               	rlcf	___lldiv@divisor& (0+255),f,b
  2015  00158A  3782               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  2016  00158C  3783               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  2017  00158E  3784               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  2018  001590  2B89               	incf	___lldiv@counter& (0+255),f,b
  2019  001592                     l551:
  2020                           
  2021                           ; BSR set to: 0
  2022                           
  2023                           ; BSR set to: 0
  2024  001592  AF84               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  2025  001594  D7F8               	goto	l552
  2026  001596                     u2810:
  2027                           
  2028                           ; BSR set to: 0
  2029                           
  2030                           ; BSR set to: 0
  2031                           
  2032                           ; BSR set to: 0
  2033  001596  90D8               	bcf	status,0,c
  2034  001598  3785               	rlcf	___lldiv@quotient& (0+255),f,b
  2035  00159A  3786               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  2036  00159C  3787               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  2037  00159E  3788               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  2038                           
  2039                           ; BSR set to: 0
  2040  0015A0  5181               	movf	___lldiv@divisor& (0+255),w,b
  2041  0015A2  5D7D               	subwf	___lldiv@dividend& (0+255),w,b
  2042  0015A4  5182               	movf	(___lldiv@divisor+1)& (0+255),w,b
  2043  0015A6  597E               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  2044  0015A8  5183               	movf	(___lldiv@divisor+2)& (0+255),w,b
  2045  0015AA  597F               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  2046  0015AC  5184               	movf	(___lldiv@divisor+3)& (0+255),w,b
  2047  0015AE  5980               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  2048  0015B0  A0D8               	btfss	status,0,c
  2049  0015B2  D009               	goto	l555
  2050                           
  2051                           ; BSR set to: 0
  2052  0015B4  5181               	movf	___lldiv@divisor& (0+255),w,b
  2053  0015B6  5F7D               	subwf	___lldiv@dividend& (0+255),f,b
  2054  0015B8  5182               	movf	(___lldiv@divisor+1)& (0+255),w,b
  2055  0015BA  5B7E               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  2056  0015BC  5183               	movf	(___lldiv@divisor+2)& (0+255),w,b
  2057  0015BE  5B7F               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  2058  0015C0  5184               	movf	(___lldiv@divisor+3)& (0+255),w,b
  2059  0015C2  5B80               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  2060                           
  2061                           ; BSR set to: 0
  2062  0015C4  8185               	bsf	___lldiv@quotient& (0+255),0,b
  2063  0015C6                     l555:
  2064                           
  2065                           ; BSR set to: 0
  2066                           
  2067                           ; BSR set to: 0
  2068  0015C6  90D8               	bcf	status,0,c
  2069  0015C8  3384               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  2070  0015CA  3383               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  2071  0015CC  3382               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  2072  0015CE  3381               	rrcf	___lldiv@divisor& (0+255),f,b
  2073                           
  2074                           ; BSR set to: 0
  2075  0015D0  2F89               	decfsz	___lldiv@counter& (0+255),f,b
  2076  0015D2  D7E1               	goto	u2810
  2077  0015D4                     l556:
  2078                           
  2079                           ; BSR set to: 0
  2080                           
  2081                           ; BSR set to: 0
  2082  0015D4  C085  F07D         	movff	___lldiv@quotient,?___lldiv
  2083  0015D8  C086  F07E         	movff	___lldiv@quotient+1,?___lldiv+1
  2084  0015DC  C087  F07F         	movff	___lldiv@quotient+2,?___lldiv+2
  2085  0015E0  C088  F080         	movff	___lldiv@quotient+3,?___lldiv+3
  2086                           
  2087                           ; BSR set to: 0
  2088  0015E4  0012               	return		;funcret
  2089  0015E6                     __end_of___lldiv:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           intcon	equ	0xFF2
  2098                           intcon2	equ	0xFF1
  2099                           intcon3	equ	0xFF0
  2100                           postinc0	equ	0xFEE
  2101                           wreg	equ	0xFE8
  2102                           postdec1	equ	0xFE5
  2103                           fsr1l	equ	0xFE1
  2104                           status	equ	0xFD8
  2105                           
  2106 ;; *************** function ___fttol *****************
  2107 ;; Defined at:
  2108 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  f1              3   73[BANK0 ] float 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  lval            4   83[BANK0 ] unsigned long 
  2113 ;;  exp1            1   87[BANK0 ] unsigned char 
  2114 ;;  sign1           1   82[BANK0 ] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  4   73[BANK0 ] long 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         0       4       0       0       0       0       0       0       0
  2125 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2126 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2127 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2128 ;;Total ram usage:       15 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    4
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text7
  2139  000E38                     __ptext7:
  2140                           	opt stack 0
  2141  000E38                     ___fttol:
  2142                           	opt stack 26
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;incstack = 0
  2146  000E38  C0AB  F0AD         	movff	___fttol@f1+2,??___fttol
  2147  000E3C  0100               	movlb	0	; () banked
  2148  000E3E  6BAE               	clrf	(??___fttol+1)& (0+255),b
  2149  000E40  6BAF               	clrf	(??___fttol+2)& (0+255),b
  2150  000E42  35AA               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2151  000E44  37AD               	rlcf	??___fttol& (0+255),f,b
  2152  000E46  E301               	bnc	u2721
  2153  000E48  81AE               	bsf	(??___fttol+1)& (0+255),0,b
  2154  000E4A                     u2721:
  2155  000E4A  51AD               	movf	??___fttol& (0+255),w,b
  2156  000E4C  6FB7               	movwf	___fttol@exp1& (0+255),b
  2157  000E4E  51B7               	movf	___fttol@exp1& (0+255),w,b
  2158  000E50  A4D8               	btfss	status,2,c
  2159  000E52  D009               	goto	l515
  2160                           
  2161                           ; BSR set to: 0
  2162  000E54  0E00               	movlw	0
  2163  000E56  6FA9               	movwf	?___fttol& (0+255),b
  2164  000E58  0E00               	movlw	0
  2165  000E5A  6FAA               	movwf	(?___fttol+1)& (0+255),b
  2166  000E5C  0E00               	movlw	0
  2167  000E5E  6FAB               	movwf	(?___fttol+2)& (0+255),b
  2168  000E60  0E00               	movlw	0
  2169  000E62  6FAC               	movwf	(?___fttol+3)& (0+255),b
  2170                           
  2171                           ; BSR set to: 0
  2172  000E64  0012               	return	
  2173  000E66                     l515:
  2174                           
  2175                           ; BSR set to: 0
  2176                           
  2177                           ; BSR set to: 0
  2178  000E66  0E17               	movlw	23
  2179  000E68  6FAD               	movwf	??___fttol& (0+255),b
  2180  000E6A  C0A9  F0AE         	movff	___fttol@f1,??___fttol+1
  2181  000E6E  C0AA  F0AF         	movff	___fttol@f1+1,??___fttol+2
  2182  000E72  C0AB  F0B0         	movff	___fttol@f1+2,??___fttol+3
  2183  000E76  29AD               	incf	??___fttol& (0+255),w,b
  2184  000E78  6FB1               	movwf	(??___fttol+4)& (0+255),b
  2185  000E7A  D004               	goto	u2740
  2186  000E7C                     u2745:
  2187  000E7C  90D8               	bcf	status,0,c
  2188  000E7E  33B0               	rrcf	(??___fttol+3)& (0+255),f,b
  2189  000E80  33AF               	rrcf	(??___fttol+2)& (0+255),f,b
  2190  000E82  33AE               	rrcf	(??___fttol+1)& (0+255),f,b
  2191  000E84                     u2740:
  2192  000E84  2FB1               	decfsz	(??___fttol+4)& (0+255),f,b
  2193  000E86  D7FA               	goto	u2745
  2194  000E88  0100               	movlb	0	; () banked
  2195  000E8A  51AE               	movf	(??___fttol+1)& (0+255),w,b
  2196  000E8C  6FB2               	movwf	___fttol@sign1& (0+255),b
  2197                           
  2198                           ; BSR set to: 0
  2199  000E8E  8FAA               	bsf	(___fttol@f1+1)& (0+255),7,b
  2200                           
  2201                           ; BSR set to: 0
  2202  000E90  0EFF               	movlw	255
  2203  000E92  17A9               	andwf	___fttol@f1& (0+255),f,b
  2204  000E94  0EFF               	movlw	255
  2205  000E96  17AA               	andwf	(___fttol@f1+1)& (0+255),f,b
  2206  000E98  0E00               	movlw	0
  2207  000E9A  17AB               	andwf	(___fttol@f1+2)& (0+255),f,b
  2208                           
  2209                           ; BSR set to: 0
  2210  000E9C  51A9               	movf	___fttol@f1& (0+255),w,b
  2211  000E9E  6FB3               	movwf	___fttol@lval& (0+255),b
  2212  000EA0  51AA               	movf	(___fttol@f1+1)& (0+255),w,b
  2213  000EA2  6FB4               	movwf	(___fttol@lval+1)& (0+255),b
  2214  000EA4  51AB               	movf	(___fttol@f1+2)& (0+255),w,b
  2215  000EA6  6FB5               	movwf	(___fttol@lval+2)& (0+255),b
  2216  000EA8  6BB6               	clrf	(___fttol@lval+3)& (0+255),b
  2217                           
  2218                           ; BSR set to: 0
  2219  000EAA  0E8E               	movlw	142
  2220  000EAC  5FB7               	subwf	___fttol@exp1& (0+255),f,b
  2221                           
  2222                           ; BSR set to: 0
  2223  000EAE  AFB7               	btfss	___fttol@exp1& (0+255),7,b
  2224  000EB0  D016               	goto	l517
  2225                           
  2226                           ; BSR set to: 0
  2227  000EB2  51B7               	movf	___fttol@exp1& (0+255),w,b
  2228  000EB4  0A80               	xorlw	128
  2229  000EB6  0F8F               	addlw	143
  2230  000EB8  B0D8               	btfsc	status,0,c
  2231  000EBA  D009               	goto	l518
  2232                           
  2233                           ; BSR set to: 0
  2234  000EBC  0E00               	movlw	0
  2235  000EBE  6FA9               	movwf	?___fttol& (0+255),b
  2236  000EC0  0E00               	movlw	0
  2237  000EC2  6FAA               	movwf	(?___fttol+1)& (0+255),b
  2238  000EC4  0E00               	movlw	0
  2239  000EC6  6FAB               	movwf	(?___fttol+2)& (0+255),b
  2240  000EC8  0E00               	movlw	0
  2241  000ECA  6FAC               	movwf	(?___fttol+3)& (0+255),b
  2242                           
  2243                           ; BSR set to: 0
  2244  000ECC  0012               	return	
  2245  000ECE                     l518:
  2246                           
  2247                           ; BSR set to: 0
  2248                           
  2249                           ; BSR set to: 0
  2250                           
  2251                           ; BSR set to: 0
  2252  000ECE  90D8               	bcf	status,0,c
  2253  000ED0  33B6               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2254  000ED2  33B5               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2255  000ED4  33B4               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2256  000ED6  33B3               	rrcf	___fttol@lval& (0+255),f,b
  2257                           
  2258                           ; BSR set to: 0
  2259  000ED8  3FB7               	incfsz	___fttol@exp1& (0+255),f,b
  2260  000EDA  D7F9               	goto	l518
  2261                           
  2262                           ; BSR set to: 0
  2263  000EDC  D015               	goto	u2780
  2264  000EDE                     l517:
  2265                           
  2266                           ; BSR set to: 0
  2267                           
  2268                           ; BSR set to: 0
  2269  000EDE  0E17               	movlw	23
  2270  000EE0  65B7               	cpfsgt	___fttol@exp1& (0+255),b
  2271  000EE2  D00F               	goto	l523
  2272                           
  2273                           ; BSR set to: 0
  2274  000EE4  0E00               	movlw	0
  2275  000EE6  6FA9               	movwf	?___fttol& (0+255),b
  2276  000EE8  0E00               	movlw	0
  2277  000EEA  6FAA               	movwf	(?___fttol+1)& (0+255),b
  2278  000EEC  0E00               	movlw	0
  2279  000EEE  6FAB               	movwf	(?___fttol+2)& (0+255),b
  2280  000EF0  0E00               	movlw	0
  2281  000EF2  6FAC               	movwf	(?___fttol+3)& (0+255),b
  2282                           
  2283                           ; BSR set to: 0
  2284  000EF4  0012               	return	
  2285  000EF6                     
  2286                           ; BSR set to: 0
  2287                           
  2288                           ; BSR set to: 0
  2289  000EF6  90D8               	bcf	status,0,c
  2290  000EF8  37B3               	rlcf	___fttol@lval& (0+255),f,b
  2291  000EFA  37B4               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2292  000EFC  37B5               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2293  000EFE  37B6               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2294  000F00  07B7               	decf	___fttol@exp1& (0+255),f,b
  2295  000F02                     l523:
  2296                           
  2297                           ; BSR set to: 0
  2298                           
  2299                           ; BSR set to: 0
  2300  000F02  51B7               	movf	___fttol@exp1& (0+255),w,b
  2301  000F04  A4D8               	btfss	status,2,c
  2302  000F06  D7F7               	goto	l524
  2303  000F08                     u2780:
  2304                           
  2305                           ; BSR set to: 0
  2306                           
  2307                           ; BSR set to: 0
  2308                           
  2309                           ; BSR set to: 0
  2310  000F08  51B2               	movf	___fttol@sign1& (0+255),w,b
  2311  000F0A  B4D8               	btfsc	status,2,c
  2312  000F0C  D008               	goto	l526
  2313                           
  2314                           ; BSR set to: 0
  2315  000F0E  1FB6               	comf	(___fttol@lval+3)& (0+255),f,b
  2316  000F10  1FB5               	comf	(___fttol@lval+2)& (0+255),f,b
  2317  000F12  1FB4               	comf	(___fttol@lval+1)& (0+255),f,b
  2318  000F14  6DB3               	negf	___fttol@lval& (0+255),b
  2319  000F16  0E00               	movlw	0
  2320  000F18  23B4               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2321  000F1A  23B5               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2322  000F1C  23B6               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2323  000F1E                     l526:
  2324                           
  2325                           ; BSR set to: 0
  2326                           
  2327                           ; BSR set to: 0
  2328  000F1E  C0B3  F0A9         	movff	___fttol@lval,?___fttol
  2329  000F22  C0B4  F0AA         	movff	___fttol@lval+1,?___fttol+1
  2330  000F26  C0B5  F0AB         	movff	___fttol@lval+2,?___fttol+2
  2331  000F2A  C0B6  F0AC         	movff	___fttol@lval+3,?___fttol+3
  2332  000F2E  0012               	return	
  2333  000F30                     __end_of___fttol:
  2334                           	opt stack 0
  2335                           tblptru	equ	0xFF8
  2336                           tblptrh	equ	0xFF7
  2337                           tblptrl	equ	0xFF6
  2338                           tablat	equ	0xFF5
  2339                           prodh	equ	0xFF4
  2340                           prodl	equ	0xFF3
  2341                           intcon	equ	0xFF2
  2342                           intcon2	equ	0xFF1
  2343                           intcon3	equ	0xFF0
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           postdec1	equ	0xFE5
  2347                           fsr1l	equ	0xFE1
  2348                           status	equ	0xFD8
  2349                           
  2350 ;; *************** function ___ftmul *****************
  2351 ;; Defined at:
  2352 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  f1              3   46[BANK0 ] float 
  2355 ;;  f2              3   49[BANK0 ] float 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  f3_as_produc    3   56[BANK0 ] unsigned um
  2358 ;;  sign            1   60[BANK0 ] unsigned char 
  2359 ;;  cntr            1   59[BANK0 ] unsigned char 
  2360 ;;  exp             1   55[BANK0 ] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  3   46[BANK0 ] float 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2370 ;;      Params:         0       6       0       0       0       0       0       0       0
  2371 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2372 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2373 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2374 ;;Total ram usage:       15 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    5
  2377 ;; This function calls:
  2378 ;;		___ftpack
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text8
  2385  001028                     __ptext8:
  2386                           	opt stack 0
  2387  001028                     ___ftmul:
  2388                           	opt stack 25
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;incstack = 0
  2392  001028  C090  F094         	movff	___ftmul@f1+2,??___ftmul
  2393  00102C  0100               	movlb	0	; () banked
  2394  00102E  6B95               	clrf	(??___ftmul+1)& (0+255),b
  2395  001030  6B96               	clrf	(??___ftmul+2)& (0+255),b
  2396  001032  358F               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2397  001034  3794               	rlcf	??___ftmul& (0+255),f,b
  2398  001036  E301               	bnc	u2541
  2399  001038  8195               	bsf	(??___ftmul+1)& (0+255),0,b
  2400  00103A                     u2541:
  2401  00103A  5194               	movf	??___ftmul& (0+255),w,b
  2402  00103C  6F97               	movwf	___ftmul@exp& (0+255),b
  2403  00103E  5197               	movf	___ftmul@exp& (0+255),w,b
  2404  001040  A4D8               	btfss	status,2,c
  2405  001042  D007               	goto	l494
  2406                           
  2407                           ; BSR set to: 0
  2408  001044  0E00               	movlw	0
  2409  001046  6F8E               	movwf	?___ftmul& (0+255),b
  2410  001048  0E00               	movlw	0
  2411  00104A  6F8F               	movwf	(?___ftmul+1)& (0+255),b
  2412  00104C  0E00               	movlw	0
  2413  00104E  6F90               	movwf	(?___ftmul+2)& (0+255),b
  2414                           
  2415                           ; BSR set to: 0
  2416  001050  0012               	return	
  2417  001052                     l494:
  2418                           
  2419                           ; BSR set to: 0
  2420                           
  2421                           ; BSR set to: 0
  2422  001052  C093  F094         	movff	___ftmul@f2+2,??___ftmul
  2423  001056  6B95               	clrf	(??___ftmul+1)& (0+255),b
  2424  001058  6B96               	clrf	(??___ftmul+2)& (0+255),b
  2425  00105A  3592               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2426  00105C  3794               	rlcf	??___ftmul& (0+255),f,b
  2427  00105E  E301               	bnc	u2561
  2428  001060  8195               	bsf	(??___ftmul+1)& (0+255),0,b
  2429  001062                     u2561:
  2430  001062  5194               	movf	??___ftmul& (0+255),w,b
  2431  001064  6F9C               	movwf	___ftmul@sign& (0+255),b
  2432  001066  519C               	movf	___ftmul@sign& (0+255),w,b
  2433  001068  A4D8               	btfss	status,2,c
  2434  00106A  D007               	goto	l496
  2435                           
  2436                           ; BSR set to: 0
  2437  00106C  0E00               	movlw	0
  2438  00106E  6F8E               	movwf	?___ftmul& (0+255),b
  2439  001070  0E00               	movlw	0
  2440  001072  6F8F               	movwf	(?___ftmul+1)& (0+255),b
  2441  001074  0E00               	movlw	0
  2442  001076  6F90               	movwf	(?___ftmul+2)& (0+255),b
  2443                           
  2444                           ; BSR set to: 0
  2445  001078  0012               	return	
  2446  00107A                     l496:
  2447                           
  2448                           ; BSR set to: 0
  2449                           
  2450                           ; BSR set to: 0
  2451  00107A  519C               	movf	___ftmul@sign& (0+255),w,b
  2452  00107C  0F7B               	addlw	123
  2453  00107E  2797               	addwf	___ftmul@exp& (0+255),f,b
  2454                           
  2455                           ; BSR set to: 0
  2456  001080  C090  F09C         	movff	___ftmul@f1+2,___ftmul@sign
  2457  001084  5193               	movf	(___ftmul@f2+2)& (0+255),w,b
  2458  001086  1B9C               	xorwf	___ftmul@sign& (0+255),f,b
  2459  001088  0E80               	movlw	128
  2460  00108A  179C               	andwf	___ftmul@sign& (0+255),f,b
  2461                           
  2462                           ; BSR set to: 0
  2463  00108C  8F8F               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2464                           
  2465                           ; BSR set to: 0
  2466  00108E  8F92               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2467                           
  2468                           ; BSR set to: 0
  2469  001090  0EFF               	movlw	255
  2470  001092  1791               	andwf	___ftmul@f2& (0+255),f,b
  2471  001094  0EFF               	movlw	255
  2472  001096  1792               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2473  001098  0E00               	movlw	0
  2474  00109A  1793               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2475                           
  2476                           ; BSR set to: 0
  2477  00109C  0E00               	movlw	0
  2478  00109E  6F98               	movwf	___ftmul@f3_as_product& (0+255),b
  2479  0010A0  0E00               	movlw	0
  2480  0010A2  6F99               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2481  0010A4  0E00               	movlw	0
  2482  0010A6  6F9A               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2483                           
  2484                           ; BSR set to: 0
  2485  0010A8  0E07               	movlw	7
  2486  0010AA  6F9B               	movwf	___ftmul@cntr& (0+255),b
  2487  0010AC                     
  2488                           ; BSR set to: 0
  2489                           
  2490                           ; BSR set to: 0
  2491  0010AC  A18E               	btfss	___ftmul@f1& (0+255),0,b
  2492  0010AE  D006               	goto	l498
  2493                           
  2494                           ; BSR set to: 0
  2495  0010B0  5191               	movf	___ftmul@f2& (0+255),w,b
  2496  0010B2  2798               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2497  0010B4  5192               	movf	(___ftmul@f2+1)& (0+255),w,b
  2498  0010B6  2399               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2499  0010B8  5193               	movf	(___ftmul@f2+2)& (0+255),w,b
  2500  0010BA  239A               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2501  0010BC                     l498:
  2502                           
  2503                           ; BSR set to: 0
  2504                           
  2505                           ; BSR set to: 0
  2506  0010BC  90D8               	bcf	status,0,c
  2507  0010BE  3390               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2508  0010C0  338F               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2509  0010C2  338E               	rrcf	___ftmul@f1& (0+255),f,b
  2510  0010C4  90D8               	bcf	status,0,c
  2511  0010C6  3791               	rlcf	___ftmul@f2& (0+255),f,b
  2512  0010C8  3792               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2513  0010CA  3793               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2514                           
  2515                           ; BSR set to: 0
  2516  0010CC  2F9B               	decfsz	___ftmul@cntr& (0+255),f,b
  2517  0010CE  D7EE               	goto	l497
  2518                           
  2519                           ; BSR set to: 0
  2520                           
  2521                           ; BSR set to: 0
  2522  0010D0  0E09               	movlw	9
  2523  0010D2  6F9B               	movwf	___ftmul@cntr& (0+255),b
  2524  0010D4                     
  2525                           ; BSR set to: 0
  2526                           
  2527                           ; BSR set to: 0
  2528  0010D4  A18E               	btfss	___ftmul@f1& (0+255),0,b
  2529  0010D6  D006               	goto	l501
  2530                           
  2531                           ; BSR set to: 0
  2532  0010D8  5191               	movf	___ftmul@f2& (0+255),w,b
  2533  0010DA  2798               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2534  0010DC  5192               	movf	(___ftmul@f2+1)& (0+255),w,b
  2535  0010DE  2399               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2536  0010E0  5193               	movf	(___ftmul@f2+2)& (0+255),w,b
  2537  0010E2  239A               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2538  0010E4                     l501:
  2539                           
  2540                           ; BSR set to: 0
  2541                           
  2542                           ; BSR set to: 0
  2543  0010E4  90D8               	bcf	status,0,c
  2544  0010E6  3390               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2545  0010E8  338F               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2546  0010EA  338E               	rrcf	___ftmul@f1& (0+255),f,b
  2547  0010EC  90D8               	bcf	status,0,c
  2548  0010EE  339A               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2549  0010F0  3399               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2550  0010F2  3398               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2551                           
  2552                           ; BSR set to: 0
  2553  0010F4  2F9B               	decfsz	___ftmul@cntr& (0+255),f,b
  2554  0010F6  D7EE               	goto	l500
  2555                           
  2556                           ; BSR set to: 0
  2557                           
  2558                           ; BSR set to: 0
  2559  0010F8  C098  F07D         	movff	___ftmul@f3_as_product,___ftpack@arg
  2560  0010FC  C099  F07E         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2561  001100  C09A  F07F         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2562  001104  C097  F080         	movff	___ftmul@exp,___ftpack@exp
  2563  001108  C09C  F081         	movff	___ftmul@sign,___ftpack@sign
  2564  00110C  EC69  F009         	call	___ftpack	;wreg free
  2565  001110  C07D  F08E         	movff	?___ftpack,?___ftmul
  2566  001114  C07E  F08F         	movff	?___ftpack+1,?___ftmul+1
  2567  001118  C07F  F090         	movff	?___ftpack+2,?___ftmul+2
  2568  00111C  0012               	return	
  2569  00111E                     __end_of___ftmul:
  2570                           	opt stack 0
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           prodh	equ	0xFF4
  2576                           prodl	equ	0xFF3
  2577                           intcon	equ	0xFF2
  2578                           intcon2	equ	0xFF1
  2579                           intcon3	equ	0xFF0
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           postdec1	equ	0xFE5
  2583                           fsr1l	equ	0xFE1
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function ___ftadd *****************
  2587 ;; Defined at:
  2588 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  f1              3   61[BANK0 ] float 
  2591 ;;  f2              3   64[BANK0 ] float 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  exp1            1   72[BANK0 ] unsigned char 
  2594 ;;  exp2            1   71[BANK0 ] unsigned char 
  2595 ;;  sign            1   70[BANK0 ] unsigned char 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  3   61[BANK0 ] float 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2605 ;;      Params:         0       6       0       0       0       0       0       0       0
  2606 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2607 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2608 ;;      Totals:         0      12       0       0       0       0       0       0       0
  2609 ;;Total ram usage:       12 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    5
  2612 ;; This function calls:
  2613 ;;		___ftpack
  2614 ;; This function is called by:
  2615 ;;		_main
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text9
  2620  000C8A                     __ptext9:
  2621                           	opt stack 0
  2622  000C8A                     ___ftadd:
  2623                           	opt stack 25
  2624                           
  2625                           ;incstack = 0
  2626  000C8A  C09F  F0A3         	movff	___ftadd@f1+2,??___ftadd
  2627  000C8E  0100               	movlb	0	; () banked
  2628  000C90  6BA4               	clrf	(??___ftadd+1)& (0+255),b
  2629  000C92  6BA5               	clrf	(??___ftadd+2)& (0+255),b
  2630  000C94  359E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2631  000C96  37A3               	rlcf	??___ftadd& (0+255),f,b
  2632  000C98  E301               	bnc	u2331
  2633  000C9A  81A4               	bsf	(??___ftadd+1)& (0+255),0,b
  2634  000C9C                     u2331:
  2635  000C9C  51A3               	movf	??___ftadd& (0+255),w,b
  2636  000C9E  6FA8               	movwf	___ftadd@exp1& (0+255),b
  2637  000CA0  C0A2  F0A3         	movff	___ftadd@f2+2,??___ftadd
  2638  000CA4  6BA4               	clrf	(??___ftadd+1)& (0+255),b
  2639  000CA6  6BA5               	clrf	(??___ftadd+2)& (0+255),b
  2640  000CA8  35A1               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2641  000CAA  37A3               	rlcf	??___ftadd& (0+255),f,b
  2642  000CAC  E301               	bnc	u2341
  2643  000CAE  81A4               	bsf	(??___ftadd+1)& (0+255),0,b
  2644  000CB0                     u2341:
  2645  000CB0  51A3               	movf	??___ftadd& (0+255),w,b
  2646  000CB2  6FA7               	movwf	___ftadd@exp2& (0+255),b
  2647                           
  2648                           ; BSR set to: 0
  2649  000CB4  51A8               	movf	___ftadd@exp1& (0+255),w,b
  2650  000CB6  B4D8               	btfsc	status,2,c
  2651  000CB8  D00B               	goto	u2370
  2652                           
  2653                           ; BSR set to: 0
  2654  000CBA  51A7               	movf	___ftadd@exp2& (0+255),w,b
  2655  000CBC  5DA8               	subwf	___ftadd@exp1& (0+255),w,b
  2656  000CBE  B0D8               	btfsc	status,0,c
  2657  000CC0  D00E               	goto	l446
  2658                           
  2659                           ; BSR set to: 0
  2660  000CC2  51A8               	movf	___ftadd@exp1& (0+255),w,b
  2661  000CC4  0800               	sublw	0
  2662  000CC6  25A7               	addwf	___ftadd@exp2& (0+255),w,b
  2663  000CC8  6FA3               	movwf	??___ftadd& (0+255),b
  2664  000CCA  0E18               	movlw	24
  2665  000CCC  65A3               	cpfsgt	??___ftadd& (0+255),b
  2666  000CCE  D007               	goto	l446
  2667  000CD0                     u2370:
  2668                           
  2669                           ; BSR set to: 0
  2670  000CD0  C0A0  F09D         	movff	___ftadd@f2,?___ftadd
  2671  000CD4  C0A1  F09E         	movff	___ftadd@f2+1,?___ftadd+1
  2672  000CD8  C0A2  F09F         	movff	___ftadd@f2+2,?___ftadd+2
  2673  000CDC  0012               	return	
  2674  000CDE                     l446:
  2675                           
  2676                           ; BSR set to: 0
  2677                           
  2678                           ; BSR set to: 0
  2679  000CDE  51A7               	movf	___ftadd@exp2& (0+255),w,b
  2680  000CE0  B4D8               	btfsc	status,2,c
  2681  000CE2  D00B               	goto	u2400
  2682                           
  2683                           ; BSR set to: 0
  2684  000CE4  51A8               	movf	___ftadd@exp1& (0+255),w,b
  2685  000CE6  5DA7               	subwf	___ftadd@exp2& (0+255),w,b
  2686  000CE8  B0D8               	btfsc	status,0,c
  2687  000CEA  D00E               	goto	l450
  2688                           
  2689                           ; BSR set to: 0
  2690  000CEC  51A7               	movf	___ftadd@exp2& (0+255),w,b
  2691  000CEE  0800               	sublw	0
  2692  000CF0  25A8               	addwf	___ftadd@exp1& (0+255),w,b
  2693  000CF2  6FA3               	movwf	??___ftadd& (0+255),b
  2694  000CF4  0E18               	movlw	24
  2695  000CF6  65A3               	cpfsgt	??___ftadd& (0+255),b
  2696  000CF8  D007               	goto	l450
  2697  000CFA                     u2400:
  2698                           
  2699                           ; BSR set to: 0
  2700  000CFA  C09D  F09D         	movff	___ftadd@f1,?___ftadd
  2701  000CFE  C09E  F09E         	movff	___ftadd@f1+1,?___ftadd+1
  2702  000D02  C09F  F09F         	movff	___ftadd@f1+2,?___ftadd+2
  2703  000D06  0012               	return	
  2704  000D08                     l450:
  2705                           
  2706                           ; BSR set to: 0
  2707                           
  2708                           ; BSR set to: 0
  2709  000D08  0E06               	movlw	6
  2710  000D0A  6FA6               	movwf	___ftadd@sign& (0+255),b
  2711                           
  2712                           ; BSR set to: 0
  2713  000D0C  BF9F               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  2714                           
  2715                           ; BSR set to: 0
  2716  000D0E  8FA6               	bsf	___ftadd@sign& (0+255),7,b
  2717                           
  2718                           ; BSR set to: 0
  2719                           
  2720                           ; BSR set to: 0
  2721  000D10  BFA2               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  2722                           
  2723                           ; BSR set to: 0
  2724  000D12  8DA6               	bsf	___ftadd@sign& (0+255),6,b
  2725                           
  2726                           ; BSR set to: 0
  2727  000D14  8F9E               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2728                           
  2729                           ; BSR set to: 0
  2730  000D16  0EFF               	movlw	255
  2731  000D18  179D               	andwf	___ftadd@f1& (0+255),f,b
  2732  000D1A  0EFF               	movlw	255
  2733  000D1C  179E               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2734  000D1E  0E00               	movlw	0
  2735  000D20  179F               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2736  000D22  8FA1               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2737                           
  2738                           ; BSR set to: 0
  2739  000D24  0EFF               	movlw	255
  2740  000D26  17A0               	andwf	___ftadd@f2& (0+255),f,b
  2741  000D28  0EFF               	movlw	255
  2742  000D2A  17A1               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2743  000D2C  0E00               	movlw	0
  2744  000D2E  17A2               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2745                           
  2746                           ; BSR set to: 0
  2747  000D30  51A7               	movf	___ftadd@exp2& (0+255),w,b
  2748  000D32  5DA8               	subwf	___ftadd@exp1& (0+255),w,b
  2749  000D34  B0D8               	btfsc	status,0,c
  2750  000D36  D01B               	goto	l455
  2751  000D38                     u2430:
  2752                           
  2753                           ; BSR set to: 0
  2754                           
  2755                           ; BSR set to: 0
  2756  000D38  90D8               	bcf	status,0,c
  2757  000D3A  37A0               	rlcf	___ftadd@f2& (0+255),f,b
  2758  000D3C  37A1               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2759  000D3E  37A2               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2760  000D40  07A7               	decf	___ftadd@exp2& (0+255),f,b
  2761                           
  2762                           ; BSR set to: 0
  2763  000D42  51A8               	movf	___ftadd@exp1& (0+255),w,b
  2764  000D44  19A7               	xorwf	___ftadd@exp2& (0+255),w,b
  2765  000D46  B4D8               	btfsc	status,2,c
  2766  000D48  D00D               	goto	l460
  2767                           
  2768                           ; BSR set to: 0
  2769  000D4A  07A6               	decf	___ftadd@sign& (0+255),f,b
  2770  000D4C  C0A6  F0A3         	movff	___ftadd@sign,??___ftadd
  2771  000D50  0E07               	movlw	7
  2772  000D52  17A3               	andwf	??___ftadd& (0+255),f,b
  2773  000D54  B4D8               	btfsc	status,2,c
  2774  000D56  D006               	goto	l460
  2775  000D58  D7EF               	goto	u2430
  2776  000D5A                     
  2777                           ; BSR set to: 0
  2778                           
  2779                           ; BSR set to: 0
  2780  000D5A  90D8               	bcf	status,0,c
  2781  000D5C  339F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2782  000D5E  339E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2783  000D60  339D               	rrcf	___ftadd@f1& (0+255),f,b
  2784  000D62  2BA8               	incf	___ftadd@exp1& (0+255),f,b
  2785  000D64                     l460:
  2786                           
  2787                           ; BSR set to: 0
  2788                           
  2789                           ; BSR set to: 0
  2790  000D64  51A7               	movf	___ftadd@exp2& (0+255),w,b
  2791  000D66  19A8               	xorwf	___ftadd@exp1& (0+255),w,b
  2792  000D68  B4D8               	btfsc	status,2,c
  2793  000D6A  D01F               	goto	u2500
  2794  000D6C  D7F6               	goto	l461
  2795  000D6E                     l455:
  2796                           
  2797                           ; BSR set to: 0
  2798                           
  2799                           ; BSR set to: 0
  2800  000D6E  51A8               	movf	___ftadd@exp1& (0+255),w,b
  2801  000D70  5DA7               	subwf	___ftadd@exp2& (0+255),w,b
  2802  000D72  B0D8               	btfsc	status,0,c
  2803  000D74  D01A               	goto	u2500
  2804  000D76                     u2470:
  2805                           
  2806                           ; BSR set to: 0
  2807                           
  2808                           ; BSR set to: 0
  2809  000D76  90D8               	bcf	status,0,c
  2810  000D78  379D               	rlcf	___ftadd@f1& (0+255),f,b
  2811  000D7A  379E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2812  000D7C  379F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2813  000D7E  07A8               	decf	___ftadd@exp1& (0+255),f,b
  2814                           
  2815                           ; BSR set to: 0
  2816  000D80  51A8               	movf	___ftadd@exp1& (0+255),w,b
  2817  000D82  19A7               	xorwf	___ftadd@exp2& (0+255),w,b
  2818  000D84  B4D8               	btfsc	status,2,c
  2819  000D86  D00D               	goto	l469
  2820                           
  2821                           ; BSR set to: 0
  2822  000D88  07A6               	decf	___ftadd@sign& (0+255),f,b
  2823  000D8A  C0A6  F0A3         	movff	___ftadd@sign,??___ftadd
  2824  000D8E  0E07               	movlw	7
  2825  000D90  17A3               	andwf	??___ftadd& (0+255),f,b
  2826  000D92  B4D8               	btfsc	status,2,c
  2827  000D94  D006               	goto	l469
  2828  000D96  D7EF               	goto	u2470
  2829  000D98                     
  2830                           ; BSR set to: 0
  2831                           
  2832                           ; BSR set to: 0
  2833  000D98  90D8               	bcf	status,0,c
  2834  000D9A  33A2               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2835  000D9C  33A1               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2836  000D9E  33A0               	rrcf	___ftadd@f2& (0+255),f,b
  2837  000DA0  2BA7               	incf	___ftadd@exp2& (0+255),f,b
  2838  000DA2                     l469:
  2839                           
  2840                           ; BSR set to: 0
  2841                           
  2842                           ; BSR set to: 0
  2843  000DA2  51A7               	movf	___ftadd@exp2& (0+255),w,b
  2844  000DA4  19A8               	xorwf	___ftadd@exp1& (0+255),w,b
  2845  000DA6  A4D8               	btfss	status,2,c
  2846  000DA8  D7F7               	goto	l470
  2847  000DAA                     u2500:
  2848                           
  2849                           ; BSR set to: 0
  2850                           
  2851                           ; BSR set to: 0
  2852                           
  2853                           ; BSR set to: 0
  2854  000DAA  AFA6               	btfss	___ftadd@sign& (0+255),7,b
  2855  000DAC  D00C               	goto	l472
  2856                           
  2857                           ; BSR set to: 0
  2858  000DAE  0EFF               	movlw	255
  2859  000DB0  1B9D               	xorwf	___ftadd@f1& (0+255),f,b
  2860  000DB2  0EFF               	movlw	255
  2861  000DB4  1B9E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2862  000DB6  0EFF               	movlw	255
  2863  000DB8  1B9F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2864  000DBA  0E01               	movlw	1
  2865  000DBC  279D               	addwf	___ftadd@f1& (0+255),f,b
  2866  000DBE  0E00               	movlw	0
  2867  000DC0  239E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2868  000DC2  0E00               	movlw	0
  2869  000DC4  239F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2870  000DC6                     l472:
  2871                           
  2872                           ; BSR set to: 0
  2873  000DC6  ADA6               	btfss	___ftadd@sign& (0+255),6,b
  2874  000DC8  D00C               	goto	l473
  2875                           
  2876                           ; BSR set to: 0
  2877  000DCA  0EFF               	movlw	255
  2878  000DCC  1BA0               	xorwf	___ftadd@f2& (0+255),f,b
  2879  000DCE  0EFF               	movlw	255
  2880  000DD0  1BA1               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2881  000DD2  0EFF               	movlw	255
  2882  000DD4  1BA2               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2883  000DD6  0E01               	movlw	1
  2884  000DD8  27A0               	addwf	___ftadd@f2& (0+255),f,b
  2885  000DDA  0E00               	movlw	0
  2886  000DDC  23A1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2887  000DDE  0E00               	movlw	0
  2888  000DE0  23A2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2889  000DE2                     l473:
  2890                           
  2891                           ; BSR set to: 0
  2892                           
  2893                           ; BSR set to: 0
  2894  000DE2  0E00               	movlw	0
  2895  000DE4  6FA6               	movwf	___ftadd@sign& (0+255),b
  2896                           
  2897                           ; BSR set to: 0
  2898  000DE6  519D               	movf	___ftadd@f1& (0+255),w,b
  2899  000DE8  27A0               	addwf	___ftadd@f2& (0+255),f,b
  2900  000DEA  519E               	movf	(___ftadd@f1+1)& (0+255),w,b
  2901  000DEC  23A1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2902  000DEE  519F               	movf	(___ftadd@f1+2)& (0+255),w,b
  2903  000DF0  23A2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2904                           
  2905                           ; BSR set to: 0
  2906  000DF2  AFA2               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2907  000DF4  D00E               	goto	l474
  2908                           
  2909                           ; BSR set to: 0
  2910  000DF6  0EFF               	movlw	255
  2911  000DF8  1BA0               	xorwf	___ftadd@f2& (0+255),f,b
  2912  000DFA  0EFF               	movlw	255
  2913  000DFC  1BA1               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2914  000DFE  0EFF               	movlw	255
  2915  000E00  1BA2               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2916  000E02  0E01               	movlw	1
  2917  000E04  27A0               	addwf	___ftadd@f2& (0+255),f,b
  2918  000E06  0E00               	movlw	0
  2919  000E08  23A1               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2920  000E0A  0E00               	movlw	0
  2921  000E0C  23A2               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2922                           
  2923                           ; BSR set to: 0
  2924  000E0E  0E01               	movlw	1
  2925  000E10  6FA6               	movwf	___ftadd@sign& (0+255),b
  2926  000E12                     l474:
  2927                           
  2928                           ; BSR set to: 0
  2929                           
  2930                           ; BSR set to: 0
  2931  000E12  C0A0  F07D         	movff	___ftadd@f2,___ftpack@arg
  2932  000E16  C0A1  F07E         	movff	___ftadd@f2+1,___ftpack@arg+1
  2933  000E1A  C0A2  F07F         	movff	___ftadd@f2+2,___ftpack@arg+2
  2934  000E1E  C0A8  F080         	movff	___ftadd@exp1,___ftpack@exp
  2935  000E22  C0A6  F081         	movff	___ftadd@sign,___ftpack@sign
  2936  000E26  EC69  F009         	call	___ftpack	;wreg free
  2937  000E2A  C07D  F09D         	movff	?___ftpack,?___ftadd
  2938  000E2E  C07E  F09E         	movff	?___ftpack+1,?___ftadd+1
  2939  000E32  C07F  F09F         	movff	?___ftpack+2,?___ftadd+2
  2940  000E36  0012               	return	
  2941  000E38                     __end_of___ftadd:
  2942                           	opt stack 0
  2943                           tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           prodh	equ	0xFF4
  2948                           prodl	equ	0xFF3
  2949                           intcon	equ	0xFF2
  2950                           intcon2	equ	0xFF1
  2951                           intcon3	equ	0xFF0
  2952                           postinc0	equ	0xFEE
  2953                           wreg	equ	0xFE8
  2954                           postdec1	equ	0xFE5
  2955                           fsr1l	equ	0xFE1
  2956                           status	equ	0xFD8
  2957                           
  2958 ;; *************** function ___ftpack *****************
  2959 ;; Defined at:
  2960 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  arg             3   29[BANK0 ] unsigned um
  2963 ;;  exp             1   32[BANK0 ] unsigned char 
  2964 ;;  sign            1   33[BANK0 ] unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  3   29[BANK0 ] float 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2976 ;;      Params:         0       5       0       0       0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2978 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2979 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2980 ;;Total ram usage:        8 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    4
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		___ftadd
  2987 ;;		___ftmul
  2988 ;;		___lltoft
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text10
  2993  0012D2                     __ptext10:
  2994                           	opt stack 0
  2995  0012D2                     ___ftpack:
  2996                           	opt stack 25
  2997                           
  2998                           ;incstack = 0
  2999  0012D2  0100               	movlb	0	; () banked
  3000  0012D4  5180               	movf	___ftpack@exp& (0+255),w,b
  3001  0012D6  B4D8               	btfsc	status,2,c
  3002  0012D8  D005               	goto	u2170
  3003                           
  3004                           ; BSR set to: 0
  3005  0012DA  517D               	movf	___ftpack@arg& (0+255),w,b
  3006  0012DC  117E               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  3007  0012DE  117F               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  3008  0012E0  A4D8               	btfss	status,2,c
  3009  0012E2  D00C               	goto	l415
  3010  0012E4                     u2170:
  3011                           
  3012                           ; BSR set to: 0
  3013                           
  3014                           ; BSR set to: 0
  3015  0012E4  0E00               	movlw	0
  3016  0012E6  6F7D               	movwf	?___ftpack& (0+255),b
  3017  0012E8  0E00               	movlw	0
  3018  0012EA  6F7E               	movwf	(?___ftpack+1)& (0+255),b
  3019  0012EC  0E00               	movlw	0
  3020  0012EE  6F7F               	movwf	(?___ftpack+2)& (0+255),b
  3021                           
  3022                           ; BSR set to: 0
  3023  0012F0  0012               	return	
  3024  0012F2                     
  3025                           ; BSR set to: 0
  3026                           
  3027                           ; BSR set to: 0
  3028  0012F2  2B80               	incf	___ftpack@exp& (0+255),f,b
  3029  0012F4  90D8               	bcf	status,0,c
  3030  0012F6  337F               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3031  0012F8  337E               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3032  0012FA  337D               	rrcf	___ftpack@arg& (0+255),f,b
  3033  0012FC                     l415:
  3034                           
  3035                           ; BSR set to: 0
  3036                           
  3037                           ; BSR set to: 0
  3038  0012FC  0E00               	movlw	0
  3039  0012FE  157D               	andwf	___ftpack@arg& (0+255),w,b
  3040  001300  6F82               	movwf	??___ftpack& (0+255),b
  3041  001302  0E00               	movlw	0
  3042  001304  157E               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3043  001306  6F83               	movwf	(??___ftpack+1)& (0+255),b
  3044  001308  0EFE               	movlw	254
  3045  00130A  157F               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3046  00130C  6F84               	movwf	(??___ftpack+2)& (0+255),b
  3047  00130E  5182               	movf	??___ftpack& (0+255),w,b
  3048  001310  1183               	iorwf	(??___ftpack+1)& (0+255),w,b
  3049  001312  1184               	iorwf	(??___ftpack+2)& (0+255),w,b
  3050  001314  B4D8               	btfsc	status,2,c
  3051  001316  D00C               	goto	l418
  3052  001318  D7EC               	goto	l416
  3053  00131A                     
  3054                           ; BSR set to: 0
  3055                           
  3056                           ; BSR set to: 0
  3057  00131A  2B80               	incf	___ftpack@exp& (0+255),f,b
  3058                           
  3059                           ; BSR set to: 0
  3060  00131C  0E01               	movlw	1
  3061  00131E  277D               	addwf	___ftpack@arg& (0+255),f,b
  3062  001320  0E00               	movlw	0
  3063  001322  237E               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  3064  001324  0E00               	movlw	0
  3065  001326  237F               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  3066  001328  90D8               	bcf	status,0,c
  3067  00132A  337F               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  3068  00132C  337E               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  3069  00132E  337D               	rrcf	___ftpack@arg& (0+255),f,b
  3070  001330                     l418:
  3071                           
  3072                           ; BSR set to: 0
  3073                           
  3074                           ; BSR set to: 0
  3075  001330  0E00               	movlw	0
  3076  001332  157D               	andwf	___ftpack@arg& (0+255),w,b
  3077  001334  6F82               	movwf	??___ftpack& (0+255),b
  3078  001336  0E00               	movlw	0
  3079  001338  157E               	andwf	(___ftpack@arg+1)& (0+255),w,b
  3080  00133A  6F83               	movwf	(??___ftpack+1)& (0+255),b
  3081  00133C  0EFF               	movlw	255
  3082  00133E  157F               	andwf	(___ftpack@arg+2)& (0+255),w,b
  3083  001340  6F84               	movwf	(??___ftpack+2)& (0+255),b
  3084  001342  5182               	movf	??___ftpack& (0+255),w,b
  3085  001344  1183               	iorwf	(??___ftpack+1)& (0+255),w,b
  3086  001346  1184               	iorwf	(??___ftpack+2)& (0+255),w,b
  3087  001348  B4D8               	btfsc	status,2,c
  3088  00134A  D006               	goto	l421
  3089  00134C  D7E6               	goto	l419
  3090  00134E                     
  3091                           ; BSR set to: 0
  3092                           
  3093                           ; BSR set to: 0
  3094  00134E  0780               	decf	___ftpack@exp& (0+255),f,b
  3095  001350  90D8               	bcf	status,0,c
  3096  001352  377D               	rlcf	___ftpack@arg& (0+255),f,b
  3097  001354  377E               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  3098  001356  377F               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  3099  001358                     l421:
  3100                           
  3101                           ; BSR set to: 0
  3102                           
  3103                           ; BSR set to: 0
  3104  001358  BF7E               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  3105  00135A  D003               	goto	u2210
  3106                           
  3107                           ; BSR set to: 0
  3108  00135C  0E02               	movlw	2
  3109  00135E  6180               	cpfslt	___ftpack@exp& (0+255),b
  3110  001360  D7F6               	goto	l422
  3111  001362                     u2210:
  3112                           
  3113                           ; BSR set to: 0
  3114                           
  3115                           ; BSR set to: 0
  3116  001362  A180               	btfss	___ftpack@exp& (0+255),0,b
  3117                           
  3118                           ; BSR set to: 0
  3119  001364  9F7E               	bcf	(___ftpack@arg+1)& (0+255),7,b
  3120                           
  3121                           ; BSR set to: 0
  3122                           
  3123                           ; BSR set to: 0
  3124  001366  90D8               	bcf	status,0,c
  3125  001368  3380               	rrcf	___ftpack@exp& (0+255),f,b
  3126  00136A  5180               	movf	___ftpack@exp& (0+255),w,b
  3127  00136C  137F               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  3128                           
  3129                           ; BSR set to: 0
  3130  00136E  5181               	movf	___ftpack@sign& (0+255),w,b
  3131  001370  A4D8               	btfss	status,2,c
  3132                           
  3133                           ; BSR set to: 0
  3134  001372  8F7F               	bsf	(___ftpack@arg+2)& (0+255),7,b
  3135                           
  3136                           ; BSR set to: 0
  3137                           
  3138                           ; BSR set to: 0
  3139  001374  C07D  F07D         	movff	___ftpack@arg,?___ftpack
  3140  001378  C07E  F07E         	movff	___ftpack@arg+1,?___ftpack+1
  3141  00137C  C07F  F07F         	movff	___ftpack@arg+2,?___ftpack+2
  3142  001380  0012               	return	
  3143  001382                     __end_of___ftpack:
  3144                           	opt stack 0
  3145                           tblptru	equ	0xFF8
  3146                           tblptrh	equ	0xFF7
  3147                           tblptrl	equ	0xFF6
  3148                           tablat	equ	0xFF5
  3149                           prodh	equ	0xFF4
  3150                           prodl	equ	0xFF3
  3151                           intcon	equ	0xFF2
  3152                           intcon2	equ	0xFF1
  3153                           intcon3	equ	0xFF0
  3154                           postinc0	equ	0xFEE
  3155                           wreg	equ	0xFE8
  3156                           postdec1	equ	0xFE5
  3157                           fsr1l	equ	0xFE1
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function ___awmod *****************
  3161 ;; Defined at:
  3162 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  dividend        2   29[BANK0 ] int 
  3165 ;;  divisor         2   31[BANK0 ] int 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  sign            1   34[BANK0 ] unsigned char 
  3168 ;;  counter         1   33[BANK0 ] unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  2   29[BANK0 ] int 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3178 ;;      Params:         0       4       0       0       0       0       0       0       0
  3179 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3181 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3182 ;;Total ram usage:        6 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    4
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text11
  3193  0015E6                     __ptext11:
  3194                           	opt stack 0
  3195  0015E6                     ___awmod:
  3196                           	opt stack 26
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;incstack = 0
  3200  0015E6  0E00               	movlw	0
  3201  0015E8  0100               	movlb	0	; () banked
  3202  0015EA  6F82               	movwf	___awmod@sign& (0+255),b
  3203                           
  3204                           ; BSR set to: 0
  3205  0015EC  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
  3206  0015EE  D006               	goto	l381
  3207                           
  3208                           ; BSR set to: 0
  3209  0015F0  6D7D               	negf	___awmod@dividend& (0+255),b
  3210  0015F2  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
  3211  0015F4  B0D8               	btfsc	status,0,c
  3212  0015F6  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
  3213                           
  3214                           ; BSR set to: 0
  3215  0015F8  0E01               	movlw	1
  3216  0015FA  6F82               	movwf	___awmod@sign& (0+255),b
  3217  0015FC                     l381:
  3218                           
  3219                           ; BSR set to: 0
  3220                           
  3221                           ; BSR set to: 0
  3222  0015FC  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3223  0015FE  D004               	goto	l382
  3224                           
  3225                           ; BSR set to: 0
  3226  001600  6D7F               	negf	___awmod@divisor& (0+255),b
  3227  001602  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
  3228  001604  B0D8               	btfsc	status,0,c
  3229  001606  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
  3230  001608                     l382:
  3231                           
  3232                           ; BSR set to: 0
  3233                           
  3234                           ; BSR set to: 0
  3235  001608  517F               	movf	___awmod@divisor& (0+255),w,b
  3236  00160A  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3237  00160C  B4D8               	btfsc	status,2,c
  3238  00160E  D018               	goto	l389
  3239                           
  3240                           ; BSR set to: 0
  3241  001610  0E01               	movlw	1
  3242  001612  6F81               	movwf	___awmod@counter& (0+255),b
  3243  001614  D004               	goto	l384
  3244  001616                     
  3245                           ; BSR set to: 0
  3246                           
  3247                           ; BSR set to: 0
  3248  001616  90D8               	bcf	status,0,c
  3249  001618  377F               	rlcf	___awmod@divisor& (0+255),f,b
  3250  00161A  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3251  00161C  2B81               	incf	___awmod@counter& (0+255),f,b
  3252  00161E                     l384:
  3253                           
  3254                           ; BSR set to: 0
  3255                           
  3256                           ; BSR set to: 0
  3257  00161E  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3258  001620  D7FA               	goto	l385
  3259  001622                     u2690:
  3260                           
  3261                           ; BSR set to: 0
  3262                           
  3263                           ; BSR set to: 0
  3264                           
  3265                           ; BSR set to: 0
  3266  001622  517F               	movf	___awmod@divisor& (0+255),w,b
  3267  001624  5D7D               	subwf	___awmod@dividend& (0+255),w,b
  3268  001626  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
  3269  001628  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3270  00162A  A0D8               	btfss	status,0,c
  3271  00162C  D004               	goto	l388
  3272                           
  3273                           ; BSR set to: 0
  3274  00162E  517F               	movf	___awmod@divisor& (0+255),w,b
  3275  001630  5F7D               	subwf	___awmod@dividend& (0+255),f,b
  3276  001632  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
  3277  001634  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3278  001636                     l388:
  3279                           
  3280                           ; BSR set to: 0
  3281                           
  3282                           ; BSR set to: 0
  3283  001636  90D8               	bcf	status,0,c
  3284  001638  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3285  00163A  337F               	rrcf	___awmod@divisor& (0+255),f,b
  3286                           
  3287                           ; BSR set to: 0
  3288  00163C  2F81               	decfsz	___awmod@counter& (0+255),f,b
  3289  00163E  D7F1               	goto	u2690
  3290  001640                     l389:
  3291                           
  3292                           ; BSR set to: 0
  3293                           
  3294                           ; BSR set to: 0
  3295                           
  3296                           ; BSR set to: 0
  3297  001640  5182               	movf	___awmod@sign& (0+255),w,b
  3298  001642  B4D8               	btfsc	status,2,c
  3299  001644  D004               	goto	l390
  3300                           
  3301                           ; BSR set to: 0
  3302  001646  6D7D               	negf	___awmod@dividend& (0+255),b
  3303  001648  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
  3304  00164A  B0D8               	btfsc	status,0,c
  3305  00164C  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
  3306  00164E                     l390:
  3307                           
  3308                           ; BSR set to: 0
  3309                           
  3310                           ; BSR set to: 0
  3311  00164E  C07D  F07D         	movff	___awmod@dividend,?___awmod
  3312  001652  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
  3313  001656  0012               	return	
  3314  001658                     __end_of___awmod:
  3315                           	opt stack 0
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           intcon	equ	0xFF2
  3323                           intcon2	equ	0xFF1
  3324                           intcon3	equ	0xFF0
  3325                           postinc0	equ	0xFEE
  3326                           wreg	equ	0xFE8
  3327                           postdec1	equ	0xFE5
  3328                           fsr1l	equ	0xFE1
  3329                           status	equ	0xFD8
  3330                           
  3331 ;; *************** function ___awdiv *****************
  3332 ;; Defined at:
  3333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  dividend        2   29[BANK0 ] int 
  3336 ;;  divisor         2   31[BANK0 ] int 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  quotient        2   35[BANK0 ] int 
  3339 ;;  sign            1   34[BANK0 ] unsigned char 
  3340 ;;  counter         1   33[BANK0 ] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  2   29[BANK0 ] int 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3350 ;;      Params:         0       4       0       0       0       0       0       0       0
  3351 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3353 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3354 ;;Total ram usage:        8 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    4
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text12
  3365  0014DC                     __ptext12:
  3366                           	opt stack 0
  3367  0014DC                     ___awdiv:
  3368                           	opt stack 26
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;incstack = 0
  3372  0014DC  0E00               	movlw	0
  3373  0014DE  0100               	movlb	0	; () banked
  3374  0014E0  6F82               	movwf	___awdiv@sign& (0+255),b
  3375                           
  3376                           ; BSR set to: 0
  3377  0014E2  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3378  0014E4  D006               	goto	l368
  3379                           
  3380                           ; BSR set to: 0
  3381  0014E6  6D7F               	negf	___awdiv@divisor& (0+255),b
  3382  0014E8  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3383  0014EA  B0D8               	btfsc	status,0,c
  3384  0014EC  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3385                           
  3386                           ; BSR set to: 0
  3387  0014EE  0E01               	movlw	1
  3388  0014F0  6F82               	movwf	___awdiv@sign& (0+255),b
  3389  0014F2                     l368:
  3390                           
  3391                           ; BSR set to: 0
  3392                           
  3393                           ; BSR set to: 0
  3394  0014F2  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  3395  0014F4  D006               	goto	l369
  3396                           
  3397                           ; BSR set to: 0
  3398  0014F6  6D7D               	negf	___awdiv@dividend& (0+255),b
  3399  0014F8  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3400  0014FA  B0D8               	btfsc	status,0,c
  3401  0014FC  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3402                           
  3403                           ; BSR set to: 0
  3404  0014FE  0E01               	movlw	1
  3405  001500  1B82               	xorwf	___awdiv@sign& (0+255),f,b
  3406  001502                     l369:
  3407                           
  3408                           ; BSR set to: 0
  3409                           
  3410                           ; BSR set to: 0
  3411  001502  0E00               	movlw	0
  3412  001504  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
  3413  001506  0E00               	movlw	0
  3414  001508  6F83               	movwf	___awdiv@quotient& (0+255),b
  3415                           
  3416                           ; BSR set to: 0
  3417  00150A  517F               	movf	___awdiv@divisor& (0+255),w,b
  3418  00150C  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3419  00150E  B4D8               	btfsc	status,2,c
  3420  001510  D01C               	goto	l376
  3421                           
  3422                           ; BSR set to: 0
  3423  001512  0E01               	movlw	1
  3424  001514  6F81               	movwf	___awdiv@counter& (0+255),b
  3425  001516  D004               	goto	l371
  3426  001518                     
  3427                           ; BSR set to: 0
  3428                           
  3429                           ; BSR set to: 0
  3430  001518  90D8               	bcf	status,0,c
  3431  00151A  377F               	rlcf	___awdiv@divisor& (0+255),f,b
  3432  00151C  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3433  00151E  2B81               	incf	___awdiv@counter& (0+255),f,b
  3434  001520                     l371:
  3435                           
  3436                           ; BSR set to: 0
  3437                           
  3438                           ; BSR set to: 0
  3439  001520  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3440  001522  D7FA               	goto	l372
  3441  001524                     u2630:
  3442                           
  3443                           ; BSR set to: 0
  3444                           
  3445                           ; BSR set to: 0
  3446                           
  3447                           ; BSR set to: 0
  3448  001524  90D8               	bcf	status,0,c
  3449  001526  3783               	rlcf	___awdiv@quotient& (0+255),f,b
  3450  001528  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3451                           
  3452                           ; BSR set to: 0
  3453  00152A  517F               	movf	___awdiv@divisor& (0+255),w,b
  3454  00152C  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
  3455  00152E  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3456  001530  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3457  001532  A0D8               	btfss	status,0,c
  3458  001534  D005               	goto	l375
  3459                           
  3460                           ; BSR set to: 0
  3461  001536  517F               	movf	___awdiv@divisor& (0+255),w,b
  3462  001538  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
  3463  00153A  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3464  00153C  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3465                           
  3466                           ; BSR set to: 0
  3467  00153E  8183               	bsf	___awdiv@quotient& (0+255),0,b
  3468  001540                     l375:
  3469                           
  3470                           ; BSR set to: 0
  3471                           
  3472                           ; BSR set to: 0
  3473  001540  90D8               	bcf	status,0,c
  3474  001542  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3475  001544  337F               	rrcf	___awdiv@divisor& (0+255),f,b
  3476                           
  3477                           ; BSR set to: 0
  3478  001546  2F81               	decfsz	___awdiv@counter& (0+255),f,b
  3479  001548  D7ED               	goto	u2630
  3480  00154A                     l376:
  3481                           
  3482                           ; BSR set to: 0
  3483                           
  3484                           ; BSR set to: 0
  3485                           
  3486                           ; BSR set to: 0
  3487  00154A  5182               	movf	___awdiv@sign& (0+255),w,b
  3488  00154C  B4D8               	btfsc	status,2,c
  3489  00154E  D004               	goto	l377
  3490                           
  3491                           ; BSR set to: 0
  3492  001550  6D83               	negf	___awdiv@quotient& (0+255),b
  3493  001552  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3494  001554  B0D8               	btfsc	status,0,c
  3495  001556  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3496  001558                     l377:
  3497                           
  3498                           ; BSR set to: 0
  3499                           
  3500                           ; BSR set to: 0
  3501  001558  C083  F07D         	movff	___awdiv@quotient,?___awdiv
  3502  00155C  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
  3503  001560  0012               	return	
  3504  001562                     __end_of___awdiv:
  3505                           	opt stack 0
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           prodh	equ	0xFF4
  3511                           prodl	equ	0xFF3
  3512                           intcon	equ	0xFF2
  3513                           intcon2	equ	0xFF1
  3514                           intcon3	equ	0xFF0
  3515                           postinc0	equ	0xFEE
  3516                           wreg	equ	0xFE8
  3517                           postdec1	equ	0xFE5
  3518                           fsr1l	equ	0xFE1
  3519                           status	equ	0xFD8
  3520                           
  3521 ;; *************** function _OpenXLCD *****************
  3522 ;; Defined at:
  3523 ;;		line 41 in file "nxlcd.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  lcdtype         1    wreg     unsigned char 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  lcdtype         1   30[BANK0 ] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0
  3538 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3540 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3541 ;;Total ram usage:        1 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    6
  3544 ;; This function calls:
  3545 ;;		_BusyXLCD
  3546 ;;		_DelayPORXLCD
  3547 ;;		_DelayXLCD
  3548 ;;		_SetDDRamAddr
  3549 ;;		_WriteCmdXLCD
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text13
  3556  001430                     __ptext13:
  3557                           	opt stack 0
  3558  001430                     _OpenXLCD:
  3559                           	opt stack 24
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;incstack = 0
  3563                           ;OpenXLCD@lcdtype stored from wreg
  3564  001430  0100               	movlb	0	; () banked
  3565  001432  6F7E               	movwf	OpenXLCD@lcdtype& (0+255),b
  3566                           
  3567                           ;nxlcd.c: 50: PORTD &= 0x0f;
  3568  001434  0E0F               	movlw	15
  3569  001436  1683               	andwf	3971,f,c	;volatile
  3570                           
  3571                           ;nxlcd.c: 51: TRISD &= 0x0F;
  3572  001438  0E0F               	movlw	15
  3573  00143A  1695               	andwf	3989,f,c	;volatile
  3574                           
  3575                           ;nxlcd.c: 57: TRISEbits.TRISE2 = 0;
  3576  00143C  9496               	bcf	3990,2,c	;volatile
  3577                           
  3578                           ;nxlcd.c: 58: TRISEbits.TRISE0 = 0;
  3579  00143E  9096               	bcf	3990,0,c	;volatile
  3580                           
  3581                           ;nxlcd.c: 59: TRISEbits.TRISE1 = 0;
  3582  001440  9296               	bcf	3990,1,c	;volatile
  3583                           
  3584                           ;nxlcd.c: 60: LATEbits.LATE2 = 0;
  3585  001442  948D               	bcf	3981,2,c	;volatile
  3586                           
  3587                           ;nxlcd.c: 61: LATEbits.LATE0 = 0;
  3588  001444  908D               	bcf	3981,0,c	;volatile
  3589                           
  3590                           ;nxlcd.c: 62: LATEbits.LATE1 = 0;
  3591  001446  928D               	bcf	3981,1,c	;volatile
  3592                           
  3593                           ;nxlcd.c: 65: DelayPORXLCD();
  3594  001448  EC9F  F00C         	call	_DelayPORXLCD	;wreg free
  3595                           
  3596                           ;nxlcd.c: 67: WriteCmdXLCD(0x30);
  3597  00144C  0E30               	movlw	48
  3598  00144E  EC27  F00C         	call	_WriteCmdXLCD
  3599                           
  3600                           ;nxlcd.c: 68: DelayXLCD();
  3601  001452  EC95  F00C         	call	_DelayXLCD	;wreg free
  3602                           
  3603                           ;nxlcd.c: 69: DelayXLCD();
  3604  001456  EC95  F00C         	call	_DelayXLCD	;wreg free
  3605                           
  3606                           ;nxlcd.c: 70: WriteCmdXLCD(0x30);
  3607  00145A  0E30               	movlw	48
  3608  00145C  EC27  F00C         	call	_WriteCmdXLCD
  3609                           
  3610                           ;nxlcd.c: 71: DelayXLCD();
  3611  001460  EC95  F00C         	call	_DelayXLCD	;wreg free
  3612                           
  3613                           ;nxlcd.c: 72: DelayXLCD();
  3614  001464  EC95  F00C         	call	_DelayXLCD	;wreg free
  3615                           
  3616                           ;nxlcd.c: 73: WriteCmdXLCD(0x32);
  3617  001468  0E32               	movlw	50
  3618  00146A  EC27  F00C         	call	_WriteCmdXLCD
  3619  00146E  EC49  F00C         	call	_BusyXLCD	;wreg free
  3620  001472  0900               	iorlw	0
  3621  001474  A4D8               	btfss	status,2,c
  3622  001476  D7FB               	goto	l139
  3623  001478                     u2240:
  3624                           
  3625                           ;nxlcd.c: 79: while(BusyXLCD());
  3626  001478  EC49  F00C         	call	_BusyXLCD	;wreg free
  3627  00147C  0900               	iorlw	0
  3628  00147E  A4D8               	btfss	status,2,c
  3629  001480  D7FB               	goto	u2240
  3630                           
  3631                           ;nxlcd.c: 80: WriteCmdXLCD(lcdtype);
  3632  001482  0100               	movlb	0	; () banked
  3633  001484  517E               	movf	OpenXLCD@lcdtype& (0+255),w,b
  3634  001486  EC27  F00C         	call	_WriteCmdXLCD
  3635  00148A  EC49  F00C         	call	_BusyXLCD	;wreg free
  3636  00148E  0900               	iorlw	0
  3637  001490  A4D8               	btfss	status,2,c
  3638  001492  D7FB               	goto	l145
  3639                           
  3640                           ;nxlcd.c: 84: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3641  001494  0E08               	movlw	8
  3642  001496  EC27  F00C         	call	_WriteCmdXLCD
  3643  00149A  EC49  F00C         	call	_BusyXLCD	;wreg free
  3644  00149E  0900               	iorlw	0
  3645  0014A0  A4D8               	btfss	status,2,c
  3646  0014A2  D7FB               	goto	l148
  3647                           
  3648                           ;nxlcd.c: 86: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  3649  0014A4  0E0F               	movlw	15
  3650  0014A6  EC27  F00C         	call	_WriteCmdXLCD
  3651  0014AA  EC49  F00C         	call	_BusyXLCD	;wreg free
  3652  0014AE  0900               	iorlw	0
  3653  0014B0  A4D8               	btfss	status,2,c
  3654  0014B2  D7FB               	goto	l151
  3655                           
  3656                           ;nxlcd.c: 90: WriteCmdXLCD(0x01);
  3657  0014B4  0E01               	movlw	1
  3658  0014B6  EC27  F00C         	call	_WriteCmdXLCD
  3659  0014BA  EC49  F00C         	call	_BusyXLCD	;wreg free
  3660  0014BE  0900               	iorlw	0
  3661  0014C0  A4D8               	btfss	status,2,c
  3662  0014C2  D7FB               	goto	l154
  3663                           
  3664                           ;nxlcd.c: 94: WriteCmdXLCD(0b00000100);
  3665  0014C4  0E04               	movlw	4
  3666  0014C6  EC27  F00C         	call	_WriteCmdXLCD
  3667  0014CA  EC49  F00C         	call	_BusyXLCD	;wreg free
  3668  0014CE  0900               	iorlw	0
  3669  0014D0  A4D8               	btfss	status,2,c
  3670  0014D2  D7FB               	goto	l157
  3671                           
  3672                           ;nxlcd.c: 98: SetDDRamAddr(0x80);
  3673  0014D4  0E80               	movlw	128
  3674  0014D6  ECE2  F00B         	call	_SetDDRamAddr
  3675  0014DA  0012               	return	
  3676  0014DC                     __end_of_OpenXLCD:
  3677                           	opt stack 0
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           prodh	equ	0xFF4
  3683                           prodl	equ	0xFF3
  3684                           intcon	equ	0xFF2
  3685                           intcon2	equ	0xFF1
  3686                           intcon3	equ	0xFF0
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           postdec1	equ	0xFE5
  3690                           fsr1l	equ	0xFE1
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function _WriteCmdXLCD *****************
  3694 ;; Defined at:
  3695 ;;		line 388 in file "nxlcd.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  cmd             1    wreg     unsigned char 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  cmd             1   29[BANK0 ] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0
  3710 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3712 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3713 ;;Total ram usage:        1 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    5
  3716 ;; This function calls:
  3717 ;;		_DelayFor18TCY
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;;		_OpenXLCD
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text14
  3725  00184E                     __ptext14:
  3726                           	opt stack 0
  3727  00184E                     _WriteCmdXLCD:
  3728                           	opt stack 25
  3729                           
  3730                           ;incstack = 0
  3731                           ;WriteCmdXLCD@cmd stored from wreg
  3732  00184E  0100               	movlb	0	; () banked
  3733  001850  6F7D               	movwf	WriteCmdXLCD@cmd& (0+255),b
  3734                           
  3735                           ;nxlcd.c: 403: TRISD &= 0x0f;
  3736  001852  0E0F               	movlw	15
  3737  001854  1695               	andwf	3989,f,c	;volatile
  3738                           
  3739                           ;nxlcd.c: 404: PORTD &= 0x0f;
  3740  001856  0E0F               	movlw	15
  3741  001858  1683               	andwf	3971,f,c	;volatile
  3742                           
  3743                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
  3744  00185A  0100               	movlb	0	; () banked
  3745  00185C  517D               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  3746  00185E  0BF0               	andlw	240
  3747  001860  1283               	iorwf	3971,f,c	;volatile
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;nxlcd.c: 411: LATEbits.LATE2 = 0;
  3751  001862  948D               	bcf	3981,2,c	;volatile
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;nxlcd.c: 412: LATEbits.LATE0 = 0;
  3755  001864  908D               	bcf	3981,0,c	;volatile
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;nxlcd.c: 413: DelayFor18TCY();
  3759  001866  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  3760                           
  3761                           ;nxlcd.c: 414: LATEbits.LATE1 = 1;
  3762  00186A  828D               	bsf	3981,1,c	;volatile
  3763                           
  3764                           ;nxlcd.c: 415: DelayFor18TCY();
  3765  00186C  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  3766                           
  3767                           ;nxlcd.c: 416: LATEbits.LATE1 = 0;
  3768  001870  928D               	bcf	3981,1,c	;volatile
  3769                           
  3770                           ;nxlcd.c: 418: PORTD &= 0x0f;
  3771  001872  0E0F               	movlw	15
  3772  001874  1683               	andwf	3971,f,c	;volatile
  3773                           
  3774                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
  3775  001876  0100               	movlb	0	; () banked
  3776  001878  397D               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  3777  00187A  0BF0               	andlw	240
  3778  00187C  0BF0               	andlw	240
  3779  00187E  1283               	iorwf	3971,f,c	;volatile
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;nxlcd.c: 424: DelayFor18TCY();
  3783  001880  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  3784                           
  3785                           ;nxlcd.c: 425: LATEbits.LATE1 = 1;
  3786  001884  828D               	bsf	3981,1,c	;volatile
  3787                           
  3788                           ;nxlcd.c: 426: DelayFor18TCY();
  3789  001886  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  3790                           
  3791                           ;nxlcd.c: 427: LATEbits.LATE1 = 0;
  3792  00188A  928D               	bcf	3981,1,c	;volatile
  3793                           
  3794                           ;nxlcd.c: 429: TRISD |= 0xf0;
  3795  00188C  0EF0               	movlw	240
  3796  00188E  1295               	iorwf	3989,f,c	;volatile
  3797  001890  0012               	return	
  3798  001892                     __end_of_WriteCmdXLCD:
  3799                           	opt stack 0
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           intcon2	equ	0xFF1
  3808                           intcon3	equ	0xFF0
  3809                           postinc0	equ	0xFEE
  3810                           wreg	equ	0xFE8
  3811                           postdec1	equ	0xFE5
  3812                           fsr1l	equ	0xFE1
  3813                           status	equ	0xFD8
  3814                           
  3815 ;; *************** function _SetDDRamAddr *****************
  3816 ;; Defined at:
  3817 ;;		line 171 in file "nxlcd.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  DDaddr          1    wreg     unsigned char 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  DDaddr          1   29[BANK0 ] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3831 ;;      Params:         0       0       0       0       0       0       0       0       0
  3832 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3834 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3835 ;;Total ram usage:        1 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    5
  3838 ;; This function calls:
  3839 ;;		_DelayFor18TCY
  3840 ;; This function is called by:
  3841 ;;		_OpenXLCD
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text15
  3846  0017C4                     __ptext15:
  3847                           	opt stack 0
  3848  0017C4                     _SetDDRamAddr:
  3849                           	opt stack 24
  3850                           
  3851                           ;incstack = 0
  3852                           ;SetDDRamAddr@DDaddr stored from wreg
  3853  0017C4  0100               	movlb	0	; () banked
  3854  0017C6  6F7D               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  3855                           
  3856                           ;nxlcd.c: 186: TRISD &= 0x0f;
  3857  0017C8  0E0F               	movlw	15
  3858  0017CA  1695               	andwf	3989,f,c	;volatile
  3859                           
  3860                           ;nxlcd.c: 187: PORTD &= 0x0f;
  3861  0017CC  0E0F               	movlw	15
  3862  0017CE  1683               	andwf	3971,f,c	;volatile
  3863                           
  3864                           ;nxlcd.c: 188: PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  3865  0017D0  0100               	movlb	0	; () banked
  3866  0017D2  517D               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  3867  0017D4  0980               	iorlw	128
  3868  0017D6  0BF0               	andlw	240
  3869  0017D8  1283               	iorwf	3971,f,c	;volatile
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;nxlcd.c: 194: LATEbits.LATE2 = 0;
  3873  0017DA  948D               	bcf	3981,2,c	;volatile
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;nxlcd.c: 195: LATEbits.LATE0 = 0;
  3877  0017DC  908D               	bcf	3981,0,c	;volatile
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;nxlcd.c: 196: DelayFor18TCY();
  3881  0017DE  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  3882                           
  3883                           ;nxlcd.c: 197: LATEbits.LATE1 = 1;
  3884  0017E2  828D               	bsf	3981,1,c	;volatile
  3885                           
  3886                           ;nxlcd.c: 198: DelayFor18TCY();
  3887  0017E4  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  3888                           
  3889                           ;nxlcd.c: 199: LATEbits.LATE1 = 0;
  3890  0017E8  928D               	bcf	3981,1,c	;volatile
  3891                           
  3892                           ;nxlcd.c: 201: PORTD &= 0x0f;
  3893  0017EA  0E0F               	movlw	15
  3894  0017EC  1683               	andwf	3971,f,c	;volatile
  3895                           
  3896                           ;nxlcd.c: 202: PORTD |= ((DDaddr<<4)&0xf0);
  3897  0017EE  0100               	movlb	0	; () banked
  3898  0017F0  397D               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  3899  0017F2  0BF0               	andlw	240
  3900  0017F4  0BF0               	andlw	240
  3901  0017F6  1283               	iorwf	3971,f,c	;volatile
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;nxlcd.c: 207: DelayFor18TCY();
  3905  0017F8  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  3906                           
  3907                           ;nxlcd.c: 208: LATEbits.LATE1 = 1;
  3908  0017FC  828D               	bsf	3981,1,c	;volatile
  3909                           
  3910                           ;nxlcd.c: 209: DelayFor18TCY();
  3911  0017FE  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  3912                           
  3913                           ;nxlcd.c: 210: LATEbits.LATE1 = 0;
  3914  001802  928D               	bcf	3981,1,c	;volatile
  3915                           
  3916                           ;nxlcd.c: 212: TRISD |= 0xf0;
  3917  001804  0EF0               	movlw	240
  3918  001806  1295               	iorwf	3989,f,c	;volatile
  3919  001808  0012               	return	
  3920  00180A                     __end_of_SetDDRamAddr:
  3921                           	opt stack 0
  3922                           tblptru	equ	0xFF8
  3923                           tblptrh	equ	0xFF7
  3924                           tblptrl	equ	0xFF6
  3925                           tablat	equ	0xFF5
  3926                           prodh	equ	0xFF4
  3927                           prodl	equ	0xFF3
  3928                           intcon	equ	0xFF2
  3929                           intcon2	equ	0xFF1
  3930                           intcon3	equ	0xFF0
  3931                           postinc0	equ	0xFEE
  3932                           wreg	equ	0xFE8
  3933                           postdec1	equ	0xFE5
  3934                           fsr1l	equ	0xFE1
  3935                           status	equ	0xFD8
  3936                           
  3937 ;; *************** function _DelayXLCD *****************
  3938 ;; Defined at:
  3939 ;;		line 22 in file "nxlcd.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3953 ;;      Params:         0       0       0       0       0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3955 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3956 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3957 ;;Total ram usage:        1 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    4
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_OpenXLCD
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text16
  3968  00192A                     __ptext16:
  3969                           	opt stack 0
  3970  00192A                     _DelayXLCD:
  3971                           	opt stack 25
  3972                           
  3973                           ;nxlcd.c: 24: _delay((unsigned long)((5)*(20000000/4000.0)));
  3974                           
  3975                           ;incstack = 0
  3976  00192A  0E21               	movlw	33
  3977  00192C  0100               	movlb	0	; () banked
  3978  00192E  6F7D               	movwf	??_DelayXLCD& (0+255),b
  3979  001930  0E76               	movlw	118
  3980  001932                     u3077:
  3981  001932  2EE8               	decfsz	wreg,f,c
  3982  001934  D7FE               	bra	u3077
  3983  001936  2F7D               	decfsz	??_DelayXLCD& (0+255),f,b
  3984  001938  D7FC               	bra	u3077
  3985  00193A  F000               	nop	
  3986  00193C  0012               	return		;funcret
  3987  00193E                     __end_of_DelayXLCD:
  3988                           	opt stack 0
  3989                           tblptru	equ	0xFF8
  3990                           tblptrh	equ	0xFF7
  3991                           tblptrl	equ	0xFF6
  3992                           tablat	equ	0xFF5
  3993                           prodh	equ	0xFF4
  3994                           prodl	equ	0xFF3
  3995                           intcon	equ	0xFF2
  3996                           intcon2	equ	0xFF1
  3997                           intcon3	equ	0xFF0
  3998                           postinc0	equ	0xFEE
  3999                           wreg	equ	0xFE8
  4000                           postdec1	equ	0xFE5
  4001                           fsr1l	equ	0xFE1
  4002                           status	equ	0xFD8
  4003                           
  4004 ;; *************** function _DelayPORXLCD *****************
  4005 ;; Defined at:
  4006 ;;		line 17 in file "nxlcd.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4022 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4023 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4024 ;;Total ram usage:        1 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    4
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_OpenXLCD
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text17
  4035  00193E                     __ptext17:
  4036                           	opt stack 0
  4037  00193E                     _DelayPORXLCD:
  4038                           	opt stack 25
  4039                           
  4040                           ;nxlcd.c: 19: _delay((unsigned long)((15)*(20000000/4000.0)));
  4041                           
  4042                           ;incstack = 0
  4043  00193E  0E62               	movlw	98
  4044  001940  0100               	movlb	0	; () banked
  4045  001942  6F7D               	movwf	??_DelayPORXLCD& (0+255),b
  4046  001944  0E65               	movlw	101
  4047  001946                     u3087:
  4048  001946  2EE8               	decfsz	wreg,f,c
  4049  001948  D7FE               	bra	u3087
  4050  00194A  2F7D               	decfsz	??_DelayPORXLCD& (0+255),f,b
  4051  00194C  D7FC               	bra	u3087
  4052  00194E  D000               	nop2	
  4053  001950  0012               	return		;funcret
  4054  001952                     __end_of_DelayPORXLCD:
  4055                           	opt stack 0
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           intcon	equ	0xFF2
  4063                           intcon2	equ	0xFF1
  4064                           intcon3	equ	0xFF0
  4065                           postinc0	equ	0xFEE
  4066                           wreg	equ	0xFE8
  4067                           postdec1	equ	0xFE5
  4068                           fsr1l	equ	0xFE1
  4069                           status	equ	0xFD8
  4070                           
  4071 ;; *************** function _BusyXLCD *****************
  4072 ;; Defined at:
  4073 ;;		line 227 in file "nxlcd.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      unsigned char 
  4080 ;; Registers used:
  4081 ;;		wreg, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4087 ;;      Params:         0       0       0       0       0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    5
  4094 ;; This function calls:
  4095 ;;		_DelayFor18TCY
  4096 ;; This function is called by:
  4097 ;;		_OpenXLCD
  4098 ;;		_putsXLCD
  4099 ;;		_putrsXLCD
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text18
  4104  001892                     __ptext18:
  4105                           	opt stack 0
  4106  001892                     _BusyXLCD:
  4107                           	opt stack 24
  4108                           
  4109                           ;nxlcd.c: 229: LATEbits.LATE2 = 1;
  4110                           
  4111                           ;incstack = 0
  4112  001892  848D               	bsf	3981,2,c	;volatile
  4113                           
  4114                           ;nxlcd.c: 230: LATEbits.LATE0 = 0;
  4115  001894  908D               	bcf	3981,0,c	;volatile
  4116                           
  4117                           ;nxlcd.c: 231: DelayFor18TCY();
  4118  001896  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  4119                           
  4120                           ;nxlcd.c: 232: LATEbits.LATE1 = 1;
  4121  00189A  828D               	bsf	3981,1,c	;volatile
  4122                           
  4123                           ;nxlcd.c: 233: DelayFor18TCY();
  4124  00189C  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  4125                           
  4126                           ;nxlcd.c: 249: if(PORTD&0x80)
  4127  0018A0  AE83               	btfss	3971,7,c	;volatile
  4128  0018A2  D00A               	goto	l168
  4129                           
  4130                           ;nxlcd.c: 253: {
  4131                           ;nxlcd.c: 254: LATEbits.LATE1 = 0;
  4132  0018A4  928D               	bcf	3981,1,c	;volatile
  4133                           
  4134                           ;nxlcd.c: 255: DelayFor18TCY();
  4135  0018A6  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  4136                           
  4137                           ;nxlcd.c: 256: LATEbits.LATE1 = 1;
  4138  0018AA  828D               	bsf	3981,1,c	;volatile
  4139                           
  4140                           ;nxlcd.c: 257: DelayFor18TCY();
  4141  0018AC  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  4142                           
  4143                           ;nxlcd.c: 258: LATEbits.LATE1 = 0;
  4144  0018B0  928D               	bcf	3981,1,c	;volatile
  4145                           
  4146                           ;nxlcd.c: 259: LATEbits.LATE2 = 0;
  4147  0018B2  948D               	bcf	3981,2,c	;volatile
  4148                           
  4149                           ;nxlcd.c: 260: return 1;
  4150  0018B4  0E01               	movlw	1
  4151                           
  4152                           ;nxlcd.c: 261: }
  4153  0018B6  0012               	return	
  4154  0018B8                     l168:
  4155                           
  4156                           ;nxlcd.c: 262: else
  4157                           ;nxlcd.c: 263: {
  4158                           ;nxlcd.c: 264: LATEbits.LATE1 = 0;
  4159  0018B8  928D               	bcf	3981,1,c	;volatile
  4160                           
  4161                           ;nxlcd.c: 265: DelayFor18TCY();
  4162  0018BA  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  4163                           
  4164                           ;nxlcd.c: 266: LATEbits.LATE1 = 1;
  4165  0018BE  828D               	bsf	3981,1,c	;volatile
  4166                           
  4167                           ;nxlcd.c: 267: DelayFor18TCY();
  4168  0018C0  ECA9  F00C         	call	_DelayFor18TCY	;wreg free
  4169                           
  4170                           ;nxlcd.c: 268: LATEbits.LATE1 = 0;
  4171  0018C4  928D               	bcf	3981,1,c	;volatile
  4172                           
  4173                           ;nxlcd.c: 269: LATEbits.LATE2 = 0;
  4174  0018C6  948D               	bcf	3981,2,c	;volatile
  4175                           
  4176                           ;nxlcd.c: 270: return 0;
  4177  0018C8  0E00               	movlw	0
  4178  0018CA  0012               	return	
  4179  0018CC                     __end_of_BusyXLCD:
  4180                           	opt stack 0
  4181                           tblptru	equ	0xFF8
  4182                           tblptrh	equ	0xFF7
  4183                           tblptrl	equ	0xFF6
  4184                           tablat	equ	0xFF5
  4185                           prodh	equ	0xFF4
  4186                           prodl	equ	0xFF3
  4187                           intcon	equ	0xFF2
  4188                           intcon2	equ	0xFF1
  4189                           intcon3	equ	0xFF0
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           postdec1	equ	0xFE5
  4193                           fsr1l	equ	0xFE1
  4194                           status	equ	0xFD8
  4195                           
  4196 ;; *************** function _DelayFor18TCY *****************
  4197 ;; Defined at:
  4198 ;;		line 12 in file "nxlcd.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4212 ;;      Params:         0       0       0       0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4215 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4216 ;;Total ram usage:        0 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    4
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_SetDDRamAddr
  4223 ;;		_BusyXLCD
  4224 ;;		_WriteCmdXLCD
  4225 ;;		_WriteDataXLCD
  4226 ;;		_SetCGRamAddr
  4227 ;;		_ReadAddrXLCD
  4228 ;;		_ReadDataXLCD
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text19
  4233  001952                     __ptext19:
  4234                           	opt stack 0
  4235  001952                     _DelayFor18TCY:
  4236                           	opt stack 24
  4237                           
  4238                           ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4239                           
  4240                           ;incstack = 0
  4241  001952  0E21               	movlw	33
  4242  001954                     u3097:
  4243  001954  2EE8               	decfsz	wreg,f,c
  4244  001956  D7FE               	bra	u3097
  4245  001958  F000               	nop	
  4246  00195A  0012               	return		;funcret
  4247  00195C                     __end_of_DelayFor18TCY:
  4248                           	opt stack 0
  4249                           tblptru	equ	0xFF8
  4250                           tblptrh	equ	0xFF7
  4251                           tblptrl	equ	0xFF6
  4252                           tablat	equ	0xFF5
  4253                           prodh	equ	0xFF4
  4254                           prodl	equ	0xFF3
  4255                           intcon	equ	0xFF2
  4256                           intcon2	equ	0xFF1
  4257                           intcon3	equ	0xFF0
  4258                           postinc0	equ	0xFEE
  4259                           wreg	equ	0xFE8
  4260                           postdec1	equ	0xFE5
  4261                           fsr1l	equ	0xFE1
  4262                           status	equ	0xFD8
  4263                           
  4264 ;; *************** function _LowPriorityISR *****************
  4265 ;; Defined at:
  4266 ;;		line 44 in file "main.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4280 ;;      Params:         0       0       0       0       0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4282 ;;      Temps:          0      23       0       0       0       0       0       0       0
  4283 ;;      Totals:         0      23       0       0       0       0       0       0       0
  4284 ;;Total ram usage:       23 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    3
  4287 ;; This function calls:
  4288 ;;		i1___ftmul
  4289 ;;		i1___fttol
  4290 ;;		i1___lltoft
  4291 ;; This function is called by:
  4292 ;;		Interrupt level 1
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	intcodelo
  4297  000018                     __pintcodelo:
  4298                           	opt stack 0
  4299  000018                     _LowPriorityISR:
  4300                           	opt stack 24
  4301                           
  4302                           ;incstack = 0
  4303  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4304  00001A  CFD8 F068          	movff	status,??_LowPriorityISR+2
  4305  00001E  CFE8 F069          	movff	wreg,??_LowPriorityISR+3
  4306  000022  CFE0 F06A          	movff	bsr,??_LowPriorityISR+4
  4307  000026  CFFA F06B          	movff	pclath,??_LowPriorityISR+5
  4308  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityISR+6
  4309  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityISR+7
  4310  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityISR+8
  4311  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityISR+9
  4312  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityISR+10
  4313  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityISR+11
  4314  000042  CFDA F072          	movff	fsr2h,??_LowPriorityISR+12
  4315  000046  CFF3 F073          	movff	prodl,??_LowPriorityISR+13
  4316  00004A  CFF4 F074          	movff	prodh,??_LowPriorityISR+14
  4317  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityISR+15
  4318  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityISR+16
  4319  000056  CFF8 F077          	movff	tblptru,??_LowPriorityISR+17
  4320  00005A  CFF5 F078          	movff	tablat,??_LowPriorityISR+18
  4321  00005E  C04A  F079         	movff	btemp,??_LowPriorityISR+19
  4322  000062  C04B  F07A         	movff	btemp+1,??_LowPriorityISR+20
  4323  000066  C04C  F07B         	movff	btemp+2,??_LowPriorityISR+21
  4324  00006A  C04D  F07C         	movff	btemp+3,??_LowPriorityISR+22
  4325                           
  4326                           ;main.c: 45: PIR1bits.ADIF = 0;
  4327  00006E  9C9E               	bcf	3998,6,c	;volatile
  4328                           
  4329                           ;main.c: 46: contador++;
  4330  000070  0100               	movlb	0	; () banked
  4331  000072  2BCF               	incf	_contador& (0+255),f,b
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;main.c: 47: valorconv = 256 * ADRESH + ADRESL;
  4335  000074  50C3               	movf	4035,w,c	;volatile
  4336  000076  CFC4 F066          	movff	4036,??_LowPriorityISR	;volatile
  4337  00007A  6B67               	clrf	(??_LowPriorityISR+1)& (0+255),b
  4338  00007C  C066  F067         	movff	??_LowPriorityISR,??_LowPriorityISR+1
  4339  000080  6B66               	clrf	??_LowPriorityISR& (0+255),b
  4340  000082  2766               	addwf	??_LowPriorityISR& (0+255),f,b
  4341  000084  0E00               	movlw	0
  4342  000086  2367               	addwfc	(??_LowPriorityISR+1)& (0+255),f,b
  4343  000088  C066  F044         	movff	??_LowPriorityISR,_valorconv
  4344  00008C  C067  F045         	movff	??_LowPriorityISR+1,_valorconv+1
  4345  000090  0E00               	movlw	0
  4346  000092  BE45               	btfsc	_valorconv+1,7,c
  4347  000094  0EFF               	movlw	-1
  4348  000096  6E46               	movwf	_valorconv+2,c
  4349  000098  6E47               	movwf	_valorconv+3,c
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;main.c: 48: if (leiturapotenciometro) {
  4353  00009A  5048               	movf	_leiturapotenciometro,w,c
  4354  00009C  1049               	iorwf	_leiturapotenciometro+1,w,c
  4355  00009E  B4D8               	btfsc	status,2,c
  4356  0000A0  D00D               	goto	i1l92
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;main.c: 49: leiturapotenciometro = 0;
  4360  0000A2  0E00               	movlw	0
  4361  0000A4  6E49               	movwf	_leiturapotenciometro+1,c
  4362  0000A6  0E00               	movlw	0
  4363  0000A8  6E48               	movwf	_leiturapotenciometro,c
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;main.c: 50: result2 = valorconv;
  4367  0000AA  C044  F0C4         	movff	_valorconv,_result2
  4368  0000AE  C045  F0C5         	movff	_valorconv+1,_result2+1
  4369  0000B2  C046  F0C6         	movff	_valorconv+2,_result2+2
  4370  0000B6  C047  F0C7         	movff	_valorconv+3,_result2+3
  4371                           
  4372                           ;main.c: 51: } else {
  4373  0000BA  D028               	goto	i1l93
  4374  0000BC                     i1l92:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;main.c: 52: result = valorconv * 4.887585533;
  4378                           
  4379                           ; BSR set to: 0
  4380  0000BC  0E67               	movlw	103
  4381  0000BE  6E27               	movwf	i1___ftmul@f2,c
  4382  0000C0  0E9C               	movlw	156
  4383  0000C2  6E28               	movwf	i1___ftmul@f2+1,c
  4384  0000C4  0E40               	movlw	64
  4385  0000C6  6E29               	movwf	i1___ftmul@f2+2,c
  4386  0000C8  C044  F01B         	movff	_valorconv,i1___lltoft@c
  4387  0000CC  C045  F01C         	movff	_valorconv+1,i1___lltoft@c+1
  4388  0000D0  C046  F01D         	movff	_valorconv+2,i1___lltoft@c+2
  4389  0000D4  C047  F01E         	movff	_valorconv+3,i1___lltoft@c+3
  4390  0000D8  EC8F  F00B         	call	i1___lltoft	;wreg free
  4391  0000DC  C01B  F024         	movff	?i1___lltoft,i1___ftmul@f1
  4392  0000E0  C01C  F025         	movff	?i1___lltoft+1,i1___ftmul@f1+1
  4393  0000E4  C01D  F026         	movff	?i1___lltoft+2,i1___ftmul@f1+2
  4394  0000E8  EC8F  F008         	call	i1___ftmul	;wreg free
  4395  0000EC  C024  F033         	movff	?i1___ftmul,i1___fttol@f1
  4396  0000F0  C025  F034         	movff	?i1___ftmul+1,i1___fttol@f1+1
  4397  0000F4  C026  F035         	movff	?i1___ftmul+2,i1___fttol@f1+2
  4398  0000F8  EC98  F007         	call	i1___fttol	;wreg free
  4399  0000FC  C033  F0C8         	movff	?i1___fttol,_result
  4400  000100  C034  F0C9         	movff	?i1___fttol+1,_result+1
  4401  000104  C035  F0CA         	movff	?i1___fttol+2,_result+2
  4402  000108  C036  F0CB         	movff	?i1___fttol+3,_result+3
  4403  00010C                     i1l93:
  4404                           
  4405                           ;main.c: 53: }
  4406                           ;main.c: 55: if (INTCON3bits.INT1IF) {
  4407  00010C  A0F0               	btfss	intcon3,0,c	;volatile
  4408  00010E  D023               	goto	i1l94
  4409                           
  4410                           ;main.c: 56: INTCON3bits.INT1IF = 0;
  4411  000110  90F0               	bcf	intcon3,0,c	;volatile
  4412                           
  4413                           ;main.c: 57: if (temp < 500)
  4414  000112  503F               	movf	_temp+3,w,c
  4415  000114  103E               	iorwf	_temp+2,w,c
  4416  000116  E112               	bnz	i1l3318
  4417  000118  0EF4               	movlw	244
  4418  00011A  5C3C               	subwf	_temp,w,c
  4419  00011C  0E01               	movlw	1
  4420  00011E  583D               	subwfb	_temp+1,w,c
  4421  000120  B0D8               	btfsc	status,0,c
  4422  000122  D00C               	goto	i1l95
  4423                           
  4424                           ;main.c: 58: temp=temp+10;
  4425  000124  0E0A               	movlw	10
  4426  000126  243C               	addwf	_temp,w,c
  4427  000128  6E3C               	movwf	_temp,c
  4428  00012A  0E00               	movlw	0
  4429  00012C  203D               	addwfc	_temp+1,w,c
  4430  00012E  6E3D               	movwf	_temp+1,c
  4431  000130  0E00               	movlw	0
  4432  000132  203E               	addwfc	_temp+2,w,c
  4433  000134  6E3E               	movwf	_temp+2,c
  4434  000136  0E00               	movlw	0
  4435  000138  203F               	addwfc	_temp+3,w,c
  4436  00013A  6E3F               	movwf	_temp+3,c
  4437  00013C                     i1l95:
  4438  00013C                     i1l3318:
  4439                           
  4440                           ;main.c: 59: _delay((unsigned long)((500)*(20000000/4000.0)));
  4441  00013C  0E0D               	movlw	13
  4442  00013E  0100               	movlb	0	; () banked
  4443  000140  6F67               	movwf	(??_LowPriorityISR+1)& (0+255),b
  4444  000142  0EAF               	movlw	175
  4445  000144  6F66               	movwf	??_LowPriorityISR& (0+255),b
  4446  000146  0EB6               	movlw	182
  4447  000148                     i1u310_27:
  4448  000148  2EE8               	decfsz	wreg,f,c
  4449  00014A  D7FE               	bra	i1u310_27
  4450  00014C  2F66               	decfsz	??_LowPriorityISR& (0+255),f,b
  4451  00014E  D7FC               	bra	i1u310_27
  4452  000150  2F67               	decfsz	(??_LowPriorityISR+1)& (0+255),f,b
  4453  000152  D7FA               	bra	i1u310_27
  4454  000154  F000               	nop	
  4455  000156                     i1l94:
  4456                           
  4457                           ;main.c: 60: }
  4458                           ;main.c: 61: if (INTCON3bits.INT2IF) {
  4459  000156  A2F0               	btfss	intcon3,1,c	;volatile
  4460  000158  D023               	goto	i1l96
  4461                           
  4462                           ;main.c: 62: INTCON3bits.INT2IF = 0;
  4463  00015A  92F0               	bcf	intcon3,1,c	;volatile
  4464                           
  4465                           ;main.c: 63: if (temp > 350)
  4466  00015C  503F               	movf	_temp+3,w,c
  4467  00015E  103E               	iorwf	_temp+2,w,c
  4468  000160  E106               	bnz	i1u299_20
  4469  000162  0E5F               	movlw	95
  4470  000164  5C3C               	subwf	_temp,w,c
  4471  000166  0E01               	movlw	1
  4472  000168  583D               	subwfb	_temp+1,w,c
  4473  00016A  A0D8               	btfss	status,0,c
  4474  00016C  D00C               	goto	i1l97
  4475  00016E                     i1u299_20:
  4476                           
  4477                           ;main.c: 64: temp=temp-10;
  4478  00016E  0EF6               	movlw	246
  4479  000170  243C               	addwf	_temp,w,c
  4480  000172  6E3C               	movwf	_temp,c
  4481  000174  0EFF               	movlw	255
  4482  000176  203D               	addwfc	_temp+1,w,c
  4483  000178  6E3D               	movwf	_temp+1,c
  4484  00017A  0EFF               	movlw	255
  4485  00017C  203E               	addwfc	_temp+2,w,c
  4486  00017E  6E3E               	movwf	_temp+2,c
  4487  000180  0EFF               	movlw	255
  4488  000182  203F               	addwfc	_temp+3,w,c
  4489  000184  6E3F               	movwf	_temp+3,c
  4490  000186                     i1l97:
  4491                           
  4492                           ;main.c: 65: _delay((unsigned long)((500)*(20000000/4000.0)));
  4493  000186  0E0D               	movlw	13
  4494  000188  0100               	movlb	0	; () banked
  4495  00018A  6F67               	movwf	(??_LowPriorityISR+1)& (0+255),b
  4496  00018C  0EAF               	movlw	175
  4497  00018E  6F66               	movwf	??_LowPriorityISR& (0+255),b
  4498  000190  0EB6               	movlw	182
  4499  000192                     i1u311_27:
  4500  000192  2EE8               	decfsz	wreg,f,c
  4501  000194  D7FE               	bra	i1u311_27
  4502  000196  2F66               	decfsz	??_LowPriorityISR& (0+255),f,b
  4503  000198  D7FC               	bra	i1u311_27
  4504  00019A  2F67               	decfsz	(??_LowPriorityISR+1)& (0+255),f,b
  4505  00019C  D7FA               	bra	i1u311_27
  4506  00019E  F000               	nop	
  4507  0001A0                     i1l96:
  4508  0001A0  C07C  F04D         	movff	??_LowPriorityISR+22,btemp+3
  4509  0001A4  C07B  F04C         	movff	??_LowPriorityISR+21,btemp+2
  4510  0001A8  C07A  F04B         	movff	??_LowPriorityISR+20,btemp+1
  4511  0001AC  C079  F04A         	movff	??_LowPriorityISR+19,btemp
  4512  0001B0  C078  FFF5         	movff	??_LowPriorityISR+18,tablat
  4513  0001B4  C077  FFF8         	movff	??_LowPriorityISR+17,tblptru
  4514  0001B8  C076  FFF7         	movff	??_LowPriorityISR+16,tblptrh
  4515  0001BC  C075  FFF6         	movff	??_LowPriorityISR+15,tblptrl
  4516  0001C0  C074  FFF4         	movff	??_LowPriorityISR+14,prodh
  4517  0001C4  C073  FFF3         	movff	??_LowPriorityISR+13,prodl
  4518  0001C8  C072  FFDA         	movff	??_LowPriorityISR+12,fsr2h
  4519  0001CC  C071  FFD9         	movff	??_LowPriorityISR+11,fsr2l
  4520  0001D0  C070  FFE2         	movff	??_LowPriorityISR+10,fsr1h
  4521  0001D4  C06F  FFE1         	movff	??_LowPriorityISR+9,fsr1l
  4522  0001D8  C06E  FFEA         	movff	??_LowPriorityISR+8,fsr0h
  4523  0001DC  C06D  FFE9         	movff	??_LowPriorityISR+7,fsr0l
  4524  0001E0  C06C  FFFB         	movff	??_LowPriorityISR+6,pclatu
  4525  0001E4  C06B  FFFA         	movff	??_LowPriorityISR+5,pclath
  4526  0001E8  C06A  FFE0         	movff	??_LowPriorityISR+4,bsr
  4527  0001EC  C069  FFE8         	movff	??_LowPriorityISR+3,wreg
  4528  0001F0  C068  FFD8         	movff	??_LowPriorityISR+2,status
  4529  0001F4  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4530  0001F6  0010               	retfie	
  4531  0001F8                     __end_of_LowPriorityISR:
  4532                           	opt stack 0
  4533                           pclatu	equ	0xFFB
  4534                           pclath	equ	0xFFA
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           prodh	equ	0xFF4
  4540                           prodl	equ	0xFF3
  4541                           intcon	equ	0xFF2
  4542                           intcon2	equ	0xFF1
  4543                           intcon3	equ	0xFF0
  4544                           postinc0	equ	0xFEE
  4545                           fsr0h	equ	0xFEA
  4546                           fsr0l	equ	0xFE9
  4547                           wreg	equ	0xFE8
  4548                           postdec1	equ	0xFE5
  4549                           fsr1h	equ	0xFE2
  4550                           fsr1l	equ	0xFE1
  4551                           bsr	equ	0xFE0
  4552                           fsr2h	equ	0xFDA
  4553                           fsr2l	equ	0xFD9
  4554                           status	equ	0xFD8
  4555                           
  4556 ;; *************** function i1___lltoft *****************
  4557 ;; Defined at:
  4558 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  c               4   26[COMRAM] unsigned long 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  __lltoft        1   34[COMRAM] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  3   26[COMRAM] float 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4572 ;;      Params:         4       0       0       0       0       0       0       0       0
  4573 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4574 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4575 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4576 ;;Total ram usage:        9 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    2
  4579 ;; This function calls:
  4580 ;;		i1___ftpack
  4581 ;; This function is called by:
  4582 ;;		_LowPriorityISR
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text21
  4587  00171E                     __ptext21:
  4588                           	opt stack 0
  4589  00171E                     i1___lltoft:
  4590                           	opt stack 24
  4591                           
  4592                           ;incstack = 0
  4593  00171E  0E8E               	movlw	142
  4594  001720  6E23               	movwf	i1___lltoft@exp,c
  4595  001722  D006               	goto	i1l572
  4596  001724  90D8               	bcf	status,0,c
  4597  001726  321E               	rrcf	i1___lltoft@c+3,f,c
  4598  001728  321D               	rrcf	i1___lltoft@c+2,f,c
  4599  00172A  321C               	rrcf	i1___lltoft@c+1,f,c
  4600  00172C  321B               	rrcf	i1___lltoft@c,f,c
  4601  00172E  2A23               	incf	i1___lltoft@exp,f,c
  4602  001730                     i1l572:
  4603  001730  0E00               	movlw	0
  4604  001732  141B               	andwf	i1___lltoft@c,w,c
  4605  001734  6E1F               	movwf	??i1___lltoft& (0+255),c
  4606  001736  0E00               	movlw	0
  4607  001738  141C               	andwf	i1___lltoft@c+1,w,c
  4608  00173A  6E20               	movwf	(??i1___lltoft+1)& (0+255),c
  4609  00173C  0E00               	movlw	0
  4610  00173E  141D               	andwf	i1___lltoft@c+2,w,c
  4611  001740  6E21               	movwf	(??i1___lltoft+2)& (0+255),c
  4612  001742  0EFF               	movlw	255
  4613  001744  141E               	andwf	i1___lltoft@c+3,w,c
  4614  001746  6E22               	movwf	(??i1___lltoft+3)& (0+255),c
  4615  001748  501F               	movf	??i1___lltoft,w,c
  4616  00174A  1020               	iorwf	??i1___lltoft+1,w,c
  4617  00174C  1021               	iorwf	??i1___lltoft+2,w,c
  4618  00174E  1022               	iorwf	??i1___lltoft+3,w,c
  4619  001750  A4D8               	btfss	status,2,c
  4620  001752  D7E8               	goto	i1l573
  4621  001754  C01B  F013         	movff	i1___lltoft@c,i1___ftpack@arg
  4622  001758  C01C  F014         	movff	i1___lltoft@c+1,i1___ftpack@arg+1
  4623  00175C  C01D  F015         	movff	i1___lltoft@c+2,i1___ftpack@arg+2
  4624  001760  C023  F016         	movff	i1___lltoft@exp,i1___ftpack@exp
  4625  001764  0E00               	movlw	0
  4626  001766  6E17               	movwf	i1___ftpack@sign,c
  4627  001768  ECC1  F009         	call	i1___ftpack	;wreg free
  4628  00176C  C013  F01B         	movff	?i1___ftpack,?i1___lltoft
  4629  001770  C014  F01C         	movff	?i1___ftpack+1,?i1___lltoft+1
  4630  001774  C015  F01D         	movff	?i1___ftpack+2,?i1___lltoft+2
  4631  001778  0012               	return	
  4632  00177A                     __end_ofi1___lltoft:
  4633                           	opt stack 0
  4634                           pclatu	equ	0xFFB
  4635                           pclath	equ	0xFFA
  4636                           tblptru	equ	0xFF8
  4637                           tblptrh	equ	0xFF7
  4638                           tblptrl	equ	0xFF6
  4639                           tablat	equ	0xFF5
  4640                           prodh	equ	0xFF4
  4641                           prodl	equ	0xFF3
  4642                           intcon	equ	0xFF2
  4643                           intcon2	equ	0xFF1
  4644                           intcon3	equ	0xFF0
  4645                           postinc0	equ	0xFEE
  4646                           fsr0h	equ	0xFEA
  4647                           fsr0l	equ	0xFE9
  4648                           wreg	equ	0xFE8
  4649                           postdec1	equ	0xFE5
  4650                           fsr1h	equ	0xFE2
  4651                           fsr1l	equ	0xFE1
  4652                           bsr	equ	0xFE0
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function i1___fttol *****************
  4658 ;; Defined at:
  4659 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  f1              3   50[COMRAM] float 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  __fttol         4    1[BANK0 ] unsigned long 
  4664 ;;  __fttol         1    5[BANK0 ] unsigned char 
  4665 ;;  __fttol         1    0[BANK0 ] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  4   50[COMRAM] long 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4675 ;;      Params:         4       0       0       0       0       0       0       0       0
  4676 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4677 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4678 ;;      Totals:         9       6       0       0       0       0       0       0       0
  4679 ;;Total ram usage:       15 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_LowPriorityISR
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text22
  4690  000F30                     __ptext22:
  4691                           	opt stack 0
  4692  000F30                     i1___fttol:
  4693                           	opt stack 25
  4694                           
  4695                           ;incstack = 0
  4696  000F30  C035  F037         	movff	i1___fttol@f1+2,??i1___fttol
  4697  000F34  6A38               	clrf	(??i1___fttol+1)& (0+255),c
  4698  000F36  6A39               	clrf	(??i1___fttol+2)& (0+255),c
  4699  000F38  3434               	rlcf	i1___fttol@f1+1,w,c
  4700  000F3A  3637               	rlcf	??i1___fttol& (0+255),f,c
  4701  000F3C  E301               	bnc	u287_21
  4702  000F3E  8038               	bsf	(??i1___fttol+1)& (0+255),0,c
  4703  000F40                     u287_21:
  4704  000F40  5037               	movf	??i1___fttol,w,c
  4705  000F42  0100               	movlb	0	; () banked
  4706  000F44  6F65               	movwf	i1___fttol@exp1& (0+255),b
  4707  000F46  5165               	movf	i1___fttol@exp1& (0+255),w,b
  4708  000F48  A4D8               	btfss	status,2,c
  4709  000F4A  D009               	goto	i1l515
  4710                           
  4711                           ; BSR set to: 0
  4712  000F4C  0E00               	movlw	0
  4713  000F4E  6E33               	movwf	?i1___fttol,c
  4714  000F50  0E00               	movlw	0
  4715  000F52  6E34               	movwf	?i1___fttol+1,c
  4716  000F54  0E00               	movlw	0
  4717  000F56  6E35               	movwf	?i1___fttol+2,c
  4718  000F58  0E00               	movlw	0
  4719  000F5A  6E36               	movwf	?i1___fttol+3,c
  4720                           
  4721                           ; BSR set to: 0
  4722  000F5C  0012               	return	
  4723  000F5E                     i1l515:
  4724                           
  4725                           ; BSR set to: 0
  4726                           
  4727                           ; BSR set to: 0
  4728  000F5E  0E17               	movlw	23
  4729  000F60  6E37               	movwf	??i1___fttol& (0+255),c
  4730  000F62  C033  F038         	movff	i1___fttol@f1,??i1___fttol+1
  4731  000F66  C034  F039         	movff	i1___fttol@f1+1,??i1___fttol+2
  4732  000F6A  C035  F03A         	movff	i1___fttol@f1+2,??i1___fttol+3
  4733  000F6E  2837               	incf	??i1___fttol,w,c
  4734  000F70  6E3B               	movwf	(??i1___fttol+4)& (0+255),c
  4735  000F72  D004               	goto	i1u289_20
  4736  000F74                     i1u289_25:
  4737  000F74  90D8               	bcf	status,0,c
  4738  000F76  323A               	rrcf	??i1___fttol+3,f,c
  4739  000F78  3239               	rrcf	??i1___fttol+2,f,c
  4740  000F7A  3238               	rrcf	??i1___fttol+1,f,c
  4741  000F7C                     i1u289_20:
  4742  000F7C  2E3B               	decfsz	(??i1___fttol+4)& (0+255),f,c
  4743  000F7E  D7FA               	goto	i1u289_25
  4744  000F80  5038               	movf	??i1___fttol+1,w,c
  4745  000F82  0100               	movlb	0	; () banked
  4746  000F84  6F60               	movwf	i1___fttol@sign1& (0+255),b
  4747                           
  4748                           ; BSR set to: 0
  4749  000F86  8E34               	bsf	i1___fttol@f1+1,7,c
  4750                           
  4751                           ; BSR set to: 0
  4752  000F88  0EFF               	movlw	255
  4753  000F8A  1633               	andwf	i1___fttol@f1,f,c
  4754  000F8C  0EFF               	movlw	255
  4755  000F8E  1634               	andwf	i1___fttol@f1+1,f,c
  4756  000F90  0E00               	movlw	0
  4757  000F92  1635               	andwf	i1___fttol@f1+2,f,c
  4758                           
  4759                           ; BSR set to: 0
  4760  000F94  5033               	movf	i1___fttol@f1,w,c
  4761  000F96  6F61               	movwf	i1___fttol@lval& (0+255),b
  4762  000F98  5034               	movf	i1___fttol@f1+1,w,c
  4763  000F9A  6F62               	movwf	(i1___fttol@lval+1)& (0+255),b
  4764  000F9C  5035               	movf	i1___fttol@f1+2,w,c
  4765  000F9E  6F63               	movwf	(i1___fttol@lval+2)& (0+255),b
  4766  000FA0  6B64               	clrf	(i1___fttol@lval+3)& (0+255),b
  4767                           
  4768                           ; BSR set to: 0
  4769  000FA2  0E8E               	movlw	142
  4770  000FA4  5F65               	subwf	i1___fttol@exp1& (0+255),f,b
  4771                           
  4772                           ; BSR set to: 0
  4773  000FA6  AF65               	btfss	i1___fttol@exp1& (0+255),7,b
  4774  000FA8  D016               	goto	i1l517
  4775                           
  4776                           ; BSR set to: 0
  4777  000FAA  5165               	movf	i1___fttol@exp1& (0+255),w,b
  4778  000FAC  0A80               	xorlw	128
  4779  000FAE  0F8F               	addlw	143
  4780  000FB0  B0D8               	btfsc	status,0,c
  4781  000FB2  D009               	goto	i1l518
  4782                           
  4783                           ; BSR set to: 0
  4784  000FB4  0E00               	movlw	0
  4785  000FB6  6E33               	movwf	?i1___fttol,c
  4786  000FB8  0E00               	movlw	0
  4787  000FBA  6E34               	movwf	?i1___fttol+1,c
  4788  000FBC  0E00               	movlw	0
  4789  000FBE  6E35               	movwf	?i1___fttol+2,c
  4790  000FC0  0E00               	movlw	0
  4791  000FC2  6E36               	movwf	?i1___fttol+3,c
  4792                           
  4793                           ; BSR set to: 0
  4794  000FC4  0012               	return	
  4795  000FC6                     i1l518:
  4796                           
  4797                           ; BSR set to: 0
  4798                           
  4799                           ; BSR set to: 0
  4800                           
  4801                           ; BSR set to: 0
  4802  000FC6  90D8               	bcf	status,0,c
  4803  000FC8  3364               	rrcf	(i1___fttol@lval+3)& (0+255),f,b
  4804  000FCA  3363               	rrcf	(i1___fttol@lval+2)& (0+255),f,b
  4805  000FCC  3362               	rrcf	(i1___fttol@lval+1)& (0+255),f,b
  4806  000FCE  3361               	rrcf	i1___fttol@lval& (0+255),f,b
  4807                           
  4808                           ; BSR set to: 0
  4809  000FD0  3F65               	incfsz	i1___fttol@exp1& (0+255),f,b
  4810  000FD2  D7F9               	goto	i1l518
  4811                           
  4812                           ; BSR set to: 0
  4813  000FD4  D015               	goto	i1u293_20
  4814  000FD6                     i1l517:
  4815                           
  4816                           ; BSR set to: 0
  4817                           
  4818                           ; BSR set to: 0
  4819  000FD6  0E17               	movlw	23
  4820  000FD8  6565               	cpfsgt	i1___fttol@exp1& (0+255),b
  4821  000FDA  D00F               	goto	i1l523
  4822                           
  4823                           ; BSR set to: 0
  4824  000FDC  0E00               	movlw	0
  4825  000FDE  6E33               	movwf	?i1___fttol,c
  4826  000FE0  0E00               	movlw	0
  4827  000FE2  6E34               	movwf	?i1___fttol+1,c
  4828  000FE4  0E00               	movlw	0
  4829  000FE6  6E35               	movwf	?i1___fttol+2,c
  4830  000FE8  0E00               	movlw	0
  4831  000FEA  6E36               	movwf	?i1___fttol+3,c
  4832                           
  4833                           ; BSR set to: 0
  4834  000FEC  0012               	return	
  4835  000FEE                     
  4836                           ; BSR set to: 0
  4837                           
  4838                           ; BSR set to: 0
  4839  000FEE  90D8               	bcf	status,0,c
  4840  000FF0  3761               	rlcf	i1___fttol@lval& (0+255),f,b
  4841  000FF2  3762               	rlcf	(i1___fttol@lval+1)& (0+255),f,b
  4842  000FF4  3763               	rlcf	(i1___fttol@lval+2)& (0+255),f,b
  4843  000FF6  3764               	rlcf	(i1___fttol@lval+3)& (0+255),f,b
  4844  000FF8  0765               	decf	i1___fttol@exp1& (0+255),f,b
  4845  000FFA                     i1l523:
  4846                           
  4847                           ; BSR set to: 0
  4848                           
  4849                           ; BSR set to: 0
  4850  000FFA  5165               	movf	i1___fttol@exp1& (0+255),w,b
  4851  000FFC  A4D8               	btfss	status,2,c
  4852  000FFE  D7F7               	goto	i1l524
  4853  001000                     i1u293_20:
  4854                           
  4855                           ; BSR set to: 0
  4856                           
  4857                           ; BSR set to: 0
  4858                           
  4859                           ; BSR set to: 0
  4860  001000  5160               	movf	i1___fttol@sign1& (0+255),w,b
  4861  001002  B4D8               	btfsc	status,2,c
  4862  001004  D008               	goto	i1l526
  4863                           
  4864                           ; BSR set to: 0
  4865  001006  1F64               	comf	(i1___fttol@lval+3)& (0+255),f,b
  4866  001008  1F63               	comf	(i1___fttol@lval+2)& (0+255),f,b
  4867  00100A  1F62               	comf	(i1___fttol@lval+1)& (0+255),f,b
  4868  00100C  6D61               	negf	i1___fttol@lval& (0+255),b
  4869  00100E  0E00               	movlw	0
  4870  001010  2362               	addwfc	(i1___fttol@lval+1)& (0+255),f,b
  4871  001012  2363               	addwfc	(i1___fttol@lval+2)& (0+255),f,b
  4872  001014  2364               	addwfc	(i1___fttol@lval+3)& (0+255),f,b
  4873  001016                     i1l526:
  4874                           
  4875                           ; BSR set to: 0
  4876                           
  4877                           ; BSR set to: 0
  4878  001016  C061  F033         	movff	i1___fttol@lval,?i1___fttol
  4879  00101A  C062  F034         	movff	i1___fttol@lval+1,?i1___fttol+1
  4880  00101E  C063  F035         	movff	i1___fttol@lval+2,?i1___fttol+2
  4881  001022  C064  F036         	movff	i1___fttol@lval+3,?i1___fttol+3
  4882  001026  0012               	return	
  4883  001028                     __end_ofi1___fttol:
  4884                           	opt stack 0
  4885                           pclatu	equ	0xFFB
  4886                           pclath	equ	0xFFA
  4887                           tblptru	equ	0xFF8
  4888                           tblptrh	equ	0xFF7
  4889                           tblptrl	equ	0xFF6
  4890                           tablat	equ	0xFF5
  4891                           prodh	equ	0xFF4
  4892                           prodl	equ	0xFF3
  4893                           intcon	equ	0xFF2
  4894                           intcon2	equ	0xFF1
  4895                           intcon3	equ	0xFF0
  4896                           postinc0	equ	0xFEE
  4897                           fsr0h	equ	0xFEA
  4898                           fsr0l	equ	0xFE9
  4899                           wreg	equ	0xFE8
  4900                           postdec1	equ	0xFE5
  4901                           fsr1h	equ	0xFE2
  4902                           fsr1l	equ	0xFE1
  4903                           bsr	equ	0xFE0
  4904                           fsr2h	equ	0xFDA
  4905                           fsr2l	equ	0xFD9
  4906                           status	equ	0xFD8
  4907                           
  4908 ;; *************** function i1___ftmul *****************
  4909 ;; Defined at:
  4910 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  f1              3   35[COMRAM] float 
  4913 ;;  f2              3   38[COMRAM] float 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  __ftmul         3   45[COMRAM] unsigned um
  4916 ;;  __ftmul         1   49[COMRAM] unsigned char 
  4917 ;;  __ftmul         1   48[COMRAM] unsigned char 
  4918 ;;  __ftmul         1   44[COMRAM] unsigned char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  3   35[COMRAM] float 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4928 ;;      Params:         6       0       0       0       0       0       0       0       0
  4929 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4930 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4931 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4932 ;;Total ram usage:       15 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    2
  4935 ;; This function calls:
  4936 ;;		i1___ftpack
  4937 ;; This function is called by:
  4938 ;;		_LowPriorityISR
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text23
  4943  00111E                     __ptext23:
  4944                           	opt stack 0
  4945  00111E                     i1___ftmul:
  4946                           	opt stack 24
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;incstack = 0
  4950  00111E  C026  F02A         	movff	i1___ftmul@f1+2,??i1___ftmul
  4951  001122  6A2B               	clrf	(??i1___ftmul+1)& (0+255),c
  4952  001124  6A2C               	clrf	(??i1___ftmul+2)& (0+255),c
  4953  001126  3425               	rlcf	i1___ftmul@f1+1,w,c
  4954  001128  362A               	rlcf	??i1___ftmul& (0+255),f,c
  4955  00112A  E301               	bnc	u188_21
  4956  00112C  802B               	bsf	(??i1___ftmul+1)& (0+255),0,c
  4957  00112E                     u188_21:
  4958  00112E  502A               	movf	??i1___ftmul,w,c
  4959  001130  6E2D               	movwf	i1___ftmul@exp,c
  4960  001132  502D               	movf	i1___ftmul@exp,w,c
  4961  001134  A4D8               	btfss	status,2,c
  4962  001136  D007               	goto	i1l494
  4963  001138  0E00               	movlw	0
  4964  00113A  6E24               	movwf	?i1___ftmul,c
  4965  00113C  0E00               	movlw	0
  4966  00113E  6E25               	movwf	?i1___ftmul+1,c
  4967  001140  0E00               	movlw	0
  4968  001142  6E26               	movwf	?i1___ftmul+2,c
  4969  001144  0012               	return	
  4970  001146                     i1l494:
  4971  001146  C029  F02A         	movff	i1___ftmul@f2+2,??i1___ftmul
  4972  00114A  6A2B               	clrf	(??i1___ftmul+1)& (0+255),c
  4973  00114C  6A2C               	clrf	(??i1___ftmul+2)& (0+255),c
  4974  00114E  3428               	rlcf	i1___ftmul@f2+1,w,c
  4975  001150  362A               	rlcf	??i1___ftmul& (0+255),f,c
  4976  001152  E301               	bnc	u190_21
  4977  001154  802B               	bsf	(??i1___ftmul+1)& (0+255),0,c
  4978  001156                     u190_21:
  4979  001156  502A               	movf	??i1___ftmul,w,c
  4980  001158  6E32               	movwf	i1___ftmul@sign,c
  4981  00115A  5032               	movf	i1___ftmul@sign,w,c
  4982  00115C  A4D8               	btfss	status,2,c
  4983  00115E  D007               	goto	i1l496
  4984  001160  0E00               	movlw	0
  4985  001162  6E24               	movwf	?i1___ftmul,c
  4986  001164  0E00               	movlw	0
  4987  001166  6E25               	movwf	?i1___ftmul+1,c
  4988  001168  0E00               	movlw	0
  4989  00116A  6E26               	movwf	?i1___ftmul+2,c
  4990  00116C  0012               	return	
  4991  00116E                     i1l496:
  4992  00116E  5032               	movf	i1___ftmul@sign,w,c
  4993  001170  0F7B               	addlw	123
  4994  001172  262D               	addwf	i1___ftmul@exp,f,c
  4995  001174  C026  F032         	movff	i1___ftmul@f1+2,i1___ftmul@sign
  4996  001178  5029               	movf	i1___ftmul@f2+2,w,c
  4997  00117A  1A32               	xorwf	i1___ftmul@sign,f,c
  4998  00117C  0E80               	movlw	128
  4999  00117E  1632               	andwf	i1___ftmul@sign,f,c
  5000  001180  8E25               	bsf	i1___ftmul@f1+1,7,c
  5001  001182  8E28               	bsf	i1___ftmul@f2+1,7,c
  5002  001184  0EFF               	movlw	255
  5003  001186  1627               	andwf	i1___ftmul@f2,f,c
  5004  001188  0EFF               	movlw	255
  5005  00118A  1628               	andwf	i1___ftmul@f2+1,f,c
  5006  00118C  0E00               	movlw	0
  5007  00118E  1629               	andwf	i1___ftmul@f2+2,f,c
  5008  001190  0E00               	movlw	0
  5009  001192  6E2E               	movwf	i1___ftmul@f3_as_product,c
  5010  001194  0E00               	movlw	0
  5011  001196  6E2F               	movwf	i1___ftmul@f3_as_product+1,c
  5012  001198  0E00               	movlw	0
  5013  00119A  6E30               	movwf	i1___ftmul@f3_as_product+2,c
  5014  00119C  0E07               	movlw	7
  5015  00119E  6E31               	movwf	i1___ftmul@cntr,c
  5016  0011A0  A024               	btfss	i1___ftmul@f1,0,c
  5017  0011A2  D006               	goto	i1l498
  5018  0011A4  5027               	movf	i1___ftmul@f2,w,c
  5019  0011A6  262E               	addwf	i1___ftmul@f3_as_product,f,c
  5020  0011A8  5028               	movf	i1___ftmul@f2+1,w,c
  5021  0011AA  222F               	addwfc	i1___ftmul@f3_as_product+1,f,c
  5022  0011AC  5029               	movf	i1___ftmul@f2+2,w,c
  5023  0011AE  2230               	addwfc	i1___ftmul@f3_as_product+2,f,c
  5024  0011B0                     i1l498:
  5025  0011B0  90D8               	bcf	status,0,c
  5026  0011B2  3226               	rrcf	i1___ftmul@f1+2,f,c
  5027  0011B4  3225               	rrcf	i1___ftmul@f1+1,f,c
  5028  0011B6  3224               	rrcf	i1___ftmul@f1,f,c
  5029  0011B8  90D8               	bcf	status,0,c
  5030  0011BA  3627               	rlcf	i1___ftmul@f2,f,c
  5031  0011BC  3628               	rlcf	i1___ftmul@f2+1,f,c
  5032  0011BE  3629               	rlcf	i1___ftmul@f2+2,f,c
  5033  0011C0  2E31               	decfsz	i1___ftmul@cntr,f,c
  5034  0011C2  D7EE               	goto	i1l497
  5035  0011C4  0E09               	movlw	9
  5036  0011C6  6E31               	movwf	i1___ftmul@cntr,c
  5037  0011C8  A024               	btfss	i1___ftmul@f1,0,c
  5038  0011CA  D006               	goto	i1l501
  5039  0011CC  5027               	movf	i1___ftmul@f2,w,c
  5040  0011CE  262E               	addwf	i1___ftmul@f3_as_product,f,c
  5041  0011D0  5028               	movf	i1___ftmul@f2+1,w,c
  5042  0011D2  222F               	addwfc	i1___ftmul@f3_as_product+1,f,c
  5043  0011D4  5029               	movf	i1___ftmul@f2+2,w,c
  5044  0011D6  2230               	addwfc	i1___ftmul@f3_as_product+2,f,c
  5045  0011D8                     i1l501:
  5046  0011D8  90D8               	bcf	status,0,c
  5047  0011DA  3226               	rrcf	i1___ftmul@f1+2,f,c
  5048  0011DC  3225               	rrcf	i1___ftmul@f1+1,f,c
  5049  0011DE  3224               	rrcf	i1___ftmul@f1,f,c
  5050  0011E0  90D8               	bcf	status,0,c
  5051  0011E2  3230               	rrcf	i1___ftmul@f3_as_product+2,f,c
  5052  0011E4  322F               	rrcf	i1___ftmul@f3_as_product+1,f,c
  5053  0011E6  322E               	rrcf	i1___ftmul@f3_as_product,f,c
  5054  0011E8  2E31               	decfsz	i1___ftmul@cntr,f,c
  5055  0011EA  D7EE               	goto	i1l500
  5056  0011EC  C02E  F013         	movff	i1___ftmul@f3_as_product,i1___ftpack@arg
  5057  0011F0  C02F  F014         	movff	i1___ftmul@f3_as_product+1,i1___ftpack@arg+1
  5058  0011F4  C030  F015         	movff	i1___ftmul@f3_as_product+2,i1___ftpack@arg+2
  5059  0011F8  C02D  F016         	movff	i1___ftmul@exp,i1___ftpack@exp
  5060  0011FC  C032  F017         	movff	i1___ftmul@sign,i1___ftpack@sign
  5061  001200  ECC1  F009         	call	i1___ftpack	;wreg free
  5062  001204  C013  F024         	movff	?i1___ftpack,?i1___ftmul
  5063  001208  C014  F025         	movff	?i1___ftpack+1,?i1___ftmul+1
  5064  00120C  C015  F026         	movff	?i1___ftpack+2,?i1___ftmul+2
  5065  001210  0012               	return	
  5066  001212                     __end_ofi1___ftmul:
  5067                           	opt stack 0
  5068                           pclatu	equ	0xFFB
  5069                           pclath	equ	0xFFA
  5070                           tblptru	equ	0xFF8
  5071                           tblptrh	equ	0xFF7
  5072                           tblptrl	equ	0xFF6
  5073                           tablat	equ	0xFF5
  5074                           prodh	equ	0xFF4
  5075                           prodl	equ	0xFF3
  5076                           intcon	equ	0xFF2
  5077                           intcon2	equ	0xFF1
  5078                           intcon3	equ	0xFF0
  5079                           postinc0	equ	0xFEE
  5080                           fsr0h	equ	0xFEA
  5081                           fsr0l	equ	0xFE9
  5082                           wreg	equ	0xFE8
  5083                           postdec1	equ	0xFE5
  5084                           fsr1h	equ	0xFE2
  5085                           fsr1l	equ	0xFE1
  5086                           bsr	equ	0xFE0
  5087                           fsr2h	equ	0xFDA
  5088                           fsr2l	equ	0xFD9
  5089                           status	equ	0xFD8
  5090                           
  5091 ;; *************** function i1___ftpack *****************
  5092 ;; Defined at:
  5093 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  arg             3   18[COMRAM] unsigned um
  5096 ;;  exp             1   21[COMRAM] unsigned char 
  5097 ;;  sign            1   22[COMRAM] unsigned char 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  3   18[COMRAM] float 
  5102 ;; Registers used:
  5103 ;;		wreg, status,2, status,0
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5109 ;;      Params:         5       0       0       0       0       0       0       0       0
  5110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5111 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5112 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5113 ;;Total ram usage:        8 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    1
  5116 ;; This function calls:
  5117 ;;		Nothing
  5118 ;; This function is called by:
  5119 ;;		i1___ftmul
  5120 ;;		i1___lltoft
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text24
  5125  001382                     __ptext24:
  5126                           	opt stack 0
  5127  001382                     i1___ftpack:
  5128                           	opt stack 24
  5129                           
  5130                           ;incstack = 0
  5131  001382  5016               	movf	i1___ftpack@exp,w,c
  5132  001384  B4D8               	btfsc	status,2,c
  5133  001386  D005               	goto	i1u118_20
  5134  001388  5013               	movf	i1___ftpack@arg,w,c
  5135  00138A  1014               	iorwf	i1___ftpack@arg+1,w,c
  5136  00138C  1015               	iorwf	i1___ftpack@arg+2,w,c
  5137  00138E  A4D8               	btfss	status,2,c
  5138  001390  D00C               	goto	i1l415
  5139  001392                     i1u118_20:
  5140  001392  0E00               	movlw	0
  5141  001394  6E13               	movwf	?i1___ftpack,c
  5142  001396  0E00               	movlw	0
  5143  001398  6E14               	movwf	?i1___ftpack+1,c
  5144  00139A  0E00               	movlw	0
  5145  00139C  6E15               	movwf	?i1___ftpack+2,c
  5146  00139E  0012               	return	
  5147  0013A0  2A16               	incf	i1___ftpack@exp,f,c
  5148  0013A2  90D8               	bcf	status,0,c
  5149  0013A4  3215               	rrcf	i1___ftpack@arg+2,f,c
  5150  0013A6  3214               	rrcf	i1___ftpack@arg+1,f,c
  5151  0013A8  3213               	rrcf	i1___ftpack@arg,f,c
  5152  0013AA                     i1l415:
  5153  0013AA  0E00               	movlw	0
  5154  0013AC  1413               	andwf	i1___ftpack@arg,w,c
  5155  0013AE  6E18               	movwf	??i1___ftpack& (0+255),c
  5156  0013B0  0E00               	movlw	0
  5157  0013B2  1414               	andwf	i1___ftpack@arg+1,w,c
  5158  0013B4  6E19               	movwf	(??i1___ftpack+1)& (0+255),c
  5159  0013B6  0EFE               	movlw	254
  5160  0013B8  1415               	andwf	i1___ftpack@arg+2,w,c
  5161  0013BA  6E1A               	movwf	(??i1___ftpack+2)& (0+255),c
  5162  0013BC  5018               	movf	??i1___ftpack,w,c
  5163  0013BE  1019               	iorwf	??i1___ftpack+1,w,c
  5164  0013C0  101A               	iorwf	??i1___ftpack+2,w,c
  5165  0013C2  B4D8               	btfsc	status,2,c
  5166  0013C4  D00C               	goto	i1l418
  5167  0013C6  D7EC               	goto	i1l416
  5168  0013C8  2A16               	incf	i1___ftpack@exp,f,c
  5169  0013CA  0E01               	movlw	1
  5170  0013CC  2613               	addwf	i1___ftpack@arg,f,c
  5171  0013CE  0E00               	movlw	0
  5172  0013D0  2214               	addwfc	i1___ftpack@arg+1,f,c
  5173  0013D2  0E00               	movlw	0
  5174  0013D4  2215               	addwfc	i1___ftpack@arg+2,f,c
  5175  0013D6  90D8               	bcf	status,0,c
  5176  0013D8  3215               	rrcf	i1___ftpack@arg+2,f,c
  5177  0013DA  3214               	rrcf	i1___ftpack@arg+1,f,c
  5178  0013DC  3213               	rrcf	i1___ftpack@arg,f,c
  5179  0013DE                     i1l418:
  5180  0013DE  0E00               	movlw	0
  5181  0013E0  1413               	andwf	i1___ftpack@arg,w,c
  5182  0013E2  6E18               	movwf	??i1___ftpack& (0+255),c
  5183  0013E4  0E00               	movlw	0
  5184  0013E6  1414               	andwf	i1___ftpack@arg+1,w,c
  5185  0013E8  6E19               	movwf	(??i1___ftpack+1)& (0+255),c
  5186  0013EA  0EFF               	movlw	255
  5187  0013EC  1415               	andwf	i1___ftpack@arg+2,w,c
  5188  0013EE  6E1A               	movwf	(??i1___ftpack+2)& (0+255),c
  5189  0013F0  5018               	movf	??i1___ftpack,w,c
  5190  0013F2  1019               	iorwf	??i1___ftpack+1,w,c
  5191  0013F4  101A               	iorwf	??i1___ftpack+2,w,c
  5192  0013F6  B4D8               	btfsc	status,2,c
  5193  0013F8  D006               	goto	i1l421
  5194  0013FA  D7E6               	goto	i1l419
  5195  0013FC  0616               	decf	i1___ftpack@exp,f,c
  5196  0013FE  90D8               	bcf	status,0,c
  5197  001400  3613               	rlcf	i1___ftpack@arg,f,c
  5198  001402  3614               	rlcf	i1___ftpack@arg+1,f,c
  5199  001404  3615               	rlcf	i1___ftpack@arg+2,f,c
  5200  001406                     i1l421:
  5201  001406  BE14               	btfsc	i1___ftpack@arg+1,7,c
  5202  001408  D003               	goto	i1u122_20
  5203  00140A  0E02               	movlw	2
  5204  00140C  6016               	cpfslt	i1___ftpack@exp,c
  5205  00140E  D7F6               	goto	i1l422
  5206  001410                     i1u122_20:
  5207  001410  A016               	btfss	i1___ftpack@exp,0,c
  5208  001412  9E14               	bcf	i1___ftpack@arg+1,7,c
  5209  001414  90D8               	bcf	status,0,c
  5210  001416  3216               	rrcf	i1___ftpack@exp,f,c
  5211  001418  5016               	movf	i1___ftpack@exp,w,c
  5212  00141A  1215               	iorwf	i1___ftpack@arg+2,f,c
  5213  00141C  5017               	movf	i1___ftpack@sign,w,c
  5214  00141E  A4D8               	btfss	status,2,c
  5215  001420  8E15               	bsf	i1___ftpack@arg+2,7,c
  5216  001422  C013  F013         	movff	i1___ftpack@arg,?i1___ftpack
  5217  001426  C014  F014         	movff	i1___ftpack@arg+1,?i1___ftpack+1
  5218  00142A  C015  F015         	movff	i1___ftpack@arg+2,?i1___ftpack+2
  5219  00142E  0012               	return	
  5220  001430                     __end_ofi1___ftpack:
  5221                           	opt stack 0
  5222                           pclatu	equ	0xFFB
  5223                           pclath	equ	0xFFA
  5224                           tblptru	equ	0xFF8
  5225                           tblptrh	equ	0xFF7
  5226                           tblptrl	equ	0xFF6
  5227                           tablat	equ	0xFF5
  5228                           prodh	equ	0xFF4
  5229                           prodl	equ	0xFF3
  5230                           intcon	equ	0xFF2
  5231                           intcon2	equ	0xFF1
  5232                           intcon3	equ	0xFF0
  5233                           postinc0	equ	0xFEE
  5234                           fsr0h	equ	0xFEA
  5235                           fsr0l	equ	0xFE9
  5236                           wreg	equ	0xFE8
  5237                           postdec1	equ	0xFE5
  5238                           fsr1h	equ	0xFE2
  5239                           fsr1l	equ	0xFE1
  5240                           bsr	equ	0xFE0
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245 ;; *************** function _HighPriorityISR *****************
  5246 ;; Defined at:
  5247 ;;		line 26 in file "main.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5261 ;;      Params:         0       0       0       0       0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5263 ;;      Temps:         18       0       0       0       0       0       0       0       0
  5264 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5265 ;;Total ram usage:       18 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		Interrupt level 2
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	intcode
  5275  000008                     __pintcode:
  5276                           	opt stack 0
  5277  000008                     _HighPriorityISR:
  5278                           	opt stack 24
  5279                           
  5280                           ;incstack = 0
  5281  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5282  00000A  ED09  F009         	call	int_func,f	;refresh shadow registers
  5283                           pclatu	equ	0xFFB
  5284                           pclath	equ	0xFFA
  5285                           tblptru	equ	0xFF8
  5286                           tblptrh	equ	0xFF7
  5287                           tblptrl	equ	0xFF6
  5288                           tablat	equ	0xFF5
  5289                           prodh	equ	0xFF4
  5290                           prodl	equ	0xFF3
  5291                           intcon	equ	0xFF2
  5292                           intcon2	equ	0xFF1
  5293                           intcon3	equ	0xFF0
  5294                           postinc0	equ	0xFEE
  5295                           fsr0h	equ	0xFEA
  5296                           fsr0l	equ	0xFE9
  5297                           wreg	equ	0xFE8
  5298                           postdec1	equ	0xFE5
  5299                           fsr1h	equ	0xFE2
  5300                           fsr1l	equ	0xFE1
  5301                           bsr	equ	0xFE0
  5302                           fsr2h	equ	0xFDA
  5303                           fsr2l	equ	0xFD9
  5304                           status	equ	0xFD8
  5305                           
  5306                           	psect	intcode_body
  5307  001212                     __pintcode_body:
  5308                           	opt stack 24
  5309  001212                     int_func:
  5310                           	opt stack 24
  5311  001212  0006               	pop		; remove dummy address from shadow register refresh
  5312  001214  CFFA F001          	movff	pclath,??_HighPriorityISR
  5313  001218  CFFB F002          	movff	pclatu,??_HighPriorityISR+1
  5314  00121C  CFE9 F003          	movff	fsr0l,??_HighPriorityISR+2
  5315  001220  CFEA F004          	movff	fsr0h,??_HighPriorityISR+3
  5316  001224  CFE1 F005          	movff	fsr1l,??_HighPriorityISR+4
  5317  001228  CFE2 F006          	movff	fsr1h,??_HighPriorityISR+5
  5318  00122C  CFD9 F007          	movff	fsr2l,??_HighPriorityISR+6
  5319  001230  CFDA F008          	movff	fsr2h,??_HighPriorityISR+7
  5320  001234  CFF3 F009          	movff	prodl,??_HighPriorityISR+8
  5321  001238  CFF4 F00A          	movff	prodh,??_HighPriorityISR+9
  5322  00123C  CFF6 F00B          	movff	tblptrl,??_HighPriorityISR+10
  5323  001240  CFF7 F00C          	movff	tblptrh,??_HighPriorityISR+11
  5324  001244  CFF8 F00D          	movff	tblptru,??_HighPriorityISR+12
  5325  001248  CFF5 F00E          	movff	tablat,??_HighPriorityISR+13
  5326  00124C  C04A  F00F         	movff	btemp,??_HighPriorityISR+14
  5327  001250  C04B  F010         	movff	btemp+1,??_HighPriorityISR+15
  5328  001254  C04C  F011         	movff	btemp+2,??_HighPriorityISR+16
  5329  001258  C04D  F012         	movff	btemp+3,??_HighPriorityISR+17
  5330                           
  5331                           ;main.c: 27: INTCONbits.TMR0IF = 0;
  5332  00125C  94F2               	bcf	intcon,2,c	;volatile
  5333                           
  5334                           ;main.c: 28: TMR0L = 100;
  5335  00125E  0E64               	movlw	100
  5336  001260  6ED6               	movwf	4054,c	;volatile
  5337                           
  5338                           ;main.c: 29: ADCON0bits.GO_DONE = 1;
  5339  001262  82C2               	bsf	4034,1,c	;volatile
  5340                           
  5341                           ;main.c: 30: if (contador == 100) {
  5342  001264  0E64               	movlw	100
  5343  001266  0100               	movlb	0	; () banked
  5344  001268  19CF               	xorwf	_contador& (0+255),w,b
  5345  00126A  A4D8               	btfss	status,2,c
  5346  00126C  D009               	goto	i2l85
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;main.c: 31: contador = 1;
  5350  00126E  0E01               	movlw	1
  5351  001270  6FCF               	movwf	_contador& (0+255),b
  5352                           
  5353                           ;main.c: 32: leiturapotenciometro = 1;
  5354  001272  0E00               	movlw	0
  5355  001274  6E49               	movwf	_leiturapotenciometro+1,c
  5356  001276  0E01               	movlw	1
  5357  001278  6E48               	movwf	_leiturapotenciometro,c
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;main.c: 33: ADCON0bits.CHS1 = 1;
  5361  00127A  86C2               	bsf	4034,3,c	;volatile
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;main.c: 34: ADCON0bits.CHS0 = 1;
  5365  00127C  84C2               	bsf	4034,2,c	;volatile
  5366  00127E  D002               	goto	L2
  5367  001280                     i2l85:
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;main.c: 38: ADCON0bits.CHS1 = 0;
  5371  001280  96C2               	bcf	4034,3,c	;volatile
  5372                           
  5373                           ;main.c: 39: ADCON0bits.CHS0 = 0;
  5374  001282  94C2               	bcf	4034,2,c	;volatile
  5375  001284                     L2:
  5376                           
  5377                           ;main.c: 40: ADCON0bits.GO_DONE = 1;
  5378  001284  82C2               	bsf	4034,1,c	;volatile
  5379                           
  5380                           ; BSR set to: 0
  5381                           
  5382                           ; BSR set to: 0
  5383  001286  C012  F04D         	movff	??_HighPriorityISR+17,btemp+3
  5384  00128A  C011  F04C         	movff	??_HighPriorityISR+16,btemp+2
  5385  00128E  C010  F04B         	movff	??_HighPriorityISR+15,btemp+1
  5386  001292  C00F  F04A         	movff	??_HighPriorityISR+14,btemp
  5387  001296  C00E  FFF5         	movff	??_HighPriorityISR+13,tablat
  5388  00129A  C00D  FFF8         	movff	??_HighPriorityISR+12,tblptru
  5389  00129E  C00C  FFF7         	movff	??_HighPriorityISR+11,tblptrh
  5390  0012A2  C00B  FFF6         	movff	??_HighPriorityISR+10,tblptrl
  5391  0012A6  C00A  FFF4         	movff	??_HighPriorityISR+9,prodh
  5392  0012AA  C009  FFF3         	movff	??_HighPriorityISR+8,prodl
  5393  0012AE  C008  FFDA         	movff	??_HighPriorityISR+7,fsr2h
  5394  0012B2  C007  FFD9         	movff	??_HighPriorityISR+6,fsr2l
  5395  0012B6  C006  FFE2         	movff	??_HighPriorityISR+5,fsr1h
  5396  0012BA  C005  FFE1         	movff	??_HighPriorityISR+4,fsr1l
  5397  0012BE  C004  FFEA         	movff	??_HighPriorityISR+3,fsr0h
  5398  0012C2  C003  FFE9         	movff	??_HighPriorityISR+2,fsr0l
  5399  0012C6  C002  FFFB         	movff	??_HighPriorityISR+1,pclatu
  5400  0012CA  C001  FFFA         	movff	??_HighPriorityISR,pclath
  5401  0012CE  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5402  0012D0  0011               	retfie		f
  5403  0012D2                     __end_of_HighPriorityISR:
  5404                           	opt stack 0
  5405                           pclatu	equ	0xFFB
  5406                           pclath	equ	0xFFA
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           intcon2	equ	0xFF1
  5415                           intcon3	equ	0xFF0
  5416                           postinc0	equ	0xFEE
  5417                           fsr0h	equ	0xFEA
  5418                           fsr0l	equ	0xFE9
  5419                           wreg	equ	0xFE8
  5420                           postdec1	equ	0xFE5
  5421                           fsr1h	equ	0xFE2
  5422                           fsr1l	equ	0xFE1
  5423                           bsr	equ	0xFE0
  5424                           fsr2h	equ	0xFDA
  5425                           fsr2l	equ	0xFD9
  5426                           status	equ	0xFD8
  5427                           pclatu	equ	0xFFB
  5428                           pclath	equ	0xFFA
  5429                           tblptru	equ	0xFF8
  5430                           tblptrh	equ	0xFF7
  5431                           tblptrl	equ	0xFF6
  5432                           tablat	equ	0xFF5
  5433                           prodh	equ	0xFF4
  5434                           prodl	equ	0xFF3
  5435                           intcon	equ	0xFF2
  5436                           intcon2	equ	0xFF1
  5437                           intcon3	equ	0xFF0
  5438                           postinc0	equ	0xFEE
  5439                           fsr0h	equ	0xFEA
  5440                           fsr0l	equ	0xFE9
  5441                           wreg	equ	0xFE8
  5442                           postdec1	equ	0xFE5
  5443                           fsr1h	equ	0xFE2
  5444                           fsr1l	equ	0xFE1
  5445                           bsr	equ	0xFE0
  5446                           fsr2h	equ	0xFDA
  5447                           fsr2l	equ	0xFD9
  5448                           status	equ	0xFD8
  5449                           
  5450                           	psect	rparam
  5451  0000                     pclatu	equ	0xFFB
  5452                           pclath	equ	0xFFA
  5453                           tblptru	equ	0xFF8
  5454                           tblptrh	equ	0xFF7
  5455                           tblptrl	equ	0xFF6
  5456                           tablat	equ	0xFF5
  5457                           prodh	equ	0xFF4
  5458                           prodl	equ	0xFF3
  5459                           intcon	equ	0xFF2
  5460                           intcon2	equ	0xFF1
  5461                           intcon3	equ	0xFF0
  5462                           postinc0	equ	0xFEE
  5463                           fsr0h	equ	0xFEA
  5464                           fsr0l	equ	0xFE9
  5465                           wreg	equ	0xFE8
  5466                           postdec1	equ	0xFE5
  5467                           fsr1h	equ	0xFE2
  5468                           fsr1l	equ	0xFE1
  5469                           bsr	equ	0xFE0
  5470                           fsr2h	equ	0xFDA
  5471                           fsr2l	equ	0xFD9
  5472                           status	equ	0xFD8
  5473                           
  5474                           	psect	temp
  5475  00004A                     btemp:
  5476                           	opt stack 0
  5477  00004A                     	ds	1
  5478  0000                     int$flags	set	btemp
  5479  0000                     wtemp6	set	btemp+1
  5480                           pclatu	equ	0xFFB
  5481                           pclath	equ	0xFFA
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           prodh	equ	0xFF4
  5487                           prodl	equ	0xFF3
  5488                           intcon	equ	0xFF2
  5489                           intcon2	equ	0xFF1
  5490                           intcon3	equ	0xFF0
  5491                           postinc0	equ	0xFEE
  5492                           fsr0h	equ	0xFEA
  5493                           fsr0l	equ	0xFE9
  5494                           wreg	equ	0xFE8
  5495                           postdec1	equ	0xFE5
  5496                           fsr1h	equ	0xFE2
  5497                           fsr1l	equ	0xFE1
  5498                           bsr	equ	0xFE0
  5499                           fsr2h	equ	0xFDA
  5500                           fsr2l	equ	0xFD9
  5501                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    0
    Data        8
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      73
    BANK0           160     92     114
    BANK1           256     24      24
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityISR in COMRAM

    _LowPriorityISR->i1___fttol
    i1___lltoft->i1___ftpack
    i1___fttol->i1___ftmul
    i1___ftmul->i1___lltoft

Critical Paths under _HighPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___fttol
    _putsXLCD->_WriteDataXLCD
    ___lltoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lltoft
    ___ftadd->___ftmul
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _LowPriorityISR in BANK0

    _LowPriorityISR->i1___fttol

Critical Paths under _HighPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowPriorityISR in BANK1

    None.

Critical Paths under _HighPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowPriorityISR in BANK2

    None.

Critical Paths under _HighPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityISR in BANK3

    None.

Critical Paths under _HighPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityISR in BANK4

    None.

Critical Paths under _HighPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityISR in BANK5

    None.

Critical Paths under _HighPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityISR in BANK6

    None.

Critical Paths under _HighPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityISR in BANK7

    None.

Critical Paths under _HighPriorityISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   17055
                                             88 BANK0      4     4      0
                                              0 BANK1     24    24      0
                           _OpenXLCD
                       _WriteCmdXLCD
                      _WriteDataXLCD
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___ftmul
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     397
                                             30 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      62
                                             29 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     412
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             9     5      4    3080
                                             37 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     592
                                             29 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     601
                                             29 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     606
                                             73 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3931
                                             46 BANK0     15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4518
                                             61 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2833
                                             29 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     973
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1165
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     155
                                             30 BANK0      1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      62
                                             29 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      62
                                             29 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowPriorityISR                                      23    23      0    1653
                                              6 BANK0     23    23      0
                          i1___ftmul
                          i1___fttol
                         i1___lltoft
 ---------------------------------------------------------------------------------
 (5) i1___lltoft                                           9     5      4     482
                                             26 COMRAM     9     5      4
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (5) i1___fttol                                           15    11      4     406
                                             50 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                          i1___ftmul (ARG)
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) i1___ftmul                                           15     9      6     765
                                             35 COMRAM    15     9      6
                         i1___ftpack
                         i1___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___ftpack                                           8     3      5     387
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighPriorityISR                                     18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   _WriteDataXLCD
     _DelayFor18TCY
   ___awdiv
   ___awmod
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lltoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___lldiv
   ___llmod
   ___lltoft
     ___ftpack
   ___wmul
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY

 _LowPriorityISR (ROOT)
   i1___ftmul
     i1___ftpack
     i1___lltoft (ARG)
       i1___ftpack
   i1___fttol
     i1___ftmul (ARG)
       i1___ftpack
       i1___lltoft (ARG)
         i1___ftpack
     i1___lltoft (ARG)
       i1___ftpack
   i1___lltoft
     i1___ftpack

 _HighPriorityISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     18      18       7        9.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      72       5       71.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      20        0.0%
DATA                 0      0      D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Dec 04 19:32:38 2023

              i1___ftpack 1382                i1___lltoft 171E              ___awdiv@sign 0082  
                      _dc 00D0                        bsr 000FE0       ___wmul@multiplicand 007F  
            ___ftadd@exp1 00A8              ___ftadd@exp2 00A7              ___ftadd@sign 00A6  
                     l103 089A                       l105 0AFE                       l107 0B16  
                     l151 14AA                       l145 148A                       l154 14BA  
                     l139 146E                       l148 149A                       l500 10D4  
                     l157 14CA                       l421 1358                       l501 10E4  
                     l422 134E                       l415 12FC                       l168 18B8  
                     l416 12F2                       l185 18EE                       l418 1330  
                     l450 0D08                       l186 18CE                       l371 1520  
                     l419 131A                       l523 0F02                       l515 0E66  
                     l372 1518                       l460 0D64                       l524 0EF6  
                     l381 15FC                       l461 0D5A                       l517 0EDE  
                     l390 164E                       l382 1608                       l470 0D98  
                     l446 0CDE                       l526 0F1E                       l518 0ECE  
                     l375 1540                       l455 0D6E                       l551 1592  
                     l376 154A                       l368 14F2                       l384 161E  
                     l472 0DC6                       l552 1586                       l377 1558  
                     l369 1502                       l385 1616                       l473 0DE2  
                     l561 1678                       l474 0E12                       l562 166C  
                     l555 15C6                       l388 1636                       l556 15D4  
                     l572 16D4                       l389 1640                       l469 0DA2  
                     l565 16A0                       l573 16C8                       l494 1052  
                     l566 16AE                       l496 107A                       l497 10AC  
                     l498 10BC                       _PR2 000FCB   __end_of_HighPriorityISR 12D2  
                     _dc2 00CC                       _pot 00BC     __size_of_WriteCmdXLCD 0044  
            ___awmod@sign 0082                       wreg 000FE8              __CFG_FOSC$HS 000000  
            i1___ftmul@f1 0024              i1___ftmul@f2 0027              i1___fttol@f1 0033  
            __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000              i1___lltoft@c 001B  
                    l3462 0AFE                      STR_1 0808                      STR_2 080C  
                    STR_3 0801                      u2210 1362                      u3010 0AF6  
                    u3020 0B0E                      u3030 0B5C                      u2240 1478  
                    u2400 0CFA                      u2170 12E4                      u2331 0C9C  
                    u3035 0B52                      u2500 0DAA                      u2341 0CB0  
                    u2430 0D38                      u2370 0CD0                      u3067 0890  
           __CFG_DEBUG$ON 000000                      u3077 1932                      u2541 103A  
                    u2630 1524                      u2470 0D76                      u3087 1946  
                    u3097 1954                      u2561 1062                      u2721 0E4A  
                    u2810 1596                      u2740 0E84                      u2840 167C  
                    u2745 0E7C                      u2690 1622                      u2780 0F08  
                    i1l92 00BC                      i1l93 010C                      i1l94 0156  
                    i1l95 013C                      i1l96 01A0                      i1l97 0186  
                    i2l85 1280      _leiturapotenciometro 0048                      _main 0812  
            ___ftpack@arg 007D              ___ftpack@exp 0080                      _temp 003C  
                    _vent 00C0                      fsr0h 000FEA                      fsr1h 000FE2  
                    fsr2h 000FDA                      fsr0l 000FE9                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 004A    __size_of_WriteDataXLCD 0044  
                    prodh 000FF4                      prodl 000FF3                      start 01F8  
           __CFG_MCLRE$ON 000000              ___ftmul@cntr 009B              ___param_bank 000000  
            ___ftmul@sign 009C             i1___ftmul@exp 002D              ___fttol@exp1 00B7  
            ___fttol@lval 00B3              _WriteCmdXLCD 184E   i1___ftmul@f3_as_product 002E  
          __CFG_CCP2MX$ON 000000             ?_SetDDRamAddr 0001                     ?_main 0001  
         __end_of___awdiv 1562           __end_of___ftadd 0E38           __end_of___awmod 1658  
         __end_of___lldiv 15E6           __end_of___ftmul 111E                     _T0CON 000FD5  
         ___awdiv@divisor 007F           __end_of___llmod 16C0           __end_of___fttol 0F30  
                   i1l500 11C8                     i1l421 1406                     i1l501 11D8  
                   i1l422 13FC                     i1l415 13AA                     i1l416 13A0  
                   i1l418 13DE                     i1l419 13C8                     i1l523 0FFA  
                   i1l515 0F5E                     i1l524 0FEE                     i1l517 0FD6  
                   i1l526 1016                     i1l518 0FC6                     i1l572 1730  
                   i1l573 1724                     i1l494 1146                     i1l496 116E  
                   i1l497 11A0                     i1l498 11B0           ___awdiv@counter 0081  
                   _TMR0L 000FD6                     _PORTD 000F83                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
            ___lltoft@exp 008D             ___ftpack@sign 0081                     pclath 000FFA  
                   tablat 000FF5                     status 000FD8                     wtemp6 004B  
      __size_ofi1___ftmul 00F4        __size_ofi1___fttol 00F8            i1___ftpack@arg 0013  
          i1___ftpack@exp 0016           __initialization 177A              __end_of_main 0C8A  
        __end_of_BusyXLCD 18CC               ?i1___ftpack 0013            i1___ftmul@cntr 0031  
          i1___ftmul@sign 0032        __size_of_DelayXLCD 0014               ?i1___lltoft 001B  
   __size_of_DelayPORXLCD 0014            ??_SetDDRamAddr 007D            i1___fttol@exp1 0065  
          i1___fttol@lval 0061          __end_of_OpenXLCD 14DC                    ??_main 00B8  
           ___fttol@sign1 00B2             __activetblptr 000001             _WriteDataXLCD 180A  
        ?_HighPriorityISR 0001                    _ADCON1 000FC1                    _ADCON2 000FC0  
          i1___lltoft@exp 0023          ___llmod@dividend 007D                    _ADRESH 000FC4  
                  _ADRESL 000FC3                    _CCPR1L 000FBE                    _CCPR2L 000FBB  
        ___awdiv@dividend 007D          ??_LowPriorityISR 0066          __end_of___ftpack 1382  
        __end_of___lltoft 171E                    i1l3318 013C                    u190_21 1156  
                  u188_21 112E                    u287_21 0F40              _DelayPORXLCD 193E  
                  ___wmul 1902                 ??___awdiv 0081                 ??___ftadd 00A3  
               ??___awmod 0081                 ??___lldiv 0085                 ??___ftmul 0094  
               ??___llmod 0085                 ??___fttol 00AD                    _dconst 0040  
                  clear_0 17A0          ___awdiv@quotient 0083           ___awmod@divisor 007F  
                  _result 00C8           ___awmod@counter 0081            ?_WriteDataXLCD 0001  
   ___ftmul@f3_as_product 0098         __end_ofi1___ftmul 1212         __end_ofi1___fttol 1028  
            __pdataCOMRAM 003C              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8          __end_of_putsXLCD 1902  
       __end_of_DelayXLCD 193E       __size_ofi1___ftpack 00AE       __size_ofi1___lltoft 005C  
              __accesstop 0060   __end_of__initialization 17B2                ___ftadd@f1 009D  
              ___ftadd@f2 00A0           i1___ftpack@sign 0017             ___rparam_used 000001  
              ___ftmul@f1 008E                ___ftmul@f2 0091                ___fttol@f1 00A9  
          __pcstackCOMRAM 0001                ___lltoft@c 0085           i1___fttol@sign1 0060  
  __size_of_DelayFor18TCY 000A                __pbssBANK0 00BC                 ?_BusyXLCD 0001  
         WriteCmdXLCD@cmd 007D      __end_of_SetDDRamAddr 180A                 ?_OpenXLCD 0001  
       WriteDataXLCD@data 007D                   ?___wmul 007D           ??_WriteDataXLCD 007D  
               ?___ftpack 007D                 ?___lltoft 0085                ??_BusyXLCD 007D  
              ??_OpenXLCD 007E                   __Hparam 0000                   __Lparam 0000  
            ??i1___ftpack 0018                   ___awdiv 14DC             _DelayFor18TCY 1952  
                 ___ftadd 0C8A                   ___awmod 15E6                   ___lldiv 1562  
         __size_of___wmul 0028                   ___ftmul 1028                   ___llmod 1658  
                 ___fttol 0E38                 ?_putsXLCD 007E              ??i1___lltoft 001F  
            __psmallconst 0800                   __pcinit 177A                ??___ftpack 0082  
                 __ramtop 0800                ??___lltoft 0089                   __ptext0 0812  
                 __ptext1 18CC                   __ptext2 180A                   __ptext3 1902  
                 __ptext4 16C0                   __ptext5 1658                   __ptext6 1562  
                 __ptext7 0E38                   __ptext8 1028                   __ptext9 0C8A  
               _T2CONbits 000FCA          ___awmod@dividend 007D                   _result2 00C4  
                 main@dez 0102                   main@aux 0112                   main@uni 0104  
          __pintcode_body 1212      end_of_initialization 17B2        __end_ofi1___ftpack 1430  
      __end_ofi1___lltoft 177A                   int_func 1212           ___lldiv@divisor 0081  
         ___lldiv@counter 0089            ?_DelayFor18TCY 0001                   postdec1 000FE5  
                 postinc0 000FEE                ??_putsXLCD 0080                 _TRISAbits 000F92  
               _TRISEbits 000F96                 i1___ftmul 111E                 i1___fttol 0F30  
   __size_of_SetDDRamAddr 0046  __size_of_HighPriorityISR 12CA               _CCP1CONbits 000FBD  
             _CCP2CONbits 000FBA                 _DelayXLCD 192A               ___ftmul@exp 0097  
          __end_of___wmul 192A             __pidataCOMRAM 195C              _SetDDRamAddr 17C4  
      SetDDRamAddr@DDaddr 007D       start_initialization 177A                ?i1___ftmul 0024  
              ?i1___fttol 0033           ___llmod@divisor 0081         __size_of_BusyXLCD 003A  
         ___llmod@counter 0085                ?_DelayXLCD 0001           ??_DelayFor18TCY 007D  
 __size_of_LowPriorityISR 01E0         __size_of_OpenXLCD 00AC                  ??___wmul 0081  
           ?_WriteCmdXLCD 0001         __size_of___ftpack 00B0         __size_of___lltoft 005E  
             __pbssCOMRAM 0044             __pcstackBANK0 0060             __pcstackBANK1 0100  
       ??_HighPriorityISR 0001            putsXLCD@buffer 007E                 __pintcode 0008  
          ??_WriteCmdXLCD 007D                  ?___awdiv 007D                  ?___ftadd 009D  
                ?___awmod 007D                  ?___lldiv 007D                  ?___ftmul 008E  
                ?___llmod 007D                  ?___fttol 00A9               __pintcodelo 0018  
       __size_of_putsXLCD 0036     __end_of_WriteDataXLCD 184E               __smallconst 0800  
             ??i1___ftmul 002A               ??i1___fttol 0037            ___wmul@product 0081  
                _LATEbits 000F8D               ??_DelayXLCD 007D                  _IPR1bits 000F9F  
                _PIE1bits 000F9D             ?_DelayPORXLCD 0001                  i1u122_20 1410  
                i1u118_20 1392                  i1u310_27 0148                  i1u311_27 0192  
                i1u293_20 1000                  i1u289_20 0F7C                  i1u289_25 0F74  
                i1u299_20 016E                  _PIR1bits 000F9E           OpenXLCD@lcdtype 007E  
                _RCONbits 000FD0                 _valorconv 0044                _ADCON0bits 000FC2  
       ___wmul@multiplier 007D                 main@cent3 010C               _INTCON2bits 000FF1  
             _INTCON3bits 000FF0                 copy_data0 178E                  _BusyXLCD 1892  
          ??_DelayPORXLCD 007D                  _OpenXLCD 1430                  __Hrparam 0000  
          _LowPriorityISR 0018                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___awdiv 0086          __size_of___ftadd 01AE          __size_of___awmod 0072  
        __size_of___lldiv 0084          __size_of___ftmul 00F6          __size_of___llmod 0068  
        __size_of___fttol 00F8                  ___ftpack 12D2                  ___lltoft 16C0  
                __ptext10 12D2                  __ptext11 15E6                  __ptext12 14DC  
                __ptext21 171E                  __ptext13 1430                  __ptext22 0F30  
                __ptext14 184E                  __ptext23 111E                  __ptext15 17C4  
                __ptext24 1382                  __ptext16 192A                  __ptext17 193E  
                __ptext18 1892                  __ptext19 1952      __end_of_WriteCmdXLCD 1892  
                _contador 00CF             __size_of_main 0478    __end_of_LowPriorityISR 01F8  
                int$flags 004A                  _putsXLCD 18CC                  main@dez2 0106  
                main@dez3 010E                  main@cent 0100                  main@aux2 0108  
                main@aux3 0116                  main@uni2 010A                  main@uni3 0110  
   __CFG_CPUDIV$OSC1_PLL2 000000                _INTCONbits 000FF2           main@porcentagem 0114  
         _HighPriorityISR 0008                  intlevel1 0000                  intlevel2 0000  
        ___lldiv@dividend 007D           ?_LowPriorityISR 0001     __end_of_DelayFor18TCY 195C  
    __end_of_DelayPORXLCD 1952          ___lldiv@quotient 0085  
