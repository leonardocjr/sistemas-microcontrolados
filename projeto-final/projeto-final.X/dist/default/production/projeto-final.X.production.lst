

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 21 18:05:26 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.45
    38                           ; Generated 16/11/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataBANK0
    73  00125E                     __pidataBANK0:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _duty
    77  00125E  00E6               	dw	230
    78  0000                     _LATEbits	set	3981
    79  0000                     _TRISEbits	set	3990
    80  0000                     _TRISD	set	3989
    81  0000                     _PORTD	set	3971
    82  0000                     _CCP2CONbits	set	4026
    83  0000                     _T0CONbits	set	4053
    84  0000                     _INTCON2bits	set	4081
    85  0000                     _INTCON3bits	set	4080
    86  0000                     _RCONbits	set	4048
    87  0000                     _IPR1bits	set	3999
    88  0000                     _PIR1bits	set	3998
    89  0000                     _PIE1bits	set	3997
    90  0000                     _CCPR1L	set	4030
    91  0000                     _PR2	set	4043
    92  0000                     _T2CONbits	set	4042
    93  0000                     _CCP1CONbits	set	4029
    94  0000                     _TRISB	set	3987
    95  0000                     _TRISC	set	3988
    96  0000                     _TRISA	set	3986
    97  0000                     _TMR0L	set	4054
    98  0000                     _TMR0H	set	4055
    99  0000                     _ADRESL	set	4035
   100  0000                     _ADCON0bits	set	4034
   101  0000                     _INTCONbits	set	4082
   102  0000                     _ADRESH	set	4036
   103                           
   104                           	psect	smallconst
   105  000800                     __psmallconst:
   106                           	opt stack 0
   107  000800  00                 	db	0
   108  000801                     STR_2:
   109                           
   110                           ; BSR set to: 0
   111  000801  41                 	db	65	;'A'
   112  000802  74                 	db	116	;'t'
   113  000803  75                 	db	117	;'u'
   114  000804  61                 	db	97	;'a'
   115  000805  6C                 	db	108	;'l'
   116  000806  3A                 	db	58	;':'
   117  000807  20                 	db	32
   118  000808  00                 	db	0
   119  000809                     STR_3:
   120                           
   121                           ; BSR set to: 0
   122  000809  52                 	db	82	;'R'
   123  00080A  61                 	db	97	;'a'
   124  00080B  7A                 	db	122	;'z'
   125  00080C  61                 	db	97	;'a'
   126  00080D  6F                 	db	111	;'o'
   127  00080E  3A                 	db	58	;':'
   128  00080F  20                 	db	32
   129  000810  00                 	db	0
   130  000811                     STR_1:
   131                           
   132                           ; BSR set to: 0
   133  000811  52                 	db	82	;'R'
   134  000812  65                 	db	101	;'e'
   135  000813  66                 	db	102	;'f'
   136  000814  3A                 	db	58	;':'
   137  000815  20                 	db	32
   138  000816  00                 	db	0
   139                           
   140                           ; #config settings
   141  000817  00                 	db	0	; dummy byte at the end
   142  0000                     
   143                           	psect	cinit
   144  0011DC                     __pcinit:
   145                           	opt stack 0
   146  0011DC                     start_initialization:
   147                           	opt stack 0
   148  0011DC                     __initialization:
   149                           	opt stack 0
   150                           
   151                           ; Initialize objects allocated to BANK0 (2 bytes)
   152                           ; load TBLPTR registers with __pidataBANK0
   153  0011DC  0E5E               	movlw	low __pidataBANK0
   154  0011DE  6EF6               	movwf	tblptrl,c
   155  0011E0  0E12               	movlw	high __pidataBANK0
   156  0011E2  6EF7               	movwf	tblptrh,c
   157  0011E4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   158  0011E6  6EF8               	movwf	tblptru,c
   159  0011E8  0009               	tblrd		*+	;fetch initializer
   160  0011EA  CFF5 F070          	movff	tablat,__pdataBANK0
   161  0011EE  0009               	tblrd		*+	;fetch initializer
   162  0011F0  CFF5 F071          	movff	tablat,__pdataBANK0+1
   163                           
   164                           ; Clear objects allocated to BANK0 (2 bytes)
   165  0011F4  0100               	movlb	0
   166  0011F6  6B6F               	clrf	(__pbssBANK0+1)& (0+255),b
   167  0011F8  6B6E               	clrf	__pbssBANK0& (0+255),b
   168                           
   169                           ; Clear objects allocated to COMRAM (1 bytes)
   170  0011FA  6A40               	clrf	__pbssCOMRAM& (0+255),c
   171  0011FC                     end_of_initialization:
   172                           	opt stack 0
   173  0011FC                     __end_of__initialization:
   174                           	opt stack 0
   175  0011FC  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   176  0011FE  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   177  001200  0E00               	movlw	low (__Lsmallconst shr (0+16))
   178  001202  6EF8               	movwf	tblptru,c
   179  001204  0E08               	movlw	high __Lsmallconst
   180  001206  6EF7               	movwf	tblptrh,c
   181  001208  0100               	movlb	0
   182  00120A  EF0C  F004         	goto	_main	;jump to C main() function
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           
   188                           	psect	bssCOMRAM
   189  000040                     __pbssCOMRAM:
   190                           	opt stack 0
   191  000040                     _contador:
   192                           	opt stack 0
   193  000040                     	ds	1
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           
   199                           	psect	bssBANK0
   200  00006E                     __pbssBANK0:
   201                           	opt stack 0
   202  00006E                     _valorconv:
   203                           	opt stack 0
   204  00006E                     	ds	2
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           
   210                           	psect	dataBANK0
   211  000070                     __pdataBANK0:
   212                           	opt stack 0
   213  000070                     _duty:
   214                           	opt stack 0
   215  000070                     	ds	2
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           
   221                           	psect	cstackBANK0
   222  000060                     __pcstackBANK0:
   223                           	opt stack 0
   224  000060                     main@mil:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x0
   228  000060                     	ds	2
   229  000062                     main@cent:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x2
   233  000062                     	ds	2
   234  000064                     main@dez:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x4
   238  000064                     	ds	2
   239  000066                     main@uni:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x6
   243  000066                     	ds	2
   244  000068                     main@resultado:
   245                           	opt stack 0
   246                           
   247                           ; 4 bytes @ 0x8
   248  000068                     	ds	4
   249  00006C                     main@aux:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0xC
   253  00006C                     	ds	2
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           
   259                           	psect	cstackCOMRAM
   260  000001                     __pcstackCOMRAM:
   261                           	opt stack 0
   262  000001                     ??_HighPriorityISR:
   263  000001                     
   264                           ; 1 bytes @ 0x0
   265  000001                     	ds	20
   266  000015                     ??_DelayPORXLCD:
   267  000015                     ??_DelayXLCD:
   268  000015                     ?___awdiv:
   269                           	opt stack 0
   270  000015                     ?___awmod:
   271                           	opt stack 0
   272  000015                     ?___ftpack:
   273                           	opt stack 0
   274  000015                     ?___aldiv:
   275                           	opt stack 0
   276  000015                     ?___almod:
   277                           	opt stack 0
   278  000015                     SetDDRamAddr@DDaddr:
   279                           	opt stack 0
   280  000015                     WriteCmdXLCD@cmd:
   281                           	opt stack 0
   282  000015                     WriteDataXLCD@data:
   283                           	opt stack 0
   284  000015                     ___awdiv@dividend:
   285                           	opt stack 0
   286  000015                     ___awmod@dividend:
   287                           	opt stack 0
   288  000015                     ___ftpack@arg:
   289                           	opt stack 0
   290  000015                     ___aldiv@dividend:
   291                           	opt stack 0
   292  000015                     ___almod@dividend:
   293                           	opt stack 0
   294                           
   295                           ; 4 bytes @ 0x14
   296  000015                     	ds	1
   297  000016                     OpenXLCD@lcdtype:
   298                           	opt stack 0
   299  000016                     putsXLCD@buffer:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x15
   303  000016                     	ds	1
   304  000017                     ___awdiv@divisor:
   305                           	opt stack 0
   306  000017                     ___awmod@divisor:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x16
   310  000017                     	ds	1
   311  000018                     ___ftpack@exp:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x17
   315  000018                     	ds	1
   316  000019                     ___awdiv@counter:
   317                           	opt stack 0
   318  000019                     ___awmod@counter:
   319                           	opt stack 0
   320  000019                     ___ftpack@sign:
   321                           	opt stack 0
   322  000019                     ___aldiv@divisor:
   323                           	opt stack 0
   324  000019                     ___almod@divisor:
   325                           	opt stack 0
   326                           
   327                           ; 4 bytes @ 0x18
   328  000019                     	ds	1
   329  00001A                     ??___ftpack:
   330  00001A                     ___awdiv@sign:
   331                           	opt stack 0
   332  00001A                     ___awmod@sign:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x19
   336  00001A                     	ds	1
   337  00001B                     ___awdiv@quotient:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x1A
   341  00001B                     	ds	2
   342  00001D                     ?___lwtoft:
   343                           	opt stack 0
   344  00001D                     ___aldiv@counter:
   345                           	opt stack 0
   346  00001D                     ___almod@counter:
   347                           	opt stack 0
   348  00001D                     ___lwtoft@c:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x1C
   352  00001D                     	ds	1
   353  00001E                     ___aldiv@sign:
   354                           	opt stack 0
   355  00001E                     ___almod@sign:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x1D
   359  00001E                     	ds	1
   360  00001F                     ___aldiv@quotient:
   361                           	opt stack 0
   362                           
   363                           ; 4 bytes @ 0x1E
   364  00001F                     	ds	1
   365  000020                     ?___ftmul:
   366                           	opt stack 0
   367  000020                     ___ftmul@f1:
   368                           	opt stack 0
   369                           
   370                           ; 3 bytes @ 0x1F
   371  000020                     	ds	3
   372  000023                     ___ftmul@f2:
   373                           	opt stack 0
   374                           
   375                           ; 3 bytes @ 0x22
   376  000023                     	ds	3
   377  000026                     ??___ftmul:
   378                           
   379                           ; 1 bytes @ 0x25
   380  000026                     	ds	3
   381  000029                     ___ftmul@exp:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x28
   385  000029                     	ds	1
   386  00002A                     ___ftmul@f3_as_product:
   387                           	opt stack 0
   388                           
   389                           ; 3 bytes @ 0x29
   390  00002A                     	ds	3
   391  00002D                     ___ftmul@cntr:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x2C
   395  00002D                     	ds	1
   396  00002E                     ___ftmul@sign:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x2D
   400  00002E                     	ds	1
   401  00002F                     ?___fttol:
   402                           	opt stack 0
   403  00002F                     ___fttol@f1:
   404                           	opt stack 0
   405                           
   406                           ; 3 bytes @ 0x2E
   407  00002F                     	ds	4
   408  000033                     ??___fttol:
   409                           
   410                           ; 1 bytes @ 0x32
   411  000033                     	ds	5
   412  000038                     ___fttol@sign1:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x37
   416  000038                     	ds	1
   417  000039                     ___fttol@lval:
   418                           	opt stack 0
   419                           
   420                           ; 4 bytes @ 0x38
   421  000039                     	ds	4
   422  00003D                     ___fttol@exp1:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x3C
   426  00003D                     	ds	1
   427  00003E                     ??_main:
   428                           
   429                           ; 1 bytes @ 0x3D
   430  00003E                     	ds	2
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           
   436 ;;
   437 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   438 ;;
   439 ;; *************** function _main *****************
   440 ;; Defined at:
   441 ;;		line 29 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;  resultado       4    8[BANK0 ] long 
   446 ;;  aux             2   12[BANK0 ] int 
   447 ;;  uni             2    6[BANK0 ] int 
   448 ;;  dez             2    4[BANK0 ] int 
   449 ;;  cent            2    2[BANK0 ] int 
   450 ;;  mil             2    0[BANK0 ] int 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   460 ;;      Params:         0       0       0       0       0       0       0       0       0
   461 ;;      Locals:         0      14       0       0       0       0       0       0       0
   462 ;;      Temps:          2       0       0       0       0       0       0       0       0
   463 ;;      Totals:         2      14       0       0       0       0       0       0       0
   464 ;;Total ram usage:       16 bytes
   465 ;; Hardware stack levels required when called:    4
   466 ;; This function calls:
   467 ;;		_OpenXLCD
   468 ;;		_WriteCmdXLCD
   469 ;;		___aldiv
   470 ;;		___almod
   471 ;;		___awdiv
   472 ;;		___awmod
   473 ;;		___ftmul
   474 ;;		___fttol
   475 ;;		___lwtoft
   476 ;;		_putsXLCD
   477 ;; This function is called by:
   478 ;;		Startup code after reset
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text0
   483  000818                     __ptext0:
   484                           	opt stack 0
   485  000818                     _main:
   486                           	opt stack 27
   487                           
   488                           ;main.c: 30: int mil, cent, dez, uni;
   489                           ;main.c: 31: int aux = 0;
   490                           
   491                           ;incstack = 0
   492  000818  0E00               	movlw	0
   493  00081A  0100               	movlb	0	; () banked
   494  00081C  6F6D               	movwf	(main@aux+1)& (0+255),b
   495  00081E  0E00               	movlw	0
   496  000820  6F6C               	movwf	main@aux& (0+255),b
   497                           
   498                           ; BSR set to: 0
   499                           ;main.c: 33: TRISA = 0xFF;
   500  000822  6892               	setf	3986,c	;volatile
   501                           
   502                           ;main.c: 34: TRISC = 0x00;
   503  000824  0E00               	movlw	0
   504  000826  6E94               	movwf	3988,c	;volatile
   505                           
   506                           ; BSR set to: 0
   507                           ;main.c: 35: TRISB = 0XFF;
   508  000828  6893               	setf	3987,c	;volatile
   509                           
   510                           ; BSR set to: 0
   511                           ;main.c: 38: CCP1CONbits.CCP1M3 = 1;
   512  00082A  86BD               	bsf	4029,3,c	;volatile
   513                           
   514                           ; BSR set to: 0
   515                           ;main.c: 39: CCP1CONbits.CCP1M2 = 1;
   516  00082C  84BD               	bsf	4029,2,c	;volatile
   517                           
   518                           ; BSR set to: 0
   519                           ;main.c: 40: CCP1CONbits.CCP1M1 = 0;
   520  00082E  92BD               	bcf	4029,1,c	;volatile
   521                           
   522                           ; BSR set to: 0
   523                           ;main.c: 41: CCP1CONbits.CCP1M0 = 0;
   524  000830  90BD               	bcf	4029,0,c	;volatile
   525                           
   526                           ; BSR set to: 0
   527                           ;main.c: 44: T2CONbits.T2OUTPS3 = 0;
   528  000832  9CCA               	bcf	4042,6,c	;volatile
   529                           
   530                           ; BSR set to: 0
   531                           ;main.c: 45: T2CONbits.T2OUTPS2 = 0;
   532  000834  9ACA               	bcf	4042,5,c	;volatile
   533                           
   534                           ; BSR set to: 0
   535                           ;main.c: 46: T2CONbits.T2OUTPS1 = 0;
   536  000836  98CA               	bcf	4042,4,c	;volatile
   537                           
   538                           ; BSR set to: 0
   539                           ;main.c: 47: T2CONbits.T2OUTPS0 = 0;
   540  000838  96CA               	bcf	4042,3,c	;volatile
   541                           
   542                           ; BSR set to: 0
   543                           ;main.c: 48: T2CONbits.TMR2ON = 1;
   544  00083A  84CA               	bsf	4042,2,c	;volatile
   545                           
   546                           ; BSR set to: 0
   547                           ;main.c: 49: T2CONbits.T2CKPS1 = 0;
   548  00083C  92CA               	bcf	4042,1,c	;volatile
   549                           
   550                           ; BSR set to: 0
   551                           ;main.c: 50: T2CONbits.T2CKPS0 = 1;
   552  00083E  80CA               	bsf	4042,0,c	;volatile
   553                           
   554                           ;main.c: 54: PR2 = 191;
   555  000840  0EBF               	movlw	191
   556  000842  6ECB               	movwf	4043,c	;volatile
   557                           
   558                           ; BSR set to: 0
   559                           ;main.c: 57: CCPR1L = (char)(duty >> 2);
   560  000844  C070  F03E         	movff	_duty,??_main
   561  000848  C071  F03F         	movff	_duty+1,??_main+1
   562  00084C  343F               	rlcf	??_main+1,w,c
   563  00084E  323F               	rrcf	??_main+1,f,c
   564  000850  323E               	rrcf	??_main,f,c
   565  000852  343F               	rlcf	??_main+1,w,c
   566  000854  323F               	rrcf	??_main+1,f,c
   567  000856  323E               	rrcf	??_main,f,c
   568  000858  503E               	movf	??_main,w,c
   569  00085A  6EBE               	movwf	4030,c	;volatile
   570                           
   571                           ; BSR set to: 0
   572                           ;main.c: 58: CCP1CONbits.DC1B0 = duty%2;
   573  00085C  C070  F03E         	movff	_duty,??_main
   574  000860  0E01               	movlw	1
   575  000862  163E               	andwf	??_main,f,c
   576  000864  3A3E               	swapf	??_main,f,c
   577  000866  50BD               	movf	4029,w,c	;volatile
   578  000868  183E               	xorwf	??_main,w,c
   579  00086A  0BEF               	andlw	-17
   580  00086C  183E               	xorwf	??_main,w,c
   581  00086E  6EBD               	movwf	4029,c	;volatile
   582                           
   583                           ; BSR set to: 0
   584                           ;main.c: 59: CCP1CONbits.DC1B1 = (duty >> 1)%2;
   585  000870  3571               	rlcf	(_duty+1)& (0+255),w,b
   586  000872  3171               	rrcf	(_duty+1)& (0+255),w,b
   587  000874  6E3F               	movwf	(??_main+1)& (0+255),c
   588  000876  3170               	rrcf	_duty& (0+255),w,b
   589  000878  6E3E               	movwf	??_main& (0+255),c
   590  00087A  0E01               	movlw	1
   591  00087C  163E               	andwf	??_main,f,c
   592  00087E  3A3E               	swapf	??_main,f,c
   593  000880  463E               	rlncf	??_main,f,c
   594  000882  50BD               	movf	4029,w,c	;volatile
   595  000884  183E               	xorwf	??_main,w,c
   596  000886  0BDF               	andlw	-33
   597  000888  183E               	xorwf	??_main,w,c
   598  00088A  6EBD               	movwf	4029,c	;volatile
   599                           
   600                           ; BSR set to: 0
   601                           ;main.c: 62: PIE1bits.ADIE = 1;
   602  00088C  8C9D               	bsf	3997,6,c	;volatile
   603                           
   604                           ; BSR set to: 0
   605                           ;main.c: 63: PIR1bits.ADIF = 0;
   606  00088E  9C9E               	bcf	3998,6,c	;volatile
   607                           
   608                           ; BSR set to: 0
   609                           ;main.c: 64: IPR1bits.ADIP = 0;
   610  000890  9C9F               	bcf	3999,6,c	;volatile
   611                           
   612                           ; BSR set to: 0
   613                           ;main.c: 67: ADCON0bits.CHS3 = 0;
   614  000892  9AC2               	bcf	4034,5,c	;volatile
   615                           
   616                           ; BSR set to: 0
   617                           ;main.c: 68: ADCON0bits.CHS2 = 0;
   618  000894  98C2               	bcf	4034,4,c	;volatile
   619                           
   620                           ; BSR set to: 0
   621                           ;main.c: 69: ADCON0bits.CHS1 = 0;
   622  000896  96C2               	bcf	4034,3,c	;volatile
   623                           
   624                           ; BSR set to: 0
   625                           ;main.c: 70: ADCON0bits.CHS0 = 0;
   626  000898  94C2               	bcf	4034,2,c	;volatile
   627                           
   628                           ; BSR set to: 0
   629                           ;main.c: 73: RCONbits.IPEN = 1;
   630  00089A  8ED0               	bsf	4048,7,c	;volatile
   631                           
   632                           ; BSR set to: 0
   633                           ;main.c: 74: INTCONbits.GIEH = 1;
   634  00089C  8EF2               	bsf	intcon,7,c	;volatile
   635                           
   636                           ; BSR set to: 0
   637                           ;main.c: 75: INTCONbits.GIEL = 1;
   638  00089E  8CF2               	bsf	intcon,6,c	;volatile
   639                           
   640                           ; BSR set to: 0
   641                           ;main.c: 78: INTCON3bits.INT1IE = 1;
   642  0008A0  86F0               	bsf	intcon3,3,c	;volatile
   643                           
   644                           ; BSR set to: 0
   645                           ;main.c: 79: INTCON3bits.INT2IE = 1;
   646  0008A2  88F0               	bsf	intcon3,4,c	;volatile
   647                           
   648                           ; BSR set to: 0
   649                           ;main.c: 80: INTCON2bits.INTEDG1 = 0;
   650  0008A4  9AF1               	bcf	intcon2,5,c	;volatile
   651                           
   652                           ; BSR set to: 0
   653                           ;main.c: 81: INTCON2bits.INTEDG2 = 0;
   654  0008A6  98F1               	bcf	intcon2,4,c	;volatile
   655                           
   656                           ; BSR set to: 0
   657                           ;main.c: 82: INTCON3bits.INT1IF = 0;
   658  0008A8  90F0               	bcf	intcon3,0,c	;volatile
   659                           
   660                           ; BSR set to: 0
   661                           ;main.c: 83: INTCON3bits.INT2IF = 0;
   662  0008AA  92F0               	bcf	intcon3,1,c	;volatile
   663                           
   664                           ; BSR set to: 0
   665                           ;main.c: 84: INTCON3bits.INT1IP = 0;
   666  0008AC  9CF0               	bcf	intcon3,6,c	;volatile
   667                           
   668                           ; BSR set to: 0
   669                           ;main.c: 85: INTCON3bits.INT2IP = 0;
   670  0008AE  9EF0               	bcf	intcon3,7,c	;volatile
   671                           
   672                           ; BSR set to: 0
   673                           ;main.c: 88: T0CONbits.TMR0ON = 1;
   674  0008B0  8ED5               	bsf	4053,7,c	;volatile
   675                           
   676                           ; BSR set to: 0
   677                           ;main.c: 89: T0CONbits.T08BIT = 0;
   678  0008B2  9CD5               	bcf	4053,6,c	;volatile
   679                           
   680                           ; BSR set to: 0
   681                           ;main.c: 90: T0CONbits.T0CS = 0;
   682  0008B4  9AD5               	bcf	4053,5,c	;volatile
   683                           
   684                           ; BSR set to: 0
   685                           ;main.c: 91: T0CONbits.PSA = 0;
   686  0008B6  96D5               	bcf	4053,3,c	;volatile
   687                           
   688                           ; BSR set to: 0
   689                           ;main.c: 92: T0CONbits.T0PS2 = 0;
   690  0008B8  94D5               	bcf	4053,2,c	;volatile
   691                           
   692                           ; BSR set to: 0
   693                           ;main.c: 93: T0CONbits.T0PS1 = 0;
   694  0008BA  92D5               	bcf	4053,1,c	;volatile
   695                           
   696                           ; BSR set to: 0
   697                           ;main.c: 94: T0CONbits.T0PS0 = 0;
   698  0008BC  90D5               	bcf	4053,0,c	;volatile
   699                           
   700                           ; BSR set to: 0
   701                           ;main.c: 95: INTCONbits.TMR0IF = 0;
   702  0008BE  94F2               	bcf	intcon,2,c	;volatile
   703                           
   704                           ; BSR set to: 0
   705                           ;main.c: 96: INTCONbits.TMR0IE = 1;
   706  0008C0  8AF2               	bsf	intcon,5,c	;volatile
   707                           
   708                           ; BSR set to: 0
   709                           ;main.c: 97: INTCON2bits.TMR0IP = 1;
   710  0008C2  84F1               	bsf	intcon2,2,c	;volatile
   711                           
   712                           ; BSR set to: 0
   713                           ;main.c: 102: TMR0H = 0xF9;
   714  0008C4  0EF9               	movlw	249
   715  0008C6  6ED7               	movwf	4055,c	;volatile
   716                           
   717                           ; BSR set to: 0
   718                           ;main.c: 103: TMR0L = 0x7D;
   719  0008C8  0E7D               	movlw	125
   720  0008CA  6ED6               	movwf	4054,c	;volatile
   721                           
   722                           ; BSR set to: 0
   723                           ;main.c: 106: CCP2CONbits.CCP2M3 = 1;
   724  0008CC  86BA               	bsf	4026,3,c	;volatile
   725                           
   726                           ; BSR set to: 0
   727                           ;main.c: 107: CCP2CONbits.CCP2M2 = 1;
   728  0008CE  84BA               	bsf	4026,2,c	;volatile
   729                           
   730                           ; BSR set to: 0
   731                           ;main.c: 110: OpenXLCD(0b00101100 & 0b00111000);
   732  0008D0  0E28               	movlw	40
   733  0008D2  EC8B  F007         	call	_OpenXLCD
   734                           
   735                           ;main.c: 111: WriteCmdXLCD(0x01);
   736  0008D6  0E01               	movlw	1
   737  0008D8  EC98  F008         	call	_WriteCmdXLCD
   738                           
   739                           ;main.c: 112: _delay((unsigned long)((2)*(20000000/4000.0)));
   740  0008DC  0E0D               	movlw	13
   741  0008DE  6E3E               	movwf	??_main& (0+255),c
   742  0008E0  0EFC               	movlw	252
   743  0008E2                     u1197:
   744  0008E2  2EE8               	decfsz	wreg,f,c
   745  0008E4  D7FE               	bra	u1197
   746  0008E6  2E3E               	decfsz	??_main& (0+255),f,c
   747  0008E8  D7FC               	bra	u1197
   748                           
   749                           ;main.c: 114: WriteCmdXLCD(0x80);
   750  0008EA  0E80               	movlw	128
   751  0008EC  EC98  F008         	call	_WriteCmdXLCD
   752                           
   753                           ;main.c: 115: putsXLCD("Ref: ");
   754  0008F0  0E11               	movlw	low STR_1
   755  0008F2  6E16               	movwf	putsXLCD@buffer,c
   756  0008F4  0E08               	movlw	high STR_1
   757  0008F6  6E17               	movwf	putsXLCD@buffer+1,c
   758  0008F8  ECD4  F008         	call	_putsXLCD	;wreg free
   759                           
   760                           ;main.c: 116: WriteCmdXLCD(0x89);
   761  0008FC  0E89               	movlw	137
   762  0008FE  EC98  F008         	call	_WriteCmdXLCD
   763                           
   764                           ;main.c: 117: putsXLCD("Atual: ");
   765  000902  0E01               	movlw	low STR_2
   766  000904  6E16               	movwf	putsXLCD@buffer,c
   767  000906  0E08               	movlw	high STR_2
   768  000908  6E17               	movwf	putsXLCD@buffer+1,c
   769  00090A  ECD4  F008         	call	_putsXLCD	;wreg free
   770                           
   771                           ;main.c: 118: WriteCmdXLCD(0xC3);
   772  00090E  0EC3               	movlw	195
   773  000910  EC98  F008         	call	_WriteCmdXLCD
   774                           
   775                           ;main.c: 119: putsXLCD("Razao: ");
   776  000914  0E09               	movlw	low STR_3
   777  000916  6E16               	movwf	putsXLCD@buffer,c
   778  000918  0E08               	movlw	high STR_3
   779  00091A  6E17               	movwf	putsXLCD@buffer+1,c
   780  00091C  ECD4  F008         	call	_putsXLCD	;wreg free
   781  000920                     
   782                           ;main.c: 122: long int resultado = 0;
   783  000920  0E00               	movlw	0
   784  000922  0100               	movlb	0	; () banked
   785  000924  6F68               	movwf	main@resultado& (0+255),b
   786  000926  0E00               	movlw	0
   787  000928  6F69               	movwf	(main@resultado+1)& (0+255),b
   788  00092A  0E00               	movlw	0
   789  00092C  6F6A               	movwf	(main@resultado+2)& (0+255),b
   790  00092E  0E00               	movlw	0
   791  000930  6F6B               	movwf	(main@resultado+3)& (0+255),b
   792                           
   793                           ; BSR set to: 0
   794                           ;main.c: 123: resultado = (valorconv * 4.89);
   795  000932  0E7B               	movlw	123
   796  000934  6E23               	movwf	___ftmul@f2,c
   797  000936  0E9C               	movlw	156
   798  000938  6E24               	movwf	___ftmul@f2+1,c
   799  00093A  0E40               	movlw	64
   800  00093C  6E25               	movwf	___ftmul@f2+2,c
   801  00093E  C06E  F01D         	movff	_valorconv,___lwtoft@c
   802  000942  C06F  F01E         	movff	_valorconv+1,___lwtoft@c+1
   803  000946  EC07  F009         	call	___lwtoft	;wreg free
   804  00094A  C01D  F020         	movff	?___lwtoft,___ftmul@f1
   805  00094E  C01E  F021         	movff	?___lwtoft+1,___ftmul@f1+1
   806  000952  C01F  F022         	movff	?___lwtoft+2,___ftmul@f1+2
   807  000956  EC9C  F005         	call	___ftmul	;wreg free
   808  00095A  C020  F02F         	movff	?___ftmul,___fttol@f1
   809  00095E  C021  F030         	movff	?___ftmul+1,___fttol@f1+1
   810  000962  C022  F031         	movff	?___ftmul+2,___fttol@f1+2
   811  000966  EC22  F005         	call	___fttol	;wreg free
   812  00096A  C02F  F068         	movff	?___fttol,main@resultado
   813  00096E  C030  F069         	movff	?___fttol+1,main@resultado+1
   814  000972  C031  F06A         	movff	?___fttol+2,main@resultado+2
   815  000976  C032  F06B         	movff	?___fttol+3,main@resultado+3
   816                           
   817                           ;main.c: 124: mil = resultado / 1000;
   818  00097A  C068  F015         	movff	main@resultado,___aldiv@dividend
   819  00097E  C069  F016         	movff	main@resultado+1,___aldiv@dividend+1
   820  000982  C06A  F017         	movff	main@resultado+2,___aldiv@dividend+2
   821  000986  C06B  F018         	movff	main@resultado+3,___aldiv@dividend+3
   822  00098A  0EE8               	movlw	232
   823  00098C  6E19               	movwf	___aldiv@divisor,c
   824  00098E  0E03               	movlw	3
   825  000990  6E1A               	movwf	___aldiv@divisor+1,c
   826  000992  0E00               	movlw	0
   827  000994  6E1B               	movwf	___aldiv@divisor+2,c
   828  000996  0E00               	movlw	0
   829  000998  6E1C               	movwf	___aldiv@divisor+3,c
   830  00099A  EC16  F006         	call	___aldiv	;wreg free
   831  00099E  C015  F060         	movff	?___aldiv,main@mil
   832  0009A2  C016  F061         	movff	?___aldiv+1,main@mil+1
   833                           
   834                           ;main.c: 125: aux = resultado % 1000;
   835  0009A6  C068  F015         	movff	main@resultado,___almod@dividend
   836  0009AA  C069  F016         	movff	main@resultado+1,___almod@dividend+1
   837  0009AE  C06A  F017         	movff	main@resultado+2,___almod@dividend+2
   838  0009B2  C06B  F018         	movff	main@resultado+3,___almod@dividend+3
   839  0009B6  0EE8               	movlw	232
   840  0009B8  6E19               	movwf	___almod@divisor,c
   841  0009BA  0E03               	movlw	3
   842  0009BC  6E1A               	movwf	___almod@divisor+1,c
   843  0009BE  0E00               	movlw	0
   844  0009C0  6E1B               	movwf	___almod@divisor+2,c
   845  0009C2  0E00               	movlw	0
   846  0009C4  6E1C               	movwf	___almod@divisor+3,c
   847  0009C6  EC35  F007         	call	___almod	;wreg free
   848  0009CA  C015  F06C         	movff	?___almod,main@aux
   849  0009CE  C016  F06D         	movff	?___almod+1,main@aux+1
   850                           
   851                           ;main.c: 126: cent = aux / 100;
   852  0009D2  C06C  F015         	movff	main@aux,___awdiv@dividend
   853  0009D6  C06D  F016         	movff	main@aux+1,___awdiv@dividend+1
   854  0009DA  0E00               	movlw	0
   855  0009DC  6E18               	movwf	___awdiv@divisor+1,c
   856  0009DE  0E64               	movlw	100
   857  0009E0  6E17               	movwf	___awdiv@divisor,c
   858  0009E2  ECDF  F007         	call	___awdiv	;wreg free
   859  0009E6  C015  F062         	movff	?___awdiv,main@cent
   860  0009EA  C016  F063         	movff	?___awdiv+1,main@cent+1
   861                           
   862                           ;main.c: 127: aux = aux % 100;
   863  0009EE  C06C  F015         	movff	main@aux,___awmod@dividend
   864  0009F2  C06D  F016         	movff	main@aux+1,___awmod@dividend+1
   865  0009F6  0E00               	movlw	0
   866  0009F8  6E18               	movwf	___awmod@divisor+1,c
   867  0009FA  0E64               	movlw	100
   868  0009FC  6E17               	movwf	___awmod@divisor,c
   869  0009FE  EC21  F008         	call	___awmod	;wreg free
   870  000A02  C015  F06C         	movff	?___awmod,main@aux
   871  000A06  C016  F06D         	movff	?___awmod+1,main@aux+1
   872                           
   873                           ;main.c: 128: dez = aux / 10;
   874  000A0A  C06C  F015         	movff	main@aux,___awdiv@dividend
   875  000A0E  C06D  F016         	movff	main@aux+1,___awdiv@dividend+1
   876  000A12  0E00               	movlw	0
   877  000A14  6E18               	movwf	___awdiv@divisor+1,c
   878  000A16  0E0A               	movlw	10
   879  000A18  6E17               	movwf	___awdiv@divisor,c
   880  000A1A  ECDF  F007         	call	___awdiv	;wreg free
   881  000A1E  C015  F064         	movff	?___awdiv,main@dez
   882  000A22  C016  F065         	movff	?___awdiv+1,main@dez+1
   883                           
   884                           ;main.c: 129: uni = aux % 10;
   885  000A26  C06C  F015         	movff	main@aux,___awmod@dividend
   886  000A2A  C06D  F016         	movff	main@aux+1,___awmod@dividend+1
   887  000A2E  0E00               	movlw	0
   888  000A30  6E18               	movwf	___awmod@divisor+1,c
   889  000A32  0E0A               	movlw	10
   890  000A34  6E17               	movwf	___awmod@divisor,c
   891  000A36  EC21  F008         	call	___awmod	;wreg free
   892  000A3A  C015  F066         	movff	?___awmod,main@uni
   893  000A3E  C016  F067         	movff	?___awmod+1,main@uni+1
   894  000A42  D76E               	goto	l67
   895  000A44                     __end_of_main:
   896                           	opt stack 0
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           intcon	equ	0xFF2
   902                           intcon2	equ	0xFF1
   903                           intcon3	equ	0xFF0
   904                           wreg	equ	0xFE8
   905                           
   906 ;; *************** function _putsXLCD *****************
   907 ;; Defined at:
   908 ;;		line 510 in file "nxlcd.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  buffer          2   21[COMRAM] PTR unsigned char 
   911 ;;		 -> STR_3(8), STR_2(8), STR_1(6), 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         2       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         2       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        2 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    3
   930 ;; This function calls:
   931 ;;		_BusyXLCD
   932 ;;		_WriteDataXLCD
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text1
   939  0011A8                     __ptext1:
   940                           	opt stack 0
   941  0011A8                     _putsXLCD:
   942                           	opt stack 27
   943                           
   944                           ;nxlcd.c: 512: while(*buffer)
   945                           
   946                           ;incstack = 0
   947  0011A8  D00F               	goto	l145
   948  0011AA                     
   949                           ;nxlcd.c: 513: {
   950                           ;nxlcd.c: 514: while(BusyXLCD());
   951  0011AA  ECB7  F008         	call	_BusyXLCD	;wreg free
   952  0011AE  0900               	iorlw	0
   953  0011B0  A4D8               	btfss	status,2,c
   954  0011B2  D7FB               	goto	l146
   955                           
   956                           ;nxlcd.c: 515: WriteDataXLCD(*buffer);
   957  0011B4  C016  FFF6         	movff	putsXLCD@buffer,tblptrl
   958  0011B8  C017  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   959  0011BC                     	if	0	;tblptru may be non-zero
   960  0011BC                     	endif
   961  0011BC                     	if	0	;tblptru may be non-zero
   962  0011BC                     	endif
   963  0011BC  0008               	tblrd		*
   964  0011BE  50F5               	movf	tablat,w,c
   965  0011C0  EC79  F008         	call	_WriteDataXLCD
   966                           
   967                           ;nxlcd.c: 516: buffer++;
   968  0011C4  4A16               	infsnz	putsXLCD@buffer,f,c
   969  0011C6  2A17               	incf	putsXLCD@buffer+1,f,c
   970  0011C8                     l145:
   971  0011C8  C016  FFF6         	movff	putsXLCD@buffer,tblptrl
   972  0011CC  C017  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   973  0011D0                     	if	0	;tblptru may be non-zero
   974  0011D0                     	endif
   975  0011D0                     	if	0	;tblptru may be non-zero
   976  0011D0                     	endif
   977  0011D0  0008               	tblrd		*
   978  0011D2  50F5               	movf	tablat,w,c
   979  0011D4  0900               	iorlw	0
   980  0011D6  B4D8               	btfsc	status,2,c
   981  0011D8  0012               	return	
   982  0011DA  D7E7               	goto	l146
   983  0011DC                     __end_of_putsXLCD:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           tblptrh	equ	0xFF7
   987                           tblptrl	equ	0xFF6
   988                           tablat	equ	0xFF5
   989                           intcon	equ	0xFF2
   990                           intcon2	equ	0xFF1
   991                           intcon3	equ	0xFF0
   992                           wreg	equ	0xFE8
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _WriteDataXLCD *****************
   996 ;; Defined at:
   997 ;;		line 449 in file "nxlcd.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  data            1    wreg     unsigned char 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  data            1   20[COMRAM] unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1011 ;;      Params:         0       0       0       0       0       0       0       0       0
  1012 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1014 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1015 ;;Total ram usage:        1 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    2
  1018 ;; This function calls:
  1019 ;;		_DelayFor18TCY
  1020 ;; This function is called by:
  1021 ;;		_putsXLCD
  1022 ;;		_putrsXLCD
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text2
  1027  0010F2                     __ptext2:
  1028                           	opt stack 0
  1029  0010F2                     _WriteDataXLCD:
  1030                           	opt stack 27
  1031                           
  1032                           ;incstack = 0
  1033                           ;WriteDataXLCD@data stored from wreg
  1034  0010F2  6E15               	movwf	WriteDataXLCD@data,c
  1035                           
  1036                           ;nxlcd.c: 464: TRISD &= 0x0f;
  1037  0010F4  0E0F               	movlw	15
  1038  0010F6  1695               	andwf	3989,f,c	;volatile
  1039                           
  1040                           ;nxlcd.c: 465: PORTD &= 0x0f;
  1041  0010F8  0E0F               	movlw	15
  1042  0010FA  1683               	andwf	3971,f,c	;volatile
  1043                           
  1044                           ;nxlcd.c: 466: PORTD |= data&0xf0;
  1045  0010FC  5015               	movf	WriteDataXLCD@data,w,c
  1046  0010FE  0BF0               	andlw	240
  1047  001100  1283               	iorwf	3971,f,c	;volatile
  1048                           
  1049                           ;nxlcd.c: 472: LATEbits.LATE0 = 1;
  1050  001102  808D               	bsf	3981,0,c	;volatile
  1051                           
  1052                           ;nxlcd.c: 473: LATEbits.LATE2 = 0;
  1053  001104  948D               	bcf	3981,2,c	;volatile
  1054                           
  1055                           ;nxlcd.c: 474: DelayFor18TCY();
  1056  001106  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  1057                           
  1058                           ;nxlcd.c: 475: LATEbits.LATE1 = 1;
  1059  00110A  828D               	bsf	3981,1,c	;volatile
  1060                           
  1061                           ;nxlcd.c: 476: DelayFor18TCY();
  1062  00110C  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  1063                           
  1064                           ;nxlcd.c: 477: LATEbits.LATE1 = 0;
  1065  001110  928D               	bcf	3981,1,c	;volatile
  1066                           
  1067                           ;nxlcd.c: 479: PORTD &= 0x0f;
  1068  001112  0E0F               	movlw	15
  1069  001114  1683               	andwf	3971,f,c	;volatile
  1070                           
  1071                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
  1072  001116  3815               	swapf	WriteDataXLCD@data,w,c
  1073  001118  0BF0               	andlw	240
  1074  00111A  0BF0               	andlw	240
  1075  00111C  1283               	iorwf	3971,f,c	;volatile
  1076                           
  1077                           ;nxlcd.c: 485: DelayFor18TCY();
  1078  00111E  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  1079                           
  1080                           ;nxlcd.c: 486: LATEbits.LATE1 = 1;
  1081  001122  828D               	bsf	3981,1,c	;volatile
  1082                           
  1083                           ;nxlcd.c: 487: DelayFor18TCY();
  1084  001124  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  1085                           
  1086                           ;nxlcd.c: 488: LATEbits.LATE1 = 0;
  1087  001128  928D               	bcf	3981,1,c	;volatile
  1088                           
  1089                           ;nxlcd.c: 490: TRISD |= 0xf0;
  1090  00112A  0EF0               	movlw	240
  1091  00112C  1295               	iorwf	3989,f,c	;volatile
  1092  00112E  0012               	return	
  1093  001130                     __end_of_WriteDataXLCD:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           intcon	equ	0xFF2
  1100                           intcon2	equ	0xFF1
  1101                           intcon3	equ	0xFF0
  1102                           wreg	equ	0xFE8
  1103                           status	equ	0xFD8
  1104                           
  1105 ;; *************** function ___lwtoft *****************
  1106 ;; Defined at:
  1107 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  c               2   28[COMRAM] unsigned int 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  3   28[COMRAM] float 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1121 ;;      Params:         3       0       0       0       0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1124 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1125 ;;Total ram usage:        3 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    2
  1128 ;; This function calls:
  1129 ;;		___ftpack
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text3
  1136  00120E                     __ptext3:
  1137                           	opt stack 0
  1138  00120E                     ___lwtoft:
  1139                           	opt stack 28
  1140                           
  1141                           ;incstack = 0
  1142  00120E  C01D  F015         	movff	___lwtoft@c,___ftpack@arg
  1143  001212  C01E  F016         	movff	___lwtoft@c+1,___ftpack@arg+1
  1144  001216  6A17               	clrf	___ftpack@arg+2,c
  1145  001218  0E8E               	movlw	142
  1146  00121A  6E18               	movwf	___ftpack@exp,c
  1147  00121C  0E00               	movlw	0
  1148  00121E  6E19               	movwf	___ftpack@sign,c
  1149  001220  ECDE  F006         	call	___ftpack	;wreg free
  1150  001224  C015  F01D         	movff	?___ftpack,?___lwtoft
  1151  001228  C016  F01E         	movff	?___ftpack+1,?___lwtoft+1
  1152  00122C  C017  F01F         	movff	?___ftpack+2,?___lwtoft+2
  1153  001230  0012               	return	
  1154  001232                     __end_of___lwtoft:
  1155                           	opt stack 0
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           intcon	equ	0xFF2
  1161                           intcon2	equ	0xFF1
  1162                           intcon3	equ	0xFF0
  1163                           wreg	equ	0xFE8
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function ___fttol *****************
  1167 ;; Defined at:
  1168 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  f1              3   46[COMRAM] float 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  lval            4   56[COMRAM] unsigned long 
  1173 ;;  exp1            1   60[COMRAM] unsigned char 
  1174 ;;  sign1           1   55[COMRAM] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  4   46[COMRAM] long 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         4       0       0       0       0       0       0       0       0
  1185 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1187 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:       15 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text4
  1199  000A44                     __ptext4:
  1200                           	opt stack 0
  1201  000A44                     ___fttol:
  1202                           	opt stack 29
  1203                           
  1204                           ;incstack = 0
  1205  000A44  C031  F033         	movff	___fttol@f1+2,??___fttol
  1206  000A48  6A34               	clrf	(??___fttol+1)& (0+255),c
  1207  000A4A  6A35               	clrf	(??___fttol+2)& (0+255),c
  1208  000A4C  3430               	rlcf	___fttol@f1+1,w,c
  1209  000A4E  3633               	rlcf	??___fttol& (0+255),f,c
  1210  000A50  E301               	bnc	u1081
  1211  000A52  8034               	bsf	(??___fttol+1)& (0+255),0,c
  1212  000A54                     u1081:
  1213  000A54  5033               	movf	??___fttol,w,c
  1214  000A56  6E3D               	movwf	___fttol@exp1,c
  1215  000A58  503D               	movf	___fttol@exp1,w,c
  1216  000A5A  A4D8               	btfss	status,2,c
  1217  000A5C  D009               	goto	l475
  1218  000A5E  0E00               	movlw	0
  1219  000A60  6E2F               	movwf	?___fttol,c
  1220  000A62  0E00               	movlw	0
  1221  000A64  6E30               	movwf	?___fttol+1,c
  1222  000A66  0E00               	movlw	0
  1223  000A68  6E31               	movwf	?___fttol+2,c
  1224  000A6A  0E00               	movlw	0
  1225  000A6C  6E32               	movwf	?___fttol+3,c
  1226  000A6E  0012               	return	
  1227  000A70                     l475:
  1228  000A70  0E17               	movlw	23
  1229  000A72  6E33               	movwf	??___fttol& (0+255),c
  1230  000A74  C02F  F034         	movff	___fttol@f1,??___fttol+1
  1231  000A78  C030  F035         	movff	___fttol@f1+1,??___fttol+2
  1232  000A7C  C031  F036         	movff	___fttol@f1+2,??___fttol+3
  1233  000A80  2833               	incf	??___fttol,w,c
  1234  000A82  6E37               	movwf	(??___fttol+4)& (0+255),c
  1235  000A84  D004               	goto	u1100
  1236  000A86                     u1105:
  1237  000A86  90D8               	bcf	status,0,c
  1238  000A88  3236               	rrcf	??___fttol+3,f,c
  1239  000A8A  3235               	rrcf	??___fttol+2,f,c
  1240  000A8C  3234               	rrcf	??___fttol+1,f,c
  1241  000A8E                     u1100:
  1242  000A8E  2E37               	decfsz	(??___fttol+4)& (0+255),f,c
  1243  000A90  D7FA               	goto	u1105
  1244  000A92  5034               	movf	??___fttol+1,w,c
  1245  000A94  6E38               	movwf	___fttol@sign1,c
  1246  000A96  8E30               	bsf	___fttol@f1+1,7,c
  1247  000A98  0EFF               	movlw	255
  1248  000A9A  162F               	andwf	___fttol@f1,f,c
  1249  000A9C  0EFF               	movlw	255
  1250  000A9E  1630               	andwf	___fttol@f1+1,f,c
  1251  000AA0  0E00               	movlw	0
  1252  000AA2  1631               	andwf	___fttol@f1+2,f,c
  1253  000AA4  502F               	movf	___fttol@f1,w,c
  1254  000AA6  6E39               	movwf	___fttol@lval,c
  1255  000AA8  5030               	movf	___fttol@f1+1,w,c
  1256  000AAA  6E3A               	movwf	___fttol@lval+1,c
  1257  000AAC  5031               	movf	___fttol@f1+2,w,c
  1258  000AAE  6E3B               	movwf	___fttol@lval+2,c
  1259  000AB0  6A3C               	clrf	___fttol@lval+3,c
  1260  000AB2  0E8E               	movlw	142
  1261  000AB4  5E3D               	subwf	___fttol@exp1,f,c
  1262  000AB6  AE3D               	btfss	___fttol@exp1,7,c
  1263  000AB8  D016               	goto	l477
  1264  000ABA  503D               	movf	___fttol@exp1,w,c
  1265  000ABC  0A80               	xorlw	128
  1266  000ABE  0F8F               	addlw	143
  1267  000AC0  B0D8               	btfsc	status,0,c
  1268  000AC2  D009               	goto	l478
  1269  000AC4  0E00               	movlw	0
  1270  000AC6  6E2F               	movwf	?___fttol,c
  1271  000AC8  0E00               	movlw	0
  1272  000ACA  6E30               	movwf	?___fttol+1,c
  1273  000ACC  0E00               	movlw	0
  1274  000ACE  6E31               	movwf	?___fttol+2,c
  1275  000AD0  0E00               	movlw	0
  1276  000AD2  6E32               	movwf	?___fttol+3,c
  1277  000AD4  0012               	return	
  1278  000AD6                     l478:
  1279  000AD6  90D8               	bcf	status,0,c
  1280  000AD8  323C               	rrcf	___fttol@lval+3,f,c
  1281  000ADA  323B               	rrcf	___fttol@lval+2,f,c
  1282  000ADC  323A               	rrcf	___fttol@lval+1,f,c
  1283  000ADE  3239               	rrcf	___fttol@lval,f,c
  1284  000AE0  3E3D               	incfsz	___fttol@exp1,f,c
  1285  000AE2  D7F9               	goto	l478
  1286  000AE4  D015               	goto	u1140
  1287  000AE6                     l477:
  1288  000AE6  0E17               	movlw	23
  1289  000AE8  643D               	cpfsgt	___fttol@exp1,c
  1290  000AEA  D00F               	goto	l483
  1291  000AEC  0E00               	movlw	0
  1292  000AEE  6E2F               	movwf	?___fttol,c
  1293  000AF0  0E00               	movlw	0
  1294  000AF2  6E30               	movwf	?___fttol+1,c
  1295  000AF4  0E00               	movlw	0
  1296  000AF6  6E31               	movwf	?___fttol+2,c
  1297  000AF8  0E00               	movlw	0
  1298  000AFA  6E32               	movwf	?___fttol+3,c
  1299  000AFC  0012               	return	
  1300  000AFE  90D8               	bcf	status,0,c
  1301  000B00  3639               	rlcf	___fttol@lval,f,c
  1302  000B02  363A               	rlcf	___fttol@lval+1,f,c
  1303  000B04  363B               	rlcf	___fttol@lval+2,f,c
  1304  000B06  363C               	rlcf	___fttol@lval+3,f,c
  1305  000B08  063D               	decf	___fttol@exp1,f,c
  1306  000B0A                     l483:
  1307  000B0A  503D               	movf	___fttol@exp1,w,c
  1308  000B0C  A4D8               	btfss	status,2,c
  1309  000B0E  D7F7               	goto	l484
  1310  000B10                     u1140:
  1311  000B10  5038               	movf	___fttol@sign1,w,c
  1312  000B12  B4D8               	btfsc	status,2,c
  1313  000B14  D008               	goto	l486
  1314  000B16  1E3C               	comf	___fttol@lval+3,f,c
  1315  000B18  1E3B               	comf	___fttol@lval+2,f,c
  1316  000B1A  1E3A               	comf	___fttol@lval+1,f,c
  1317  000B1C  6C39               	negf	___fttol@lval,c
  1318  000B1E  0E00               	movlw	0
  1319  000B20  223A               	addwfc	___fttol@lval+1,f,c
  1320  000B22  223B               	addwfc	___fttol@lval+2,f,c
  1321  000B24  223C               	addwfc	___fttol@lval+3,f,c
  1322  000B26                     l486:
  1323  000B26  C039  F02F         	movff	___fttol@lval,?___fttol
  1324  000B2A  C03A  F030         	movff	___fttol@lval+1,?___fttol+1
  1325  000B2E  C03B  F031         	movff	___fttol@lval+2,?___fttol+2
  1326  000B32  C03C  F032         	movff	___fttol@lval+3,?___fttol+3
  1327  000B36  0012               	return	
  1328  000B38                     __end_of___fttol:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           intcon	equ	0xFF2
  1335                           intcon2	equ	0xFF1
  1336                           intcon3	equ	0xFF0
  1337                           wreg	equ	0xFE8
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function ___ftmul *****************
  1341 ;; Defined at:
  1342 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  f1              3   31[COMRAM] float 
  1345 ;;  f2              3   34[COMRAM] float 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  f3_as_produc    3   41[COMRAM] unsigned um
  1348 ;;  sign            1   45[COMRAM] unsigned char 
  1349 ;;  cntr            1   44[COMRAM] unsigned char 
  1350 ;;  exp             1   40[COMRAM] unsigned char 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  3   31[COMRAM] float 
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, status,0, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1360 ;;      Params:         6       0       0       0       0       0       0       0       0
  1361 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1362 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1363 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1364 ;;Total ram usage:       15 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    2
  1367 ;; This function calls:
  1368 ;;		___ftpack
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text5
  1375  000B38                     __ptext5:
  1376                           	opt stack 0
  1377  000B38                     ___ftmul:
  1378                           	opt stack 28
  1379                           
  1380                           ;incstack = 0
  1381  000B38  C022  F026         	movff	___ftmul@f1+2,??___ftmul
  1382  000B3C  6A27               	clrf	(??___ftmul+1)& (0+255),c
  1383  000B3E  6A28               	clrf	(??___ftmul+2)& (0+255),c
  1384  000B40  3421               	rlcf	___ftmul@f1+1,w,c
  1385  000B42  3626               	rlcf	??___ftmul& (0+255),f,c
  1386  000B44  E301               	bnc	u901
  1387  000B46  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  1388  000B48                     u901:
  1389  000B48  5026               	movf	??___ftmul,w,c
  1390  000B4A  6E29               	movwf	___ftmul@exp,c
  1391  000B4C  5029               	movf	___ftmul@exp,w,c
  1392  000B4E  A4D8               	btfss	status,2,c
  1393  000B50  D007               	goto	l454
  1394  000B52  0E00               	movlw	0
  1395  000B54  6E20               	movwf	?___ftmul,c
  1396  000B56  0E00               	movlw	0
  1397  000B58  6E21               	movwf	?___ftmul+1,c
  1398  000B5A  0E00               	movlw	0
  1399  000B5C  6E22               	movwf	?___ftmul+2,c
  1400  000B5E  0012               	return	
  1401  000B60                     l454:
  1402  000B60  C025  F026         	movff	___ftmul@f2+2,??___ftmul
  1403  000B64  6A27               	clrf	(??___ftmul+1)& (0+255),c
  1404  000B66  6A28               	clrf	(??___ftmul+2)& (0+255),c
  1405  000B68  3424               	rlcf	___ftmul@f2+1,w,c
  1406  000B6A  3626               	rlcf	??___ftmul& (0+255),f,c
  1407  000B6C  E301               	bnc	u921
  1408  000B6E  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  1409  000B70                     u921:
  1410  000B70  5026               	movf	??___ftmul,w,c
  1411  000B72  6E2E               	movwf	___ftmul@sign,c
  1412  000B74  502E               	movf	___ftmul@sign,w,c
  1413  000B76  A4D8               	btfss	status,2,c
  1414  000B78  D007               	goto	l456
  1415  000B7A  0E00               	movlw	0
  1416  000B7C  6E20               	movwf	?___ftmul,c
  1417  000B7E  0E00               	movlw	0
  1418  000B80  6E21               	movwf	?___ftmul+1,c
  1419  000B82  0E00               	movlw	0
  1420  000B84  6E22               	movwf	?___ftmul+2,c
  1421  000B86  0012               	return	
  1422  000B88                     l456:
  1423  000B88  502E               	movf	___ftmul@sign,w,c
  1424  000B8A  0F7B               	addlw	123
  1425  000B8C  2629               	addwf	___ftmul@exp,f,c
  1426  000B8E  C022  F02E         	movff	___ftmul@f1+2,___ftmul@sign
  1427  000B92  5025               	movf	___ftmul@f2+2,w,c
  1428  000B94  1A2E               	xorwf	___ftmul@sign,f,c
  1429  000B96  0E80               	movlw	128
  1430  000B98  162E               	andwf	___ftmul@sign,f,c
  1431  000B9A  8E21               	bsf	___ftmul@f1+1,7,c
  1432  000B9C  8E24               	bsf	___ftmul@f2+1,7,c
  1433  000B9E  0EFF               	movlw	255
  1434  000BA0  1623               	andwf	___ftmul@f2,f,c
  1435  000BA2  0EFF               	movlw	255
  1436  000BA4  1624               	andwf	___ftmul@f2+1,f,c
  1437  000BA6  0E00               	movlw	0
  1438  000BA8  1625               	andwf	___ftmul@f2+2,f,c
  1439  000BAA  0E00               	movlw	0
  1440  000BAC  6E2A               	movwf	___ftmul@f3_as_product,c
  1441  000BAE  0E00               	movlw	0
  1442  000BB0  6E2B               	movwf	___ftmul@f3_as_product+1,c
  1443  000BB2  0E00               	movlw	0
  1444  000BB4  6E2C               	movwf	___ftmul@f3_as_product+2,c
  1445  000BB6  0E07               	movlw	7
  1446  000BB8  6E2D               	movwf	___ftmul@cntr,c
  1447  000BBA  A020               	btfss	___ftmul@f1,0,c
  1448  000BBC  D006               	goto	l458
  1449  000BBE  5023               	movf	___ftmul@f2,w,c
  1450  000BC0  262A               	addwf	___ftmul@f3_as_product,f,c
  1451  000BC2  5024               	movf	___ftmul@f2+1,w,c
  1452  000BC4  222B               	addwfc	___ftmul@f3_as_product+1,f,c
  1453  000BC6  5025               	movf	___ftmul@f2+2,w,c
  1454  000BC8  222C               	addwfc	___ftmul@f3_as_product+2,f,c
  1455  000BCA                     l458:
  1456  000BCA  90D8               	bcf	status,0,c
  1457  000BCC  3222               	rrcf	___ftmul@f1+2,f,c
  1458  000BCE  3221               	rrcf	___ftmul@f1+1,f,c
  1459  000BD0  3220               	rrcf	___ftmul@f1,f,c
  1460  000BD2  90D8               	bcf	status,0,c
  1461  000BD4  3623               	rlcf	___ftmul@f2,f,c
  1462  000BD6  3624               	rlcf	___ftmul@f2+1,f,c
  1463  000BD8  3625               	rlcf	___ftmul@f2+2,f,c
  1464  000BDA  2E2D               	decfsz	___ftmul@cntr,f,c
  1465  000BDC  D7EE               	goto	l457
  1466  000BDE  0E09               	movlw	9
  1467  000BE0  6E2D               	movwf	___ftmul@cntr,c
  1468  000BE2  A020               	btfss	___ftmul@f1,0,c
  1469  000BE4  D006               	goto	l461
  1470  000BE6  5023               	movf	___ftmul@f2,w,c
  1471  000BE8  262A               	addwf	___ftmul@f3_as_product,f,c
  1472  000BEA  5024               	movf	___ftmul@f2+1,w,c
  1473  000BEC  222B               	addwfc	___ftmul@f3_as_product+1,f,c
  1474  000BEE  5025               	movf	___ftmul@f2+2,w,c
  1475  000BF0  222C               	addwfc	___ftmul@f3_as_product+2,f,c
  1476  000BF2                     l461:
  1477  000BF2  90D8               	bcf	status,0,c
  1478  000BF4  3222               	rrcf	___ftmul@f1+2,f,c
  1479  000BF6  3221               	rrcf	___ftmul@f1+1,f,c
  1480  000BF8  3220               	rrcf	___ftmul@f1,f,c
  1481  000BFA  90D8               	bcf	status,0,c
  1482  000BFC  322C               	rrcf	___ftmul@f3_as_product+2,f,c
  1483  000BFE  322B               	rrcf	___ftmul@f3_as_product+1,f,c
  1484  000C00  322A               	rrcf	___ftmul@f3_as_product,f,c
  1485  000C02  2E2D               	decfsz	___ftmul@cntr,f,c
  1486  000C04  D7EE               	goto	l460
  1487  000C06  C02A  F015         	movff	___ftmul@f3_as_product,___ftpack@arg
  1488  000C0A  C02B  F016         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1489  000C0E  C02C  F017         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1490  000C12  C029  F018         	movff	___ftmul@exp,___ftpack@exp
  1491  000C16  C02E  F019         	movff	___ftmul@sign,___ftpack@sign
  1492  000C1A  ECDE  F006         	call	___ftpack	;wreg free
  1493  000C1E  C015  F020         	movff	?___ftpack,?___ftmul
  1494  000C22  C016  F021         	movff	?___ftpack+1,?___ftmul+1
  1495  000C26  C017  F022         	movff	?___ftpack+2,?___ftmul+2
  1496  000C2A  0012               	return	
  1497  000C2C                     __end_of___ftmul:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           intcon	equ	0xFF2
  1504                           intcon2	equ	0xFF1
  1505                           intcon3	equ	0xFF0
  1506                           wreg	equ	0xFE8
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function ___ftpack *****************
  1510 ;; Defined at:
  1511 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  arg             3   20[COMRAM] unsigned um
  1514 ;;  exp             1   23[COMRAM] unsigned char 
  1515 ;;  sign            1   24[COMRAM] unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  3   20[COMRAM] float 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1527 ;;      Params:         5       0       0       0       0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1529 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1530 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1531 ;;Total ram usage:        8 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		___ftmul
  1538 ;;		___lwtoft
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text6
  1543  000DBC                     __ptext6:
  1544                           	opt stack 0
  1545  000DBC                     ___ftpack:
  1546                           	opt stack 28
  1547                           
  1548                           ;incstack = 0
  1549  000DBC  5018               	movf	___ftpack@exp,w,c
  1550  000DBE  B4D8               	btfsc	status,2,c
  1551  000DC0  D005               	goto	u620
  1552  000DC2  5015               	movf	___ftpack@arg,w,c
  1553  000DC4  1016               	iorwf	___ftpack@arg+1,w,c
  1554  000DC6  1017               	iorwf	___ftpack@arg+2,w,c
  1555  000DC8  A4D8               	btfss	status,2,c
  1556  000DCA  D00C               	goto	l375
  1557  000DCC                     u620:
  1558  000DCC  0E00               	movlw	0
  1559  000DCE  6E15               	movwf	?___ftpack,c
  1560  000DD0  0E00               	movlw	0
  1561  000DD2  6E16               	movwf	?___ftpack+1,c
  1562  000DD4  0E00               	movlw	0
  1563  000DD6  6E17               	movwf	?___ftpack+2,c
  1564  000DD8  0012               	return	
  1565  000DDA  2A18               	incf	___ftpack@exp,f,c
  1566  000DDC  90D8               	bcf	status,0,c
  1567  000DDE  3217               	rrcf	___ftpack@arg+2,f,c
  1568  000DE0  3216               	rrcf	___ftpack@arg+1,f,c
  1569  000DE2  3215               	rrcf	___ftpack@arg,f,c
  1570  000DE4                     l375:
  1571  000DE4  0E00               	movlw	0
  1572  000DE6  1415               	andwf	___ftpack@arg,w,c
  1573  000DE8  6E1A               	movwf	??___ftpack& (0+255),c
  1574  000DEA  0E00               	movlw	0
  1575  000DEC  1416               	andwf	___ftpack@arg+1,w,c
  1576  000DEE  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  1577  000DF0  0EFE               	movlw	254
  1578  000DF2  1417               	andwf	___ftpack@arg+2,w,c
  1579  000DF4  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  1580  000DF6  501A               	movf	??___ftpack,w,c
  1581  000DF8  101B               	iorwf	??___ftpack+1,w,c
  1582  000DFA  101C               	iorwf	??___ftpack+2,w,c
  1583  000DFC  B4D8               	btfsc	status,2,c
  1584  000DFE  D00C               	goto	l378
  1585  000E00  D7EC               	goto	l376
  1586  000E02  2A18               	incf	___ftpack@exp,f,c
  1587  000E04  0E01               	movlw	1
  1588  000E06  2615               	addwf	___ftpack@arg,f,c
  1589  000E08  0E00               	movlw	0
  1590  000E0A  2216               	addwfc	___ftpack@arg+1,f,c
  1591  000E0C  0E00               	movlw	0
  1592  000E0E  2217               	addwfc	___ftpack@arg+2,f,c
  1593  000E10  90D8               	bcf	status,0,c
  1594  000E12  3217               	rrcf	___ftpack@arg+2,f,c
  1595  000E14  3216               	rrcf	___ftpack@arg+1,f,c
  1596  000E16  3215               	rrcf	___ftpack@arg,f,c
  1597  000E18                     l378:
  1598  000E18  0E00               	movlw	0
  1599  000E1A  1415               	andwf	___ftpack@arg,w,c
  1600  000E1C  6E1A               	movwf	??___ftpack& (0+255),c
  1601  000E1E  0E00               	movlw	0
  1602  000E20  1416               	andwf	___ftpack@arg+1,w,c
  1603  000E22  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  1604  000E24  0EFF               	movlw	255
  1605  000E26  1417               	andwf	___ftpack@arg+2,w,c
  1606  000E28  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  1607  000E2A  501A               	movf	??___ftpack,w,c
  1608  000E2C  101B               	iorwf	??___ftpack+1,w,c
  1609  000E2E  101C               	iorwf	??___ftpack+2,w,c
  1610  000E30  B4D8               	btfsc	status,2,c
  1611  000E32  D006               	goto	l381
  1612  000E34  D7E6               	goto	l379
  1613  000E36  0618               	decf	___ftpack@exp,f,c
  1614  000E38  90D8               	bcf	status,0,c
  1615  000E3A  3615               	rlcf	___ftpack@arg,f,c
  1616  000E3C  3616               	rlcf	___ftpack@arg+1,f,c
  1617  000E3E  3617               	rlcf	___ftpack@arg+2,f,c
  1618  000E40                     l381:
  1619  000E40  BE16               	btfsc	___ftpack@arg+1,7,c
  1620  000E42  D003               	goto	u660
  1621  000E44  0E02               	movlw	2
  1622  000E46  6018               	cpfslt	___ftpack@exp,c
  1623  000E48  D7F6               	goto	l382
  1624  000E4A                     u660:
  1625  000E4A  A018               	btfss	___ftpack@exp,0,c
  1626  000E4C  9E16               	bcf	___ftpack@arg+1,7,c
  1627  000E4E  90D8               	bcf	status,0,c
  1628  000E50  3218               	rrcf	___ftpack@exp,f,c
  1629  000E52  5018               	movf	___ftpack@exp,w,c
  1630  000E54  1217               	iorwf	___ftpack@arg+2,f,c
  1631  000E56  5019               	movf	___ftpack@sign,w,c
  1632  000E58  A4D8               	btfss	status,2,c
  1633  000E5A  8E17               	bsf	___ftpack@arg+2,7,c
  1634  000E5C  C015  F015         	movff	___ftpack@arg,?___ftpack
  1635  000E60  C016  F016         	movff	___ftpack@arg+1,?___ftpack+1
  1636  000E64  C017  F017         	movff	___ftpack@arg+2,?___ftpack+2
  1637  000E68  0012               	return	
  1638  000E6A                     __end_of___ftpack:
  1639                           	opt stack 0
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           intcon	equ	0xFF2
  1645                           intcon2	equ	0xFF1
  1646                           intcon3	equ	0xFF0
  1647                           wreg	equ	0xFE8
  1648                           status	equ	0xFD8
  1649                           
  1650 ;; *************** function ___awmod *****************
  1651 ;; Defined at:
  1652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  dividend        2   20[COMRAM] int 
  1655 ;;  divisor         2   22[COMRAM] int 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  sign            1   25[COMRAM] unsigned char 
  1658 ;;  counter         1   24[COMRAM] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2   20[COMRAM] int 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         4       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        6 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text7
  1683  001042                     __ptext7:
  1684                           	opt stack 0
  1685  001042                     ___awmod:
  1686                           	opt stack 29
  1687                           
  1688                           ;incstack = 0
  1689  001042  0E00               	movlw	0
  1690  001044  6E1A               	movwf	___awmod@sign,c
  1691  001046  AE16               	btfss	___awmod@dividend+1,7,c
  1692  001048  D006               	goto	l341
  1693  00104A  6C15               	negf	___awmod@dividend,c
  1694  00104C  1E16               	comf	___awmod@dividend+1,f,c
  1695  00104E  B0D8               	btfsc	status,0,c
  1696  001050  2A16               	incf	___awmod@dividend+1,f,c
  1697  001052  0E01               	movlw	1
  1698  001054  6E1A               	movwf	___awmod@sign,c
  1699  001056                     l341:
  1700  001056  AE18               	btfss	___awmod@divisor+1,7,c
  1701  001058  D004               	goto	l342
  1702  00105A  6C17               	negf	___awmod@divisor,c
  1703  00105C  1E18               	comf	___awmod@divisor+1,f,c
  1704  00105E  B0D8               	btfsc	status,0,c
  1705  001060  2A18               	incf	___awmod@divisor+1,f,c
  1706  001062                     l342:
  1707  001062  5017               	movf	___awmod@divisor,w,c
  1708  001064  1018               	iorwf	___awmod@divisor+1,w,c
  1709  001066  B4D8               	btfsc	status,2,c
  1710  001068  D018               	goto	l349
  1711  00106A  0E01               	movlw	1
  1712  00106C  6E19               	movwf	___awmod@counter,c
  1713  00106E  D004               	goto	l344
  1714  001070  90D8               	bcf	status,0,c
  1715  001072  3617               	rlcf	___awmod@divisor,f,c
  1716  001074  3618               	rlcf	___awmod@divisor+1,f,c
  1717  001076  2A19               	incf	___awmod@counter,f,c
  1718  001078                     l344:
  1719  001078  AE18               	btfss	___awmod@divisor+1,7,c
  1720  00107A  D7FA               	goto	l345
  1721  00107C                     u1050:
  1722  00107C  5017               	movf	___awmod@divisor,w,c
  1723  00107E  5C15               	subwf	___awmod@dividend,w,c
  1724  001080  5018               	movf	___awmod@divisor+1,w,c
  1725  001082  5816               	subwfb	___awmod@dividend+1,w,c
  1726  001084  A0D8               	btfss	status,0,c
  1727  001086  D004               	goto	l348
  1728  001088  5017               	movf	___awmod@divisor,w,c
  1729  00108A  5E15               	subwf	___awmod@dividend,f,c
  1730  00108C  5018               	movf	___awmod@divisor+1,w,c
  1731  00108E  5A16               	subwfb	___awmod@dividend+1,f,c
  1732  001090                     l348:
  1733  001090  90D8               	bcf	status,0,c
  1734  001092  3218               	rrcf	___awmod@divisor+1,f,c
  1735  001094  3217               	rrcf	___awmod@divisor,f,c
  1736  001096  2E19               	decfsz	___awmod@counter,f,c
  1737  001098  D7F1               	goto	u1050
  1738  00109A                     l349:
  1739  00109A  501A               	movf	___awmod@sign,w,c
  1740  00109C  B4D8               	btfsc	status,2,c
  1741  00109E  D004               	goto	l350
  1742  0010A0  6C15               	negf	___awmod@dividend,c
  1743  0010A2  1E16               	comf	___awmod@dividend+1,f,c
  1744  0010A4  B0D8               	btfsc	status,0,c
  1745  0010A6  2A16               	incf	___awmod@dividend+1,f,c
  1746  0010A8                     l350:
  1747  0010A8  C015  F015         	movff	___awmod@dividend,?___awmod
  1748  0010AC  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  1749  0010B0  0012               	return	
  1750  0010B2                     __end_of___awmod:
  1751                           	opt stack 0
  1752                           tblptru	equ	0xFF8
  1753                           tblptrh	equ	0xFF7
  1754                           tblptrl	equ	0xFF6
  1755                           tablat	equ	0xFF5
  1756                           intcon	equ	0xFF2
  1757                           intcon2	equ	0xFF1
  1758                           intcon3	equ	0xFF0
  1759                           wreg	equ	0xFE8
  1760                           status	equ	0xFD8
  1761                           
  1762 ;; *************** function ___awdiv *****************
  1763 ;; Defined at:
  1764 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  dividend        2   20[COMRAM] int 
  1767 ;;  divisor         2   22[COMRAM] int 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  quotient        2   26[COMRAM] int 
  1770 ;;  sign            1   25[COMRAM] unsigned char 
  1771 ;;  counter         1   24[COMRAM] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2   20[COMRAM] int 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1781 ;;      Params:         4       0       0       0       0       0       0       0       0
  1782 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1784 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1785 ;;Total ram usage:        8 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text8
  1796  000FBE                     __ptext8:
  1797                           	opt stack 0
  1798  000FBE                     ___awdiv:
  1799                           	opt stack 29
  1800                           
  1801                           ;incstack = 0
  1802  000FBE  0E00               	movlw	0
  1803  000FC0  6E1A               	movwf	___awdiv@sign,c
  1804  000FC2  AE18               	btfss	___awdiv@divisor+1,7,c
  1805  000FC4  D006               	goto	l328
  1806  000FC6  6C17               	negf	___awdiv@divisor,c
  1807  000FC8  1E18               	comf	___awdiv@divisor+1,f,c
  1808  000FCA  B0D8               	btfsc	status,0,c
  1809  000FCC  2A18               	incf	___awdiv@divisor+1,f,c
  1810  000FCE  0E01               	movlw	1
  1811  000FD0  6E1A               	movwf	___awdiv@sign,c
  1812  000FD2                     l328:
  1813  000FD2  AE16               	btfss	___awdiv@dividend+1,7,c
  1814  000FD4  D006               	goto	l329
  1815  000FD6  6C15               	negf	___awdiv@dividend,c
  1816  000FD8  1E16               	comf	___awdiv@dividend+1,f,c
  1817  000FDA  B0D8               	btfsc	status,0,c
  1818  000FDC  2A16               	incf	___awdiv@dividend+1,f,c
  1819  000FDE  0E01               	movlw	1
  1820  000FE0  1A1A               	xorwf	___awdiv@sign,f,c
  1821  000FE2                     l329:
  1822  000FE2  0E00               	movlw	0
  1823  000FE4  6E1C               	movwf	___awdiv@quotient+1,c
  1824  000FE6  0E00               	movlw	0
  1825  000FE8  6E1B               	movwf	___awdiv@quotient,c
  1826  000FEA  5017               	movf	___awdiv@divisor,w,c
  1827  000FEC  1018               	iorwf	___awdiv@divisor+1,w,c
  1828  000FEE  B4D8               	btfsc	status,2,c
  1829  000FF0  D01C               	goto	l336
  1830  000FF2  0E01               	movlw	1
  1831  000FF4  6E19               	movwf	___awdiv@counter,c
  1832  000FF6  D004               	goto	l331
  1833  000FF8  90D8               	bcf	status,0,c
  1834  000FFA  3617               	rlcf	___awdiv@divisor,f,c
  1835  000FFC  3618               	rlcf	___awdiv@divisor+1,f,c
  1836  000FFE  2A19               	incf	___awdiv@counter,f,c
  1837  001000                     l331:
  1838  001000  AE18               	btfss	___awdiv@divisor+1,7,c
  1839  001002  D7FA               	goto	l332
  1840  001004                     u990:
  1841  001004  90D8               	bcf	status,0,c
  1842  001006  361B               	rlcf	___awdiv@quotient,f,c
  1843  001008  361C               	rlcf	___awdiv@quotient+1,f,c
  1844  00100A  5017               	movf	___awdiv@divisor,w,c
  1845  00100C  5C15               	subwf	___awdiv@dividend,w,c
  1846  00100E  5018               	movf	___awdiv@divisor+1,w,c
  1847  001010  5816               	subwfb	___awdiv@dividend+1,w,c
  1848  001012  A0D8               	btfss	status,0,c
  1849  001014  D005               	goto	l335
  1850  001016  5017               	movf	___awdiv@divisor,w,c
  1851  001018  5E15               	subwf	___awdiv@dividend,f,c
  1852  00101A  5018               	movf	___awdiv@divisor+1,w,c
  1853  00101C  5A16               	subwfb	___awdiv@dividend+1,f,c
  1854  00101E  801B               	bsf	___awdiv@quotient,0,c
  1855  001020                     l335:
  1856  001020  90D8               	bcf	status,0,c
  1857  001022  3218               	rrcf	___awdiv@divisor+1,f,c
  1858  001024  3217               	rrcf	___awdiv@divisor,f,c
  1859  001026  2E19               	decfsz	___awdiv@counter,f,c
  1860  001028  D7ED               	goto	u990
  1861  00102A                     l336:
  1862  00102A  501A               	movf	___awdiv@sign,w,c
  1863  00102C  B4D8               	btfsc	status,2,c
  1864  00102E  D004               	goto	l337
  1865  001030  6C1B               	negf	___awdiv@quotient,c
  1866  001032  1E1C               	comf	___awdiv@quotient+1,f,c
  1867  001034  B0D8               	btfsc	status,0,c
  1868  001036  2A1C               	incf	___awdiv@quotient+1,f,c
  1869  001038                     l337:
  1870  001038  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  1871  00103C  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  1872  001040  0012               	return	
  1873  001042                     __end_of___awdiv:
  1874                           	opt stack 0
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           intcon	equ	0xFF2
  1880                           intcon2	equ	0xFF1
  1881                           intcon3	equ	0xFF0
  1882                           wreg	equ	0xFE8
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function ___almod *****************
  1886 ;; Defined at:
  1887 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  dividend        4   20[COMRAM] long 
  1890 ;;  divisor         4   24[COMRAM] long 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  sign            1   29[COMRAM] unsigned char 
  1893 ;;  counter         1   28[COMRAM] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  4   20[COMRAM] long 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         8       0       0       0       0       0       0       0       0
  1904 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1906 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1907 ;;Total ram usage:       10 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text9
  1918  000E6A                     __ptext9:
  1919                           	opt stack 0
  1920  000E6A                     ___almod:
  1921                           	opt stack 29
  1922                           
  1923                           ;incstack = 0
  1924  000E6A  0E00               	movlw	0
  1925  000E6C  6E1E               	movwf	___almod@sign,c
  1926  000E6E  AE18               	btfss	___almod@dividend+3,7,c
  1927  000E70  D00A               	goto	l229
  1928  000E72  1E18               	comf	___almod@dividend+3,f,c
  1929  000E74  1E17               	comf	___almod@dividend+2,f,c
  1930  000E76  1E16               	comf	___almod@dividend+1,f,c
  1931  000E78  6C15               	negf	___almod@dividend,c
  1932  000E7A  0E00               	movlw	0
  1933  000E7C  2216               	addwfc	___almod@dividend+1,f,c
  1934  000E7E  2217               	addwfc	___almod@dividend+2,f,c
  1935  000E80  2218               	addwfc	___almod@dividend+3,f,c
  1936  000E82  0E01               	movlw	1
  1937  000E84  6E1E               	movwf	___almod@sign,c
  1938  000E86                     l229:
  1939  000E86  AE1C               	btfss	___almod@divisor+3,7,c
  1940  000E88  D008               	goto	l230
  1941  000E8A  1E1C               	comf	___almod@divisor+3,f,c
  1942  000E8C  1E1B               	comf	___almod@divisor+2,f,c
  1943  000E8E  1E1A               	comf	___almod@divisor+1,f,c
  1944  000E90  6C19               	negf	___almod@divisor,c
  1945  000E92  0E00               	movlw	0
  1946  000E94  221A               	addwfc	___almod@divisor+1,f,c
  1947  000E96  221B               	addwfc	___almod@divisor+2,f,c
  1948  000E98  221C               	addwfc	___almod@divisor+3,f,c
  1949  000E9A                     l230:
  1950  000E9A  5019               	movf	___almod@divisor,w,c
  1951  000E9C  101A               	iorwf	___almod@divisor+1,w,c
  1952  000E9E  101B               	iorwf	___almod@divisor+2,w,c
  1953  000EA0  101C               	iorwf	___almod@divisor+3,w,c
  1954  000EA2  B4D8               	btfsc	status,2,c
  1955  000EA4  D024               	goto	l237
  1956  000EA6  0E01               	movlw	1
  1957  000EA8  6E1D               	movwf	___almod@counter,c
  1958  000EAA  D006               	goto	l232
  1959  000EAC  90D8               	bcf	status,0,c
  1960  000EAE  3619               	rlcf	___almod@divisor,f,c
  1961  000EB0  361A               	rlcf	___almod@divisor+1,f,c
  1962  000EB2  361B               	rlcf	___almod@divisor+2,f,c
  1963  000EB4  361C               	rlcf	___almod@divisor+3,f,c
  1964  000EB6  2A1D               	incf	___almod@counter,f,c
  1965  000EB8                     l232:
  1966  000EB8  AE1C               	btfss	___almod@divisor+3,7,c
  1967  000EBA  D7F8               	goto	l233
  1968  000EBC                     u870:
  1969  000EBC  5019               	movf	___almod@divisor,w,c
  1970  000EBE  5C15               	subwf	___almod@dividend,w,c
  1971  000EC0  501A               	movf	___almod@divisor+1,w,c
  1972  000EC2  5816               	subwfb	___almod@dividend+1,w,c
  1973  000EC4  501B               	movf	___almod@divisor+2,w,c
  1974  000EC6  5817               	subwfb	___almod@dividend+2,w,c
  1975  000EC8  501C               	movf	___almod@divisor+3,w,c
  1976  000ECA  5818               	subwfb	___almod@dividend+3,w,c
  1977  000ECC  A0D8               	btfss	status,0,c
  1978  000ECE  D008               	goto	l236
  1979  000ED0  5019               	movf	___almod@divisor,w,c
  1980  000ED2  5E15               	subwf	___almod@dividend,f,c
  1981  000ED4  501A               	movf	___almod@divisor+1,w,c
  1982  000ED6  5A16               	subwfb	___almod@dividend+1,f,c
  1983  000ED8  501B               	movf	___almod@divisor+2,w,c
  1984  000EDA  5A17               	subwfb	___almod@dividend+2,f,c
  1985  000EDC  501C               	movf	___almod@divisor+3,w,c
  1986  000EDE  5A18               	subwfb	___almod@dividend+3,f,c
  1987  000EE0                     l236:
  1988  000EE0  90D8               	bcf	status,0,c
  1989  000EE2  321C               	rrcf	___almod@divisor+3,f,c
  1990  000EE4  321B               	rrcf	___almod@divisor+2,f,c
  1991  000EE6  321A               	rrcf	___almod@divisor+1,f,c
  1992  000EE8  3219               	rrcf	___almod@divisor,f,c
  1993  000EEA  2E1D               	decfsz	___almod@counter,f,c
  1994  000EEC  D7E7               	goto	u870
  1995  000EEE                     l237:
  1996  000EEE  501E               	movf	___almod@sign,w,c
  1997  000EF0  B4D8               	btfsc	status,2,c
  1998  000EF2  D008               	goto	l238
  1999  000EF4  1E18               	comf	___almod@dividend+3,f,c
  2000  000EF6  1E17               	comf	___almod@dividend+2,f,c
  2001  000EF8  1E16               	comf	___almod@dividend+1,f,c
  2002  000EFA  6C15               	negf	___almod@dividend,c
  2003  000EFC  0E00               	movlw	0
  2004  000EFE  2216               	addwfc	___almod@dividend+1,f,c
  2005  000F00  2217               	addwfc	___almod@dividend+2,f,c
  2006  000F02  2218               	addwfc	___almod@dividend+3,f,c
  2007  000F04                     l238:
  2008  000F04  C015  F015         	movff	___almod@dividend,?___almod
  2009  000F08  C016  F016         	movff	___almod@dividend+1,?___almod+1
  2010  000F0C  C017  F017         	movff	___almod@dividend+2,?___almod+2
  2011  000F10  C018  F018         	movff	___almod@dividend+3,?___almod+3
  2012  000F14  0012               	return	
  2013  000F16                     __end_of___almod:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           intcon	equ	0xFF2
  2020                           intcon2	equ	0xFF1
  2021                           intcon3	equ	0xFF0
  2022                           wreg	equ	0xFE8
  2023                           status	equ	0xFD8
  2024                           
  2025 ;; *************** function ___aldiv *****************
  2026 ;; Defined at:
  2027 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  dividend        4   20[COMRAM] long 
  2030 ;;  divisor         4   24[COMRAM] long 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  quotient        4   30[COMRAM] long 
  2033 ;;  sign            1   29[COMRAM] unsigned char 
  2034 ;;  counter         1   28[COMRAM] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  4   20[COMRAM] long 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2044 ;;      Params:         8       0       0       0       0       0       0       0       0
  2045 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2047 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2048 ;;Total ram usage:       14 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text10
  2059  000C2C                     __ptext10:
  2060                           	opt stack 0
  2061  000C2C                     ___aldiv:
  2062                           	opt stack 29
  2063                           
  2064                           ;incstack = 0
  2065  000C2C  0E00               	movlw	0
  2066  000C2E  6E1E               	movwf	___aldiv@sign,c
  2067  000C30  AE1C               	btfss	___aldiv@divisor+3,7,c
  2068  000C32  D00A               	goto	l216
  2069  000C34  1E1C               	comf	___aldiv@divisor+3,f,c
  2070  000C36  1E1B               	comf	___aldiv@divisor+2,f,c
  2071  000C38  1E1A               	comf	___aldiv@divisor+1,f,c
  2072  000C3A  6C19               	negf	___aldiv@divisor,c
  2073  000C3C  0E00               	movlw	0
  2074  000C3E  221A               	addwfc	___aldiv@divisor+1,f,c
  2075  000C40  221B               	addwfc	___aldiv@divisor+2,f,c
  2076  000C42  221C               	addwfc	___aldiv@divisor+3,f,c
  2077  000C44  0E01               	movlw	1
  2078  000C46  6E1E               	movwf	___aldiv@sign,c
  2079  000C48                     l216:
  2080  000C48  AE18               	btfss	___aldiv@dividend+3,7,c
  2081  000C4A  D00A               	goto	l217
  2082  000C4C  1E18               	comf	___aldiv@dividend+3,f,c
  2083  000C4E  1E17               	comf	___aldiv@dividend+2,f,c
  2084  000C50  1E16               	comf	___aldiv@dividend+1,f,c
  2085  000C52  6C15               	negf	___aldiv@dividend,c
  2086  000C54  0E00               	movlw	0
  2087  000C56  2216               	addwfc	___aldiv@dividend+1,f,c
  2088  000C58  2217               	addwfc	___aldiv@dividend+2,f,c
  2089  000C5A  2218               	addwfc	___aldiv@dividend+3,f,c
  2090  000C5C  0E01               	movlw	1
  2091  000C5E  1A1E               	xorwf	___aldiv@sign,f,c
  2092  000C60                     l217:
  2093  000C60  0E00               	movlw	0
  2094  000C62  6E1F               	movwf	___aldiv@quotient,c
  2095  000C64  0E00               	movlw	0
  2096  000C66  6E20               	movwf	___aldiv@quotient+1,c
  2097  000C68  0E00               	movlw	0
  2098  000C6A  6E21               	movwf	___aldiv@quotient+2,c
  2099  000C6C  0E00               	movlw	0
  2100  000C6E  6E22               	movwf	___aldiv@quotient+3,c
  2101  000C70  5019               	movf	___aldiv@divisor,w,c
  2102  000C72  101A               	iorwf	___aldiv@divisor+1,w,c
  2103  000C74  101B               	iorwf	___aldiv@divisor+2,w,c
  2104  000C76  101C               	iorwf	___aldiv@divisor+3,w,c
  2105  000C78  B4D8               	btfsc	status,2,c
  2106  000C7A  D02A               	goto	l224
  2107  000C7C  0E01               	movlw	1
  2108  000C7E  6E1D               	movwf	___aldiv@counter,c
  2109  000C80  D006               	goto	l219
  2110  000C82  90D8               	bcf	status,0,c
  2111  000C84  3619               	rlcf	___aldiv@divisor,f,c
  2112  000C86  361A               	rlcf	___aldiv@divisor+1,f,c
  2113  000C88  361B               	rlcf	___aldiv@divisor+2,f,c
  2114  000C8A  361C               	rlcf	___aldiv@divisor+3,f,c
  2115  000C8C  2A1D               	incf	___aldiv@counter,f,c
  2116  000C8E                     l219:
  2117  000C8E  AE1C               	btfss	___aldiv@divisor+3,7,c
  2118  000C90  D7F8               	goto	l220
  2119  000C92                     u810:
  2120  000C92  90D8               	bcf	status,0,c
  2121  000C94  361F               	rlcf	___aldiv@quotient,f,c
  2122  000C96  3620               	rlcf	___aldiv@quotient+1,f,c
  2123  000C98  3621               	rlcf	___aldiv@quotient+2,f,c
  2124  000C9A  3622               	rlcf	___aldiv@quotient+3,f,c
  2125  000C9C  5019               	movf	___aldiv@divisor,w,c
  2126  000C9E  5C15               	subwf	___aldiv@dividend,w,c
  2127  000CA0  501A               	movf	___aldiv@divisor+1,w,c
  2128  000CA2  5816               	subwfb	___aldiv@dividend+1,w,c
  2129  000CA4  501B               	movf	___aldiv@divisor+2,w,c
  2130  000CA6  5817               	subwfb	___aldiv@dividend+2,w,c
  2131  000CA8  501C               	movf	___aldiv@divisor+3,w,c
  2132  000CAA  5818               	subwfb	___aldiv@dividend+3,w,c
  2133  000CAC  A0D8               	btfss	status,0,c
  2134  000CAE  D009               	goto	l223
  2135  000CB0  5019               	movf	___aldiv@divisor,w,c
  2136  000CB2  5E15               	subwf	___aldiv@dividend,f,c
  2137  000CB4  501A               	movf	___aldiv@divisor+1,w,c
  2138  000CB6  5A16               	subwfb	___aldiv@dividend+1,f,c
  2139  000CB8  501B               	movf	___aldiv@divisor+2,w,c
  2140  000CBA  5A17               	subwfb	___aldiv@dividend+2,f,c
  2141  000CBC  501C               	movf	___aldiv@divisor+3,w,c
  2142  000CBE  5A18               	subwfb	___aldiv@dividend+3,f,c
  2143  000CC0  801F               	bsf	___aldiv@quotient,0,c
  2144  000CC2                     l223:
  2145  000CC2  90D8               	bcf	status,0,c
  2146  000CC4  321C               	rrcf	___aldiv@divisor+3,f,c
  2147  000CC6  321B               	rrcf	___aldiv@divisor+2,f,c
  2148  000CC8  321A               	rrcf	___aldiv@divisor+1,f,c
  2149  000CCA  3219               	rrcf	___aldiv@divisor,f,c
  2150  000CCC  2E1D               	decfsz	___aldiv@counter,f,c
  2151  000CCE  D7E1               	goto	u810
  2152  000CD0                     l224:
  2153  000CD0  501E               	movf	___aldiv@sign,w,c
  2154  000CD2  B4D8               	btfsc	status,2,c
  2155  000CD4  D008               	goto	l225
  2156  000CD6  1E22               	comf	___aldiv@quotient+3,f,c
  2157  000CD8  1E21               	comf	___aldiv@quotient+2,f,c
  2158  000CDA  1E20               	comf	___aldiv@quotient+1,f,c
  2159  000CDC  6C1F               	negf	___aldiv@quotient,c
  2160  000CDE  0E00               	movlw	0
  2161  000CE0  2220               	addwfc	___aldiv@quotient+1,f,c
  2162  000CE2  2221               	addwfc	___aldiv@quotient+2,f,c
  2163  000CE4  2222               	addwfc	___aldiv@quotient+3,f,c
  2164  000CE6                     l225:
  2165  000CE6  C01F  F015         	movff	___aldiv@quotient,?___aldiv
  2166  000CEA  C020  F016         	movff	___aldiv@quotient+1,?___aldiv+1
  2167  000CEE  C021  F017         	movff	___aldiv@quotient+2,?___aldiv+2
  2168  000CF2  C022  F018         	movff	___aldiv@quotient+3,?___aldiv+3
  2169  000CF6  0012               	return	
  2170  000CF8                     __end_of___aldiv:
  2171                           	opt stack 0
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           intcon	equ	0xFF2
  2177                           intcon2	equ	0xFF1
  2178                           intcon3	equ	0xFF0
  2179                           wreg	equ	0xFE8
  2180                           status	equ	0xFD8
  2181                           
  2182 ;; *************** function _OpenXLCD *****************
  2183 ;; Defined at:
  2184 ;;		line 41 in file "nxlcd.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  lcdtype         1    wreg     unsigned char 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  lcdtype         1   21[COMRAM] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        1 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    3
  2205 ;; This function calls:
  2206 ;;		_BusyXLCD
  2207 ;;		_DelayPORXLCD
  2208 ;;		_DelayXLCD
  2209 ;;		_SetDDRamAddr
  2210 ;;		_WriteCmdXLCD
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text11
  2217  000F16                     __ptext11:
  2218                           	opt stack 0
  2219  000F16                     _OpenXLCD:
  2220                           	opt stack 27
  2221                           
  2222                           ;incstack = 0
  2223                           ;OpenXLCD@lcdtype stored from wreg
  2224  000F16  6E16               	movwf	OpenXLCD@lcdtype,c
  2225                           
  2226                           ;nxlcd.c: 50: PORTD &= 0x0f;
  2227  000F18  0E0F               	movlw	15
  2228  000F1A  1683               	andwf	3971,f,c	;volatile
  2229                           
  2230                           ;nxlcd.c: 51: TRISD &= 0x0F;
  2231  000F1C  0E0F               	movlw	15
  2232  000F1E  1695               	andwf	3989,f,c	;volatile
  2233                           
  2234                           ;nxlcd.c: 57: TRISEbits.TRISE2 = 0;
  2235  000F20  9496               	bcf	3990,2,c	;volatile
  2236                           
  2237                           ;nxlcd.c: 58: TRISEbits.TRISE0 = 0;
  2238  000F22  9096               	bcf	3990,0,c	;volatile
  2239                           
  2240                           ;nxlcd.c: 59: TRISEbits.TRISE1 = 0;
  2241  000F24  9296               	bcf	3990,1,c	;volatile
  2242                           
  2243                           ;nxlcd.c: 60: LATEbits.LATE2 = 0;
  2244  000F26  948D               	bcf	3981,2,c	;volatile
  2245                           
  2246                           ;nxlcd.c: 61: LATEbits.LATE0 = 0;
  2247  000F28  908D               	bcf	3981,0,c	;volatile
  2248                           
  2249                           ;nxlcd.c: 62: LATEbits.LATE1 = 0;
  2250  000F2A  928D               	bcf	3981,1,c	;volatile
  2251                           
  2252                           ;nxlcd.c: 65: DelayPORXLCD();
  2253  000F2C  EC22  F009         	call	_DelayPORXLCD	;wreg free
  2254                           
  2255                           ;nxlcd.c: 67: WriteCmdXLCD(0x30);
  2256  000F30  0E30               	movlw	48
  2257  000F32  EC98  F008         	call	_WriteCmdXLCD
  2258                           
  2259                           ;nxlcd.c: 68: DelayXLCD();
  2260  000F36  EC19  F009         	call	_DelayXLCD	;wreg free
  2261                           
  2262                           ;nxlcd.c: 69: DelayXLCD();
  2263  000F3A  EC19  F009         	call	_DelayXLCD	;wreg free
  2264                           
  2265                           ;nxlcd.c: 70: WriteCmdXLCD(0x30);
  2266  000F3E  0E30               	movlw	48
  2267  000F40  EC98  F008         	call	_WriteCmdXLCD
  2268                           
  2269                           ;nxlcd.c: 71: DelayXLCD();
  2270  000F44  EC19  F009         	call	_DelayXLCD	;wreg free
  2271                           
  2272                           ;nxlcd.c: 72: DelayXLCD();
  2273  000F48  EC19  F009         	call	_DelayXLCD	;wreg free
  2274                           
  2275                           ;nxlcd.c: 73: WriteCmdXLCD(0x32);
  2276  000F4C  0E32               	movlw	50
  2277  000F4E  EC98  F008         	call	_WriteCmdXLCD
  2278  000F52  ECB7  F008         	call	_BusyXLCD	;wreg free
  2279  000F56  0900               	iorlw	0
  2280  000F58  A4D8               	btfss	status,2,c
  2281  000F5A  D7FB               	goto	l99
  2282  000F5C                     u690:
  2283                           
  2284                           ;nxlcd.c: 79: while(BusyXLCD());
  2285  000F5C  ECB7  F008         	call	_BusyXLCD	;wreg free
  2286  000F60  0900               	iorlw	0
  2287  000F62  A4D8               	btfss	status,2,c
  2288  000F64  D7FB               	goto	u690
  2289                           
  2290                           ;nxlcd.c: 80: WriteCmdXLCD(lcdtype);
  2291  000F66  5016               	movf	OpenXLCD@lcdtype,w,c
  2292  000F68  EC98  F008         	call	_WriteCmdXLCD
  2293  000F6C  ECB7  F008         	call	_BusyXLCD	;wreg free
  2294  000F70  0900               	iorlw	0
  2295  000F72  A4D8               	btfss	status,2,c
  2296  000F74  D7FB               	goto	l105
  2297                           
  2298                           ;nxlcd.c: 84: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  2299  000F76  0E08               	movlw	8
  2300  000F78  EC98  F008         	call	_WriteCmdXLCD
  2301  000F7C  ECB7  F008         	call	_BusyXLCD	;wreg free
  2302  000F80  0900               	iorlw	0
  2303  000F82  A4D8               	btfss	status,2,c
  2304  000F84  D7FB               	goto	l108
  2305                           
  2306                           ;nxlcd.c: 86: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  2307  000F86  0E0F               	movlw	15
  2308  000F88  EC98  F008         	call	_WriteCmdXLCD
  2309  000F8C  ECB7  F008         	call	_BusyXLCD	;wreg free
  2310  000F90  0900               	iorlw	0
  2311  000F92  A4D8               	btfss	status,2,c
  2312  000F94  D7FB               	goto	l111
  2313                           
  2314                           ;nxlcd.c: 90: WriteCmdXLCD(0x01);
  2315  000F96  0E01               	movlw	1
  2316  000F98  EC98  F008         	call	_WriteCmdXLCD
  2317  000F9C  ECB7  F008         	call	_BusyXLCD	;wreg free
  2318  000FA0  0900               	iorlw	0
  2319  000FA2  A4D8               	btfss	status,2,c
  2320  000FA4  D7FB               	goto	l114
  2321                           
  2322                           ;nxlcd.c: 94: WriteCmdXLCD(0b00000100);
  2323  000FA6  0E04               	movlw	4
  2324  000FA8  EC98  F008         	call	_WriteCmdXLCD
  2325  000FAC  ECB7  F008         	call	_BusyXLCD	;wreg free
  2326  000FB0  0900               	iorlw	0
  2327  000FB2  A4D8               	btfss	status,2,c
  2328  000FB4  D7FB               	goto	l117
  2329                           
  2330                           ;nxlcd.c: 98: SetDDRamAddr(0x80);
  2331  000FB6  0E80               	movlw	128
  2332  000FB8  EC59  F008         	call	_SetDDRamAddr
  2333  000FBC  0012               	return	
  2334  000FBE                     __end_of_OpenXLCD:
  2335                           	opt stack 0
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           intcon	equ	0xFF2
  2341                           intcon2	equ	0xFF1
  2342                           intcon3	equ	0xFF0
  2343                           wreg	equ	0xFE8
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _WriteCmdXLCD *****************
  2347 ;; Defined at:
  2348 ;;		line 388 in file "nxlcd.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  cmd             1    wreg     unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  cmd             1   20[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0
  2363 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2365 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2366 ;;Total ram usage:        1 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		_DelayFor18TCY
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;;		_OpenXLCD
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text12
  2378  001130                     __ptext12:
  2379                           	opt stack 0
  2380  001130                     _WriteCmdXLCD:
  2381                           	opt stack 28
  2382                           
  2383                           ;incstack = 0
  2384                           ;WriteCmdXLCD@cmd stored from wreg
  2385  001130  6E15               	movwf	WriteCmdXLCD@cmd,c
  2386                           
  2387                           ;nxlcd.c: 403: TRISD &= 0x0f;
  2388  001132  0E0F               	movlw	15
  2389  001134  1695               	andwf	3989,f,c	;volatile
  2390                           
  2391                           ;nxlcd.c: 404: PORTD &= 0x0f;
  2392  001136  0E0F               	movlw	15
  2393  001138  1683               	andwf	3971,f,c	;volatile
  2394                           
  2395                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
  2396  00113A  5015               	movf	WriteCmdXLCD@cmd,w,c
  2397  00113C  0BF0               	andlw	240
  2398  00113E  1283               	iorwf	3971,f,c	;volatile
  2399                           
  2400                           ;nxlcd.c: 411: LATEbits.LATE2 = 0;
  2401  001140  948D               	bcf	3981,2,c	;volatile
  2402                           
  2403                           ;nxlcd.c: 412: LATEbits.LATE0 = 0;
  2404  001142  908D               	bcf	3981,0,c	;volatile
  2405                           
  2406                           ;nxlcd.c: 413: DelayFor18TCY();
  2407  001144  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2408                           
  2409                           ;nxlcd.c: 414: LATEbits.LATE1 = 1;
  2410  001148  828D               	bsf	3981,1,c	;volatile
  2411                           
  2412                           ;nxlcd.c: 415: DelayFor18TCY();
  2413  00114A  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2414                           
  2415                           ;nxlcd.c: 416: LATEbits.LATE1 = 0;
  2416  00114E  928D               	bcf	3981,1,c	;volatile
  2417                           
  2418                           ;nxlcd.c: 418: PORTD &= 0x0f;
  2419  001150  0E0F               	movlw	15
  2420  001152  1683               	andwf	3971,f,c	;volatile
  2421                           
  2422                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
  2423  001154  3815               	swapf	WriteCmdXLCD@cmd,w,c
  2424  001156  0BF0               	andlw	240
  2425  001158  0BF0               	andlw	240
  2426  00115A  1283               	iorwf	3971,f,c	;volatile
  2427                           
  2428                           ;nxlcd.c: 424: DelayFor18TCY();
  2429  00115C  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2430                           
  2431                           ;nxlcd.c: 425: LATEbits.LATE1 = 1;
  2432  001160  828D               	bsf	3981,1,c	;volatile
  2433                           
  2434                           ;nxlcd.c: 426: DelayFor18TCY();
  2435  001162  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2436                           
  2437                           ;nxlcd.c: 427: LATEbits.LATE1 = 0;
  2438  001166  928D               	bcf	3981,1,c	;volatile
  2439                           
  2440                           ;nxlcd.c: 429: TRISD |= 0xf0;
  2441  001168  0EF0               	movlw	240
  2442  00116A  1295               	iorwf	3989,f,c	;volatile
  2443  00116C  0012               	return	
  2444  00116E                     __end_of_WriteCmdXLCD:
  2445                           	opt stack 0
  2446                           tblptru	equ	0xFF8
  2447                           tblptrh	equ	0xFF7
  2448                           tblptrl	equ	0xFF6
  2449                           tablat	equ	0xFF5
  2450                           intcon	equ	0xFF2
  2451                           intcon2	equ	0xFF1
  2452                           intcon3	equ	0xFF0
  2453                           wreg	equ	0xFE8
  2454                           status	equ	0xFD8
  2455                           
  2456 ;; *************** function _SetDDRamAddr *****************
  2457 ;; Defined at:
  2458 ;;		line 171 in file "nxlcd.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  DDaddr          1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  DDaddr          1   20[COMRAM] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0
  2473 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2475 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    2
  2479 ;; This function calls:
  2480 ;;		_DelayFor18TCY
  2481 ;; This function is called by:
  2482 ;;		_OpenXLCD
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text13
  2487  0010B2                     __ptext13:
  2488                           	opt stack 0
  2489  0010B2                     _SetDDRamAddr:
  2490                           	opt stack 27
  2491                           
  2492                           ;incstack = 0
  2493                           ;SetDDRamAddr@DDaddr stored from wreg
  2494  0010B2  6E15               	movwf	SetDDRamAddr@DDaddr,c
  2495                           
  2496                           ;nxlcd.c: 186: TRISD &= 0x0f;
  2497  0010B4  0E0F               	movlw	15
  2498  0010B6  1695               	andwf	3989,f,c	;volatile
  2499                           
  2500                           ;nxlcd.c: 187: PORTD &= 0x0f;
  2501  0010B8  0E0F               	movlw	15
  2502  0010BA  1683               	andwf	3971,f,c	;volatile
  2503                           
  2504                           ;nxlcd.c: 188: PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  2505  0010BC  5015               	movf	SetDDRamAddr@DDaddr,w,c
  2506  0010BE  0980               	iorlw	128
  2507  0010C0  0BF0               	andlw	240
  2508  0010C2  1283               	iorwf	3971,f,c	;volatile
  2509                           
  2510                           ;nxlcd.c: 194: LATEbits.LATE2 = 0;
  2511  0010C4  948D               	bcf	3981,2,c	;volatile
  2512                           
  2513                           ;nxlcd.c: 195: LATEbits.LATE0 = 0;
  2514  0010C6  908D               	bcf	3981,0,c	;volatile
  2515                           
  2516                           ;nxlcd.c: 196: DelayFor18TCY();
  2517  0010C8  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2518                           
  2519                           ;nxlcd.c: 197: LATEbits.LATE1 = 1;
  2520  0010CC  828D               	bsf	3981,1,c	;volatile
  2521                           
  2522                           ;nxlcd.c: 198: DelayFor18TCY();
  2523  0010CE  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2524                           
  2525                           ;nxlcd.c: 199: LATEbits.LATE1 = 0;
  2526  0010D2  928D               	bcf	3981,1,c	;volatile
  2527                           
  2528                           ;nxlcd.c: 201: PORTD &= 0x0f;
  2529  0010D4  0E0F               	movlw	15
  2530  0010D6  1683               	andwf	3971,f,c	;volatile
  2531                           
  2532                           ;nxlcd.c: 202: PORTD |= ((DDaddr<<4)&0xf0);
  2533  0010D8  3815               	swapf	SetDDRamAddr@DDaddr,w,c
  2534  0010DA  0BF0               	andlw	240
  2535  0010DC  0BF0               	andlw	240
  2536  0010DE  1283               	iorwf	3971,f,c	;volatile
  2537                           
  2538                           ;nxlcd.c: 207: DelayFor18TCY();
  2539  0010E0  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2540                           
  2541                           ;nxlcd.c: 208: LATEbits.LATE1 = 1;
  2542  0010E4  828D               	bsf	3981,1,c	;volatile
  2543                           
  2544                           ;nxlcd.c: 209: DelayFor18TCY();
  2545  0010E6  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2546                           
  2547                           ;nxlcd.c: 210: LATEbits.LATE1 = 0;
  2548  0010EA  928D               	bcf	3981,1,c	;volatile
  2549                           
  2550                           ;nxlcd.c: 212: TRISD |= 0xf0;
  2551  0010EC  0EF0               	movlw	240
  2552  0010EE  1295               	iorwf	3989,f,c	;volatile
  2553  0010F0  0012               	return	
  2554  0010F2                     __end_of_SetDDRamAddr:
  2555                           	opt stack 0
  2556                           tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           intcon	equ	0xFF2
  2561                           intcon2	equ	0xFF1
  2562                           intcon3	equ	0xFF0
  2563                           wreg	equ	0xFE8
  2564                           status	equ	0xFD8
  2565                           
  2566 ;; *************** function _DelayXLCD *****************
  2567 ;; Defined at:
  2568 ;;		line 22 in file "nxlcd.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2584 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2585 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2586 ;;Total ram usage:        1 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    1
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_OpenXLCD
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text14
  2597  001232                     __ptext14:
  2598                           	opt stack 0
  2599  001232                     _DelayXLCD:
  2600                           	opt stack 28
  2601                           
  2602                           ;nxlcd.c: 24: _delay((unsigned long)((5)*(20000000/4000.0)));
  2603                           
  2604                           ;incstack = 0
  2605  001232  0E21               	movlw	33
  2606  001234  6E15               	movwf	??_DelayXLCD& (0+255),c
  2607  001236  0E76               	movlw	118
  2608  001238                     u1207:
  2609  001238  2EE8               	decfsz	wreg,f,c
  2610  00123A  D7FE               	bra	u1207
  2611  00123C  2E15               	decfsz	??_DelayXLCD& (0+255),f,c
  2612  00123E  D7FC               	bra	u1207
  2613  001240  D000               	nop2	
  2614  001242  0012               	return		;funcret
  2615  001244                     __end_of_DelayXLCD:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           intcon	equ	0xFF2
  2622                           intcon2	equ	0xFF1
  2623                           intcon3	equ	0xFF0
  2624                           wreg	equ	0xFE8
  2625                           status	equ	0xFD8
  2626                           
  2627 ;; *************** function _DelayPORXLCD *****************
  2628 ;; Defined at:
  2629 ;;		line 17 in file "nxlcd.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2645 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2646 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2647 ;;Total ram usage:        1 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    1
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_OpenXLCD
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text15
  2658  001244                     __ptext15:
  2659                           	opt stack 0
  2660  001244                     _DelayPORXLCD:
  2661                           	opt stack 28
  2662                           
  2663                           ;nxlcd.c: 19: _delay((unsigned long)((15)*(20000000/4000.0)));
  2664                           
  2665                           ;incstack = 0
  2666  001244  0E62               	movlw	98
  2667  001246  6E15               	movwf	??_DelayPORXLCD& (0+255),c
  2668  001248  0E66               	movlw	102
  2669  00124A                     u1217:
  2670  00124A  2EE8               	decfsz	wreg,f,c
  2671  00124C  D7FE               	bra	u1217
  2672  00124E  2E15               	decfsz	??_DelayPORXLCD& (0+255),f,c
  2673  001250  D7FC               	bra	u1217
  2674  001252  0012               	return		;funcret
  2675  001254                     __end_of_DelayPORXLCD:
  2676                           	opt stack 0
  2677                           tblptru	equ	0xFF8
  2678                           tblptrh	equ	0xFF7
  2679                           tblptrl	equ	0xFF6
  2680                           tablat	equ	0xFF5
  2681                           intcon	equ	0xFF2
  2682                           intcon2	equ	0xFF1
  2683                           intcon3	equ	0xFF0
  2684                           wreg	equ	0xFE8
  2685                           status	equ	0xFD8
  2686                           
  2687 ;; *************** function _BusyXLCD *****************
  2688 ;; Defined at:
  2689 ;;		line 227 in file "nxlcd.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;		None
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  1    wreg      unsigned char 
  2696 ;; Registers used:
  2697 ;;		wreg, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2703 ;;      Params:         0       0       0       0       0       0       0       0       0
  2704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2706 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2707 ;;Total ram usage:        0 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    2
  2710 ;; This function calls:
  2711 ;;		_DelayFor18TCY
  2712 ;; This function is called by:
  2713 ;;		_OpenXLCD
  2714 ;;		_putsXLCD
  2715 ;;		_putrsXLCD
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text16
  2720  00116E                     __ptext16:
  2721                           	opt stack 0
  2722  00116E                     _BusyXLCD:
  2723                           	opt stack 27
  2724                           
  2725                           ;nxlcd.c: 229: LATEbits.LATE2 = 1;
  2726                           
  2727                           ;incstack = 0
  2728  00116E  848D               	bsf	3981,2,c	;volatile
  2729                           
  2730                           ;nxlcd.c: 230: LATEbits.LATE0 = 0;
  2731  001170  908D               	bcf	3981,0,c	;volatile
  2732                           
  2733                           ;nxlcd.c: 231: DelayFor18TCY();
  2734  001172  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2735                           
  2736                           ;nxlcd.c: 232: LATEbits.LATE1 = 1;
  2737  001176  828D               	bsf	3981,1,c	;volatile
  2738                           
  2739                           ;nxlcd.c: 233: DelayFor18TCY();
  2740  001178  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2741                           
  2742                           ;nxlcd.c: 249: if(PORTD&0x80)
  2743  00117C  AE83               	btfss	3971,7,c	;volatile
  2744  00117E  D00A               	goto	l128
  2745                           
  2746                           ;nxlcd.c: 253: {
  2747                           ;nxlcd.c: 254: LATEbits.LATE1 = 0;
  2748  001180  928D               	bcf	3981,1,c	;volatile
  2749                           
  2750                           ;nxlcd.c: 255: DelayFor18TCY();
  2751  001182  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2752                           
  2753                           ;nxlcd.c: 256: LATEbits.LATE1 = 1;
  2754  001186  828D               	bsf	3981,1,c	;volatile
  2755                           
  2756                           ;nxlcd.c: 257: DelayFor18TCY();
  2757  001188  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2758                           
  2759                           ;nxlcd.c: 258: LATEbits.LATE1 = 0;
  2760  00118C  928D               	bcf	3981,1,c	;volatile
  2761                           
  2762                           ;nxlcd.c: 259: LATEbits.LATE2 = 0;
  2763  00118E  948D               	bcf	3981,2,c	;volatile
  2764                           
  2765                           ;nxlcd.c: 260: return 1;
  2766  001190  0E01               	movlw	1
  2767                           
  2768                           ;nxlcd.c: 261: }
  2769  001192  0012               	return	
  2770  001194                     l128:
  2771                           
  2772                           ;nxlcd.c: 262: else
  2773                           ;nxlcd.c: 263: {
  2774                           ;nxlcd.c: 264: LATEbits.LATE1 = 0;
  2775  001194  928D               	bcf	3981,1,c	;volatile
  2776                           
  2777                           ;nxlcd.c: 265: DelayFor18TCY();
  2778  001196  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2779                           
  2780                           ;nxlcd.c: 266: LATEbits.LATE1 = 1;
  2781  00119A  828D               	bsf	3981,1,c	;volatile
  2782                           
  2783                           ;nxlcd.c: 267: DelayFor18TCY();
  2784  00119C  EC2A  F009         	call	_DelayFor18TCY	;wreg free
  2785                           
  2786                           ;nxlcd.c: 268: LATEbits.LATE1 = 0;
  2787  0011A0  928D               	bcf	3981,1,c	;volatile
  2788                           
  2789                           ;nxlcd.c: 269: LATEbits.LATE2 = 0;
  2790  0011A2  948D               	bcf	3981,2,c	;volatile
  2791                           
  2792                           ;nxlcd.c: 270: return 0;
  2793  0011A4  0E00               	movlw	0
  2794  0011A6  0012               	return	
  2795  0011A8                     __end_of_BusyXLCD:
  2796                           	opt stack 0
  2797                           tblptru	equ	0xFF8
  2798                           tblptrh	equ	0xFF7
  2799                           tblptrl	equ	0xFF6
  2800                           tablat	equ	0xFF5
  2801                           intcon	equ	0xFF2
  2802                           intcon2	equ	0xFF1
  2803                           intcon3	equ	0xFF0
  2804                           wreg	equ	0xFE8
  2805                           status	equ	0xFD8
  2806                           
  2807 ;; *************** function _DelayFor18TCY *****************
  2808 ;; Defined at:
  2809 ;;		line 12 in file "nxlcd.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2823 ;;      Params:         0       0       0       0       0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_SetDDRamAddr
  2834 ;;		_BusyXLCD
  2835 ;;		_WriteCmdXLCD
  2836 ;;		_WriteDataXLCD
  2837 ;;		_SetCGRamAddr
  2838 ;;		_ReadAddrXLCD
  2839 ;;		_ReadDataXLCD
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text17
  2844  001254                     __ptext17:
  2845                           	opt stack 0
  2846  001254                     _DelayFor18TCY:
  2847                           	opt stack 27
  2848                           
  2849                           ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2850                           
  2851                           ;incstack = 0
  2852  001254  0E21               	movlw	33
  2853  001256                     u1227:
  2854  001256  2EE8               	decfsz	wreg,f,c
  2855  001258  D7FE               	bra	u1227
  2856  00125A  F000               	nop	
  2857  00125C  0012               	return		;funcret
  2858  00125E                     __end_of_DelayFor18TCY:
  2859                           	opt stack 0
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           intcon	equ	0xFF2
  2865                           intcon2	equ	0xFF1
  2866                           intcon3	equ	0xFF0
  2867                           wreg	equ	0xFE8
  2868                           status	equ	0xFD8
  2869                           
  2870 ;; *************** function _HighPriorityISR *****************
  2871 ;; Defined at:
  2872 ;;		line 15 in file "main.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2888 ;;      Temps:         20       0       0       0       0       0       0       0       0
  2889 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2890 ;;Total ram usage:       20 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		Interrupt level 2
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	intcode
  2900  000008                     __pintcode:
  2901                           	opt stack 0
  2902  000008                     _HighPriorityISR:
  2903                           	opt stack 27
  2904                           
  2905                           ;incstack = 0
  2906  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2907  00000A  ED7C  F006         	call	int_func,f	;refresh shadow registers
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           intcon	equ	0xFF2
  2913                           intcon2	equ	0xFF1
  2914                           intcon3	equ	0xFF0
  2915                           wreg	equ	0xFE8
  2916                           status	equ	0xFD8
  2917                           
  2918                           	psect	intcode_body
  2919  000CF8                     __pintcode_body:
  2920                           	opt stack 27
  2921  000CF8                     int_func:
  2922                           	opt stack 27
  2923  000CF8  0006               	pop		; remove dummy address from shadow register refresh
  2924  000CFA  CFFA F003          	movff	pclath,??_HighPriorityISR+2
  2925  000CFE  CFFB F004          	movff	pclatu,??_HighPriorityISR+3
  2926  000D02  CFE9 F005          	movff	fsr0l,??_HighPriorityISR+4
  2927  000D06  CFEA F006          	movff	fsr0h,??_HighPriorityISR+5
  2928  000D0A  CFE1 F007          	movff	fsr1l,??_HighPriorityISR+6
  2929  000D0E  CFE2 F008          	movff	fsr1h,??_HighPriorityISR+7
  2930  000D12  CFD9 F009          	movff	fsr2l,??_HighPriorityISR+8
  2931  000D16  CFDA F00A          	movff	fsr2h,??_HighPriorityISR+9
  2932  000D1A  CFF3 F00B          	movff	prodl,??_HighPriorityISR+10
  2933  000D1E  CFF4 F00C          	movff	prodh,??_HighPriorityISR+11
  2934  000D22  CFF6 F00D          	movff	tblptrl,??_HighPriorityISR+12
  2935  000D26  CFF7 F00E          	movff	tblptrh,??_HighPriorityISR+13
  2936  000D2A  CFF8 F00F          	movff	tblptru,??_HighPriorityISR+14
  2937  000D2E  CFF5 F010          	movff	tablat,??_HighPriorityISR+15
  2938  000D32  C041  F011         	movff	btemp,??_HighPriorityISR+16
  2939  000D36  C042  F012         	movff	btemp+1,??_HighPriorityISR+17
  2940  000D3A  C043  F013         	movff	btemp+2,??_HighPriorityISR+18
  2941  000D3E  C044  F014         	movff	btemp+3,??_HighPriorityISR+19
  2942                           
  2943                           ;main.c: 16: INTCONbits.TMR0IF = 0;
  2944  000D42  94F2               	bcf	intcon,2,c	;volatile
  2945                           
  2946                           ;main.c: 17: ADCON0bits.GO_DONE = 1;
  2947  000D44  82C2               	bsf	4034,1,c	;volatile
  2948                           
  2949                           ;main.c: 18: valorconv = 256 * ADRESH + ADRESL;
  2950  000D46  50C4               	movf	4036,w,c	;volatile
  2951  000D48  6E02               	movwf	(??_HighPriorityISR+1)& (0+255),c
  2952  000D4A  6A01               	clrf	??_HighPriorityISR& (0+255),c
  2953  000D4C  50C3               	movf	4035,w,c	;volatile
  2954  000D4E  2401               	addwf	??_HighPriorityISR,w,c
  2955  000D50  0100               	movlb	0	; () banked
  2956  000D52  6F6E               	movwf	_valorconv& (0+255),b
  2957  000D54  0E00               	movlw	0
  2958  000D56  2002               	addwfc	??_HighPriorityISR+1,w,c
  2959  000D58  6F6F               	movwf	(_valorconv+1)& (0+255),b
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;main.c: 19: TMR0H = 0xF9;
  2963  000D5A  0EF9               	movlw	249
  2964  000D5C  6ED7               	movwf	4055,c	;volatile
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;main.c: 20: TMR0L = 0x7D;
  2968  000D5E  0E7D               	movlw	125
  2969  000D60  6ED6               	movwf	4054,c	;volatile
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;main.c: 22: contador++;
  2973  000D62  2A40               	incf	_contador,f,c
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;main.c: 23: if(contador == 50){
  2977  000D64  0E32               	movlw	50
  2978  000D66  1840               	xorwf	_contador,w,c
  2979  000D68  A4D8               	btfss	status,2,c
  2980  000D6A  D002               	goto	i2l61
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;main.c: 24: contador = 0;
  2984  000D6C  0E00               	movlw	0
  2985  000D6E  6E40               	movwf	_contador,c
  2986  000D70                     i2l61:
  2987                           
  2988                           ; BSR set to: 0
  2989                           
  2990                           ; BSR set to: 0
  2991  000D70  C014  F044         	movff	??_HighPriorityISR+19,btemp+3
  2992  000D74  C013  F043         	movff	??_HighPriorityISR+18,btemp+2
  2993  000D78  C012  F042         	movff	??_HighPriorityISR+17,btemp+1
  2994  000D7C  C011  F041         	movff	??_HighPriorityISR+16,btemp
  2995  000D80  C010  FFF5         	movff	??_HighPriorityISR+15,tablat
  2996  000D84  C00F  FFF8         	movff	??_HighPriorityISR+14,tblptru
  2997  000D88  C00E  FFF7         	movff	??_HighPriorityISR+13,tblptrh
  2998  000D8C  C00D  FFF6         	movff	??_HighPriorityISR+12,tblptrl
  2999  000D90  C00C  FFF4         	movff	??_HighPriorityISR+11,prodh
  3000  000D94  C00B  FFF3         	movff	??_HighPriorityISR+10,prodl
  3001  000D98  C00A  FFDA         	movff	??_HighPriorityISR+9,fsr2h
  3002  000D9C  C009  FFD9         	movff	??_HighPriorityISR+8,fsr2l
  3003  000DA0  C008  FFE2         	movff	??_HighPriorityISR+7,fsr1h
  3004  000DA4  C007  FFE1         	movff	??_HighPriorityISR+6,fsr1l
  3005  000DA8  C006  FFEA         	movff	??_HighPriorityISR+5,fsr0h
  3006  000DAC  C005  FFE9         	movff	??_HighPriorityISR+4,fsr0l
  3007  000DB0  C004  FFFB         	movff	??_HighPriorityISR+3,pclatu
  3008  000DB4  C003  FFFA         	movff	??_HighPriorityISR+2,pclath
  3009  000DB8  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3010  000DBA  0011               	retfie		f
  3011  000DBC                     __end_of_HighPriorityISR:
  3012                           	opt stack 0
  3013                           pclatu	equ	0xFFB
  3014                           pclath	equ	0xFFA
  3015                           tblptru	equ	0xFF8
  3016                           tblptrh	equ	0xFF7
  3017                           tblptrl	equ	0xFF6
  3018                           tablat	equ	0xFF5
  3019                           prodh	equ	0xFF4
  3020                           prodl	equ	0xFF3
  3021                           intcon	equ	0xFF2
  3022                           intcon2	equ	0xFF1
  3023                           intcon3	equ	0xFF0
  3024                           fsr0h	equ	0xFEA
  3025                           fsr0l	equ	0xFE9
  3026                           wreg	equ	0xFE8
  3027                           fsr1h	equ	0xFE2
  3028                           fsr1l	equ	0xFE1
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           pclatu	equ	0xFFB
  3033                           pclath	equ	0xFFA
  3034                           tblptru	equ	0xFF8
  3035                           tblptrh	equ	0xFF7
  3036                           tblptrl	equ	0xFF6
  3037                           tablat	equ	0xFF5
  3038                           prodh	equ	0xFF4
  3039                           prodl	equ	0xFF3
  3040                           intcon	equ	0xFF2
  3041                           intcon2	equ	0xFF1
  3042                           intcon3	equ	0xFF0
  3043                           fsr0h	equ	0xFEA
  3044                           fsr0l	equ	0xFE9
  3045                           wreg	equ	0xFE8
  3046                           fsr1h	equ	0xFE2
  3047                           fsr1l	equ	0xFE1
  3048                           fsr2h	equ	0xFDA
  3049                           fsr2l	equ	0xFD9
  3050                           status	equ	0xFD8
  3051                           
  3052                           	psect	rparam
  3053  0000                     pclatu	equ	0xFFB
  3054                           pclath	equ	0xFFA
  3055                           tblptru	equ	0xFF8
  3056                           tblptrh	equ	0xFF7
  3057                           tblptrl	equ	0xFF6
  3058                           tablat	equ	0xFF5
  3059                           prodh	equ	0xFF4
  3060                           prodl	equ	0xFF3
  3061                           intcon	equ	0xFF2
  3062                           intcon2	equ	0xFF1
  3063                           intcon3	equ	0xFF0
  3064                           fsr0h	equ	0xFEA
  3065                           fsr0l	equ	0xFE9
  3066                           wreg	equ	0xFE8
  3067                           fsr1h	equ	0xFE2
  3068                           fsr1l	equ	0xFE1
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073                           	psect	temp
  3074  000041                     btemp:
  3075                           	opt stack 0
  3076  000041                     	ds	1
  3077  0000                     int$flags	set	btemp
  3078  0000                     wtemp6	set	btemp+1
  3079                           pclatu	equ	0xFFB
  3080                           pclath	equ	0xFFA
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           intcon	equ	0xFF2
  3088                           intcon2	equ	0xFF1
  3089                           intcon3	equ	0xFF0
  3090                           fsr0h	equ	0xFEA
  3091                           fsr0l	equ	0xFE9
  3092                           wreg	equ	0xFE8
  3093                           fsr1h	equ	0xFE2
  3094                           fsr1l	equ	0xFE1
  3095                           fsr2h	equ	0xFDA
  3096                           fsr2l	equ	0xFD9
  3097                           status	equ	0xFD8


Data Sizes:
    Strings     22
    Constant    0
    Data        2
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      64
    BANK0           160     14      18
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    _putsXLCD->_WriteDataXLCD
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _HighPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriorityISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    8522
                                             61 COMRAM     2     2      0
                                              0 BANK0     14    14      0
                           _OpenXLCD
                       _WriteCmdXLCD
                            ___aldiv
                            ___almod
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     317
                                             21 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                             20 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2486
                                             28 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     328
                                             46 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2992
                                             31 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2388
                                             20 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8     448
                                             20 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             20 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     110
                                             21 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                             20 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      44
                                             20 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _HighPriorityISR                                     20    20      0       0
                                              0 COMRAM    20    20      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   ___aldiv
   ___almod
   ___awdiv
   ___awmod
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY

 _HighPriorityISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      12       5       11.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      40       1       68.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      20        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 21 18:05:26 2023

                      l67 0920                        l99 0F52              ___awdiv@sign 001A  
                     l111 0F8C                       l105 0F6C                       l114 0F9C  
                     l108 0F7C                       l220 0C82                       l117 0FAC  
                     l230 0E9A                       l223 0CC2                       l128 1194  
                     l224 0CD0                       l216 0C48                       l232 0EB8  
                     l225 0CE6                       l217 0C60                       l233 0EAC  
                     l145 11C8                       l146 11AA                       l219 0C8E  
                     l331 1000                       l236 0EE0                       l332 0FF8  
                     l237 0EEE                       l229 0E86                       l341 1056  
                     l238 0F04                       l350 10A8                       l342 1062  
                     l335 1020                       l336 102A                       l328 0FD2  
                     l344 1078                       l337 1038                       l329 0FE2  
                     l345 1070                       l348 1090                       l460 0BE2  
                     l349 109A                       l381 0E40                       l461 0BF2  
                     l382 0E36                       l454 0B60                       l375 0DE4  
                     l376 0DDA                       l456 0B88                       l457 0BBA  
                     l378 0E18                       l458 0BCA                       l379 0E02  
                     l483 0B0A                       l475 0A70                       l484 0AFE  
                     l477 0AE6                       l486 0B26                       l478 0AD6  
                     _PR2 000FCB                       u620 0DCC                       u810 0C92  
                     u660 0E4A                       u901 0B48                       u921 0B70  
                     u690 0F5C                       u870 0EBC   __end_of_HighPriorityISR 0DBC  
                     u990 1004     __size_of_WriteCmdXLCD 003E              ___awmod@sign 001A  
                     wreg 000FE8              __CFG_FOSC$HS 000000              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      STR_1 0811                      STR_2 0801  
                    STR_3 0809                      u1100 0A8E                      u1105 0A86  
                    u1050 107C                      u1140 0B10                      u1207 1238  
                    u1217 124A                      u1081 0A54                      u1227 1256  
                    u1197 08E2             __CFG_DEBUG$ON 000000                      i2l61 0D70  
                    _main 0818              ___ftpack@arg 0015                      _duty 0070  
            ___ftpack@exp 0018                      fsr0h 000FEA                      fsr1h 000FE2  
                    fsr2h 000FDA                      fsr0l 000FE9                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 0041    __size_of_WriteDataXLCD 003E  
                    prodh 000FF4                      prodl 000FF3                      start 000E  
           __CFG_MCLRE$ON 000000              ___ftmul@cntr 002D              ___param_bank 000000  
            ___ftmul@sign 002E              ___fttol@exp1 003D              ___fttol@lval 0039  
            _WriteCmdXLCD 1130           __end_of___aldiv 0CF8           __end_of___almod 0F16  
           ?_SetDDRamAddr 0001                     ?_main 0001           __end_of___awdiv 1042  
         __end_of___awmod 10B2           __end_of___ftmul 0C2C           ___awdiv@divisor 0017  
         __end_of___fttol 0B38           ___awdiv@counter 0019                     _TMR0H 000FD7  
                   _TMR0L 000FD6                     _PORTD 000F83                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
           ___ftpack@sign 0019                     pclath 000FFA                     tablat 000FF5  
                   status 000FD8                     wtemp6 0042           __initialization 11DC  
            __end_of_main 0A44          __end_of_BusyXLCD 11A8        __size_of_DelayXLCD 0012  
   __size_of_DelayPORXLCD 0010            ??_SetDDRamAddr 0015          __end_of_OpenXLCD 0FBE  
                  ??_main 003E             ___fttol@sign1 0038             __activetblptr 000001  
           _WriteDataXLCD 10F2          ?_HighPriorityISR 0001                    _ADRESH 000FC4  
                  _ADRESL 000FC3                    _CCPR1L 000FBE          ___awdiv@dividend 0015  
        __end_of___ftpack 0E6A          __end_of___lwtoft 1232              _DelayPORXLCD 1244  
               ??___aldiv 001D                 ??___almod 001D                 ??___awdiv 0019  
               ??___awmod 0019                 ??___ftmul 0026                 ??___fttol 0033  
        ___awdiv@quotient 001B           ___awmod@divisor 0017           ___awmod@counter 0019  
          ?_WriteDataXLCD 0001     ___ftmul@f3_as_product 002A             main@resultado 0068  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8          __end_of_putsXLCD 11DC         __end_of_DelayXLCD 1244  
              __accesstop 0060   __end_of__initialization 11FC             ___rparam_used 000001  
              ___ftmul@f1 0020                ___ftmul@f2 0023                ___fttol@f1 002F  
          __pcstackCOMRAM 0001              __pidataBANK0 125E                ___lwtoft@c 001D  
  __size_of_DelayFor18TCY 000A                __pbssBANK0 006E                 ?_BusyXLCD 0001  
         WriteCmdXLCD@cmd 0015      __end_of_SetDDRamAddr 10F2                 ?_OpenXLCD 0001  
       WriteDataXLCD@data 0015           ??_WriteDataXLCD 0015                 ?___ftpack 0015  
               ?___lwtoft 001D                ??_BusyXLCD 0015                ??_OpenXLCD 0016  
                 __Hparam 0000                   __Lparam 0000                   ___aldiv 0C2C  
                 ___almod 0E6A                   ___awdiv 0FBE             _DelayFor18TCY 1254  
                 ___awmod 1042                   ___ftmul 0B38                   ___fttol 0A44  
               ?_putsXLCD 0016              __psmallconst 0800                   __pcinit 11DC  
              ??___ftpack 001A                   __ramtop 0800                   __ptext0 0818  
                 __ptext1 11A8                   __ptext2 10F2                   __ptext3 120E  
                 __ptext4 0A44                   __ptext5 0B38                   __ptext6 0DBC  
                 __ptext7 1042                   __ptext8 0FBE                   __ptext9 0E6A  
              ??___lwtoft 0020                 _T0CONbits 000FD5                 _T2CONbits 000FCA  
        ___awmod@dividend 0015          ___aldiv@dividend 0015                   main@dez 0064  
                 main@aux 006C                   main@mil 0060                   main@uni 0066  
          __pintcode_body 0CF8      end_of_initialization 11FC                   int_func 0CF8  
          ?_DelayFor18TCY 0001          ___aldiv@quotient 001F                ??_putsXLCD 0018  
               _TRISEbits 000F96     __size_of_SetDDRamAddr 0040  __size_of_HighPriorityISR 0DB4  
             _CCP1CONbits 000FBD               _CCP2CONbits 000FBA                 _DelayXLCD 1232  
             ___ftmul@exp 0029              _SetDDRamAddr 10B2        SetDDRamAddr@DDaddr 0015  
     start_initialization 11DC         __size_of_BusyXLCD 003A                ?_DelayXLCD 0001  
         ??_DelayFor18TCY 0015         __size_of_OpenXLCD 00A8             ?_WriteCmdXLCD 0001  
             __pdataBANK0 0070         __size_of___ftpack 00AE               __pbssCOMRAM 0040  
       __size_of___lwtoft 0024             __pcstackBANK0 0060         ??_HighPriorityISR 0001  
          putsXLCD@buffer 0016                 __pintcode 0008                  ?___aldiv 0015  
          ??_WriteCmdXLCD 0015                  ?___almod 0015                  ?___awdiv 0015  
                ?___awmod 0015                  ?___ftmul 0020                  ?___fttol 002F  
        ___almod@dividend 0015         __size_of_putsXLCD 0034     __end_of_WriteDataXLCD 1130  
             __smallconst 0800           ___aldiv@divisor 0019           ___aldiv@counter 001D  
                _LATEbits 000F8D               ??_DelayXLCD 0015                  _IPR1bits 000F9F  
                _PIE1bits 000F9D             ?_DelayPORXLCD 0001                  _PIR1bits 000F9E  
         OpenXLCD@lcdtype 0016                  _RCONbits 000FD0                 _valorconv 006E  
              _ADCON0bits 000FC2               _INTCON2bits 000FF1               _INTCON3bits 000FF0  
                _BusyXLCD 116E            ??_DelayPORXLCD 0015                  _OpenXLCD 0F16  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___aldiv 00CC          __size_of___almod 00AC          __size_of___awdiv 0084  
        __size_of___awmod 0070          __size_of___ftmul 00F4          __size_of___fttol 00F4  
                ___ftpack 0DBC                  ___lwtoft 120E                  __ptext10 0C2C  
                __ptext11 0F16                  __ptext12 1130                  __ptext13 10B2  
                __ptext14 1232                  __ptext15 1244                  __ptext16 116E  
                __ptext17 1254      __end_of_WriteCmdXLCD 116E           ___almod@divisor 0019  
                _contador 0040           ___almod@counter 001D             __size_of_main 022C  
                int$flags 0041                  _putsXLCD 11A8                  main@cent 0062  
   __CFG_CPUDIV$OSC1_PLL2 000000                _INTCONbits 000FF2           _HighPriorityISR 0008  
                intlevel2 0000     __end_of_DelayFor18TCY 125E      __end_of_DelayPORXLCD 1254  
            ___aldiv@sign 001E              ___almod@sign 001E  
