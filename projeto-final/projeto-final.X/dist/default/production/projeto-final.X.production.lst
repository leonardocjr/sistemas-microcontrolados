

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 28 18:24:08 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _LATEbits	set	3981
    71  0000                     _TRISEbits	set	3990
    72  0000                     _TRISD	set	3989
    73  0000                     _PORTD	set	3971
    74  0000                     _CCP2CONbits	set	4026
    75  0000                     _ADCON2	set	4032
    76  0000                     _ADCON1	set	4033
    77  0000                     _TRISAbits	set	3986
    78  0000                     _T0CON	set	4053
    79  0000                     _INTCON2bits	set	4081
    80  0000                     _INTCON3bits	set	4080
    81  0000                     _RCONbits	set	4048
    82  0000                     _IPR1bits	set	3999
    83  0000                     _PIE1bits	set	3997
    84  0000                     _CCPR1L	set	4030
    85  0000                     _PR2	set	4043
    86  0000                     _T2CONbits	set	4042
    87  0000                     _CCP1CONbits	set	4029
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISC	set	3988
    90  0000                     _TRISA	set	3986
    91  0000                     _ADRESL	set	4035
    92  0000                     _PIR1bits	set	3998
    93  0000                     _ADCON0bits	set	4034
    94  0000                     _TMR0L	set	4054
    95  0000                     _INTCONbits	set	4082
    96  0000                     _ADRESH	set	4036
    97                           
    98                           	psect	smallconst
    99  000800                     __psmallconst:
   100                           	opt stack 0
   101  000800  00                 	db	0
   102  000801                     STR_1:
   103                           
   104                           ; BSR set to: 0
   105  000801  54                 	db	84	;'T'
   106  000802  61                 	db	97	;'a'
   107  000803  3A                 	db	58	;':'
   108  000804  00                 	db	0
   109  000805                     STR_2:
   110                           
   111                           ; BSR set to: 0
   112  000805  54                 	db	84	;'T'
   113  000806  72                 	db	114	;'r'
   114  000807  3A                 	db	58	;':'
   115  000808  00                 	db	0
   116                           
   117                           ; #config settings
   118  000809  00                 	db	0	; dummy byte at the end
   119  0000                     
   120                           	psect	cinit
   121  00122C                     __pcinit:
   122                           	opt stack 0
   123  00122C                     start_initialization:
   124                           	opt stack 0
   125  00122C                     __initialization:
   126                           	opt stack 0
   127                           
   128                           ; Clear objects allocated to BANK0 (11 bytes)
   129  00122C  EE00  F09A         	lfsr	0,__pbssBANK0
   130  001230  0E0B               	movlw	11
   131  001232                     clear_0:
   132  001232  6AEE               	clrf	postinc0,c
   133  001234  06E8               	decf	wreg,f,c
   134  001236  E1FD               	bnz	clear_0
   135                           
   136                           ; Clear objects allocated to COMRAM (10 bytes)
   137  001238  EE00  F03C         	lfsr	0,__pbssCOMRAM
   138  00123C  0E0A               	movlw	10
   139  00123E                     clear_1:
   140  00123E  6AEE               	clrf	postinc0,c
   141  001240  06E8               	decf	wreg,f,c
   142  001242  E1FD               	bnz	clear_1
   143  001244                     end_of_initialization:
   144                           	opt stack 0
   145  001244                     __end_of__initialization:
   146                           	opt stack 0
   147  001244  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   148  001246  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   149  001248  0E00               	movlw	low (__Lsmallconst shr (0+16))
   150  00124A  6EF8               	movwf	tblptru,c
   151  00124C  0E08               	movlw	high __Lsmallconst
   152  00124E  6EF7               	movwf	tblptrh,c
   153  001250  0100               	movlb	0
   154  001252  EF05  F004         	goto	_main	;jump to C main() function
   155                           tblptru	equ	0xFF8
   156                           tblptrh	equ	0xFF7
   157                           postinc0	equ	0xFEE
   158                           wreg	equ	0xFE8
   159                           
   160                           	psect	bssCOMRAM
   161  00003C                     __pbssCOMRAM:
   162                           	opt stack 0
   163  00003C                     _temp:
   164                           	opt stack 0
   165  00003C                     	ds	4
   166  000040                     _leiturapotenciometro:
   167                           	opt stack 0
   168  000040                     	ds	2
   169  000042                     _dc:
   170                           	opt stack 0
   171  000042                     	ds	2
   172  000044                     _valorconv:
   173                           	opt stack 0
   174  000044                     	ds	2
   175                           tblptru	equ	0xFF8
   176                           tblptrh	equ	0xFF7
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	bssBANK0
   181  00009A                     __pbssBANK0:
   182                           	opt stack 0
   183  00009A                     _result2:
   184                           	opt stack 0
   185  00009A                     	ds	4
   186  00009E                     _result:
   187                           	opt stack 0
   188  00009E                     	ds	4
   189  0000A2                     _duty:
   190                           	opt stack 0
   191  0000A2                     	ds	2
   192  0000A4                     _contador:
   193                           	opt stack 0
   194  0000A4                     	ds	1
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	cstackBANK0
   201  000060                     __pcstackBANK0:
   202                           	opt stack 0
   203  000060                     ??_LowPriorityISR:
   204                           
   205                           ; 1 bytes @ 0x0
   206  000060                     	ds	23
   207  000077                     ??_DelayPORXLCD:
   208  000077                     ??_DelayXLCD:
   209  000077                     ?___awdiv:
   210                           	opt stack 0
   211  000077                     ?___awmod:
   212                           	opt stack 0
   213  000077                     ?___lldiv:
   214                           	opt stack 0
   215  000077                     ?___llmod:
   216                           	opt stack 0
   217  000077                     SetDDRamAddr@DDaddr:
   218                           	opt stack 0
   219  000077                     WriteCmdXLCD@cmd:
   220                           	opt stack 0
   221  000077                     WriteDataXLCD@data:
   222                           	opt stack 0
   223  000077                     ___awdiv@dividend:
   224                           	opt stack 0
   225  000077                     ___awmod@dividend:
   226                           	opt stack 0
   227  000077                     ___lldiv@dividend:
   228                           	opt stack 0
   229  000077                     ___llmod@dividend:
   230                           	opt stack 0
   231                           
   232                           ; 4 bytes @ 0x17
   233  000077                     	ds	1
   234  000078                     OpenXLCD@lcdtype:
   235                           	opt stack 0
   236  000078                     putsXLCD@buffer:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x18
   240  000078                     	ds	1
   241  000079                     ___awdiv@divisor:
   242                           	opt stack 0
   243  000079                     ___awmod@divisor:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x19
   247  000079                     	ds	1
   248  00007A                     
   249                           ; 1 bytes @ 0x1A
   250  00007A                     	ds	1
   251  00007B                     ___awdiv@counter:
   252                           	opt stack 0
   253  00007B                     ___awmod@counter:
   254                           	opt stack 0
   255  00007B                     ___lldiv@divisor:
   256                           	opt stack 0
   257  00007B                     ___llmod@divisor:
   258                           	opt stack 0
   259                           
   260                           ; 4 bytes @ 0x1B
   261  00007B                     	ds	1
   262  00007C                     ___awdiv@sign:
   263                           	opt stack 0
   264  00007C                     ___awmod@sign:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x1C
   268  00007C                     	ds	1
   269  00007D                     ___awdiv@quotient:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x1D
   273  00007D                     	ds	2
   274  00007F                     ___llmod@counter:
   275                           	opt stack 0
   276  00007F                     ___lldiv@quotient:
   277                           	opt stack 0
   278                           
   279                           ; 4 bytes @ 0x1F
   280  00007F                     	ds	4
   281  000083                     ___lldiv@counter:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x23
   285  000083                     	ds	1
   286  000084                     ??_main:
   287                           
   288                           ; 1 bytes @ 0x24
   289  000084                     	ds	2
   290  000086                     main@mil:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x26
   294  000086                     	ds	2
   295  000088                     main@cent:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x28
   299  000088                     	ds	2
   300  00008A                     main@dez:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x2A
   304  00008A                     	ds	2
   305  00008C                     main@uni:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x2C
   309  00008C                     	ds	2
   310  00008E                     main@mil2:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x2E
   314  00008E                     	ds	2
   315  000090                     main@cent2:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x30
   319  000090                     	ds	2
   320  000092                     main@dez2:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x32
   324  000092                     	ds	2
   325  000094                     main@uni2:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x34
   329  000094                     	ds	2
   330  000096                     main@aux:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x36
   334  000096                     	ds	2
   335  000098                     main@aux2:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x38
   339  000098                     	ds	2
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345                           	psect	cstackCOMRAM
   346  000001                     __pcstackCOMRAM:
   347                           	opt stack 0
   348  000001                     ??_HighPriorityISR:
   349  000001                     
   350                           ; 1 bytes @ 0x0
   351  000001                     	ds	18
   352  000013                     ?___ftpack:
   353                           	opt stack 0
   354  000013                     ___ftpack@arg:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0x12
   358  000013                     	ds	3
   359  000016                     ___ftpack@exp:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x15
   363  000016                     	ds	1
   364  000017                     ___ftpack@sign:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x16
   368  000017                     	ds	1
   369  000018                     ??___ftpack:
   370                           
   371                           ; 1 bytes @ 0x17
   372  000018                     	ds	3
   373  00001B                     ?___lwtoft:
   374                           	opt stack 0
   375  00001B                     ___lwtoft@c:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x1A
   379  00001B                     	ds	3
   380  00001E                     ?___ftmul:
   381                           	opt stack 0
   382  00001E                     ___ftmul@f1:
   383                           	opt stack 0
   384                           
   385                           ; 3 bytes @ 0x1D
   386  00001E                     	ds	3
   387  000021                     ___ftmul@f2:
   388                           	opt stack 0
   389                           
   390                           ; 3 bytes @ 0x20
   391  000021                     	ds	3
   392  000024                     ??___ftmul:
   393                           
   394                           ; 1 bytes @ 0x23
   395  000024                     	ds	3
   396  000027                     ___ftmul@exp:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x26
   400  000027                     	ds	1
   401  000028                     ___ftmul@f3_as_product:
   402                           	opt stack 0
   403                           
   404                           ; 3 bytes @ 0x27
   405  000028                     	ds	3
   406  00002B                     ___ftmul@cntr:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x2A
   410  00002B                     	ds	1
   411  00002C                     ___ftmul@sign:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x2B
   415  00002C                     	ds	1
   416  00002D                     ?___fttol:
   417                           	opt stack 0
   418  00002D                     ___fttol@f1:
   419                           	opt stack 0
   420                           
   421                           ; 3 bytes @ 0x2C
   422  00002D                     	ds	4
   423  000031                     ??___fttol:
   424                           
   425                           ; 1 bytes @ 0x30
   426  000031                     	ds	5
   427  000036                     ___fttol@sign1:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x35
   431  000036                     	ds	1
   432  000037                     ___fttol@lval:
   433                           	opt stack 0
   434                           
   435                           ; 4 bytes @ 0x36
   436  000037                     	ds	4
   437  00003B                     ___fttol@exp1:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x3A
   441  00003B                     	ds	1
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 50 in file "main.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  aux2            2   56[BANK0 ] int 
   457 ;;  aux             2   54[BANK0 ] int 
   458 ;;  uni2            2   52[BANK0 ] int 
   459 ;;  dez2            2   50[BANK0 ] int 
   460 ;;  cent2           2   48[BANK0 ] int 
   461 ;;  mil2            2   46[BANK0 ] int 
   462 ;;  uni             2   44[BANK0 ] int 
   463 ;;  dez             2   42[BANK0 ] int 
   464 ;;  cent            2   40[BANK0 ] int 
   465 ;;  mil             2   38[BANK0 ] int 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   475 ;;      Params:         0       0       0       0       0       0       0       0       0
   476 ;;      Locals:         0      20       0       0       0       0       0       0       0
   477 ;;      Temps:          0       2       0       0       0       0       0       0       0
   478 ;;      Totals:         0      22       0       0       0       0       0       0       0
   479 ;;Total ram usage:       22 bytes
   480 ;; Hardware stack levels required when called:    7
   481 ;; This function calls:
   482 ;;		_OpenXLCD
   483 ;;		_WriteCmdXLCD
   484 ;;		_WriteDataXLCD
   485 ;;		___awdiv
   486 ;;		___awmod
   487 ;;		___lldiv
   488 ;;		___llmod
   489 ;;		_putsXLCD
   490 ;; This function is called by:
   491 ;;		Startup code after reset
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text0
   496  00080A                     __ptext0:
   497                           	opt stack 0
   498  00080A                     _main:
   499                           	opt stack 24
   500                           
   501                           ;main.c: 51: int mil,cent,aux,dez,uni;
   502                           ;main.c: 52: int mil2,cent2,aux2,dez2,uni2;
   503                           ;main.c: 54: TRISA = 0xFF;
   504                           
   505                           ;incstack = 0
   506  00080A  6892               	setf	3986,c	;volatile
   507                           
   508                           ;main.c: 55: TRISC = 0x00;
   509  00080C  0E00               	movlw	0
   510  00080E  6E94               	movwf	3988,c	;volatile
   511                           
   512                           ;main.c: 56: TRISB = 0XFF;
   513  000810  6893               	setf	3987,c	;volatile
   514                           
   515                           ;main.c: 59: CCP1CONbits.CCP1M3 = 1;
   516  000812  86BD               	bsf	4029,3,c	;volatile
   517                           
   518                           ;main.c: 60: CCP1CONbits.CCP1M2 = 1;
   519  000814  84BD               	bsf	4029,2,c	;volatile
   520                           
   521                           ;main.c: 61: CCP1CONbits.CCP1M1 = 0;
   522  000816  92BD               	bcf	4029,1,c	;volatile
   523                           
   524                           ;main.c: 62: CCP1CONbits.CCP1M0 = 0;
   525  000818  90BD               	bcf	4029,0,c	;volatile
   526                           
   527                           ;main.c: 65: T2CONbits.T2OUTPS3 = 0;
   528  00081A  9CCA               	bcf	4042,6,c	;volatile
   529                           
   530                           ;main.c: 66: T2CONbits.T2OUTPS2 = 0;
   531  00081C  9ACA               	bcf	4042,5,c	;volatile
   532                           
   533                           ;main.c: 67: T2CONbits.T2OUTPS1 = 0;
   534  00081E  98CA               	bcf	4042,4,c	;volatile
   535                           
   536                           ;main.c: 68: T2CONbits.T2OUTPS0 = 0;
   537  000820  96CA               	bcf	4042,3,c	;volatile
   538                           
   539                           ;main.c: 69: T2CONbits.TMR2ON = 1;
   540  000822  84CA               	bsf	4042,2,c	;volatile
   541                           
   542                           ;main.c: 70: T2CONbits.T2CKPS1 = 0;
   543  000824  92CA               	bcf	4042,1,c	;volatile
   544                           
   545                           ;main.c: 71: T2CONbits.T2CKPS0 = 1;
   546  000826  80CA               	bsf	4042,0,c	;volatile
   547                           
   548                           ;main.c: 75: PR2 = 191;
   549  000828  0EBF               	movlw	191
   550  00082A  6ECB               	movwf	4043,c	;volatile
   551                           
   552                           ;main.c: 77: CCPR1L = (char)(duty >> 2);
   553  00082C  C0A2  F084         	movff	_duty,??_main
   554  000830  C0A3  F085         	movff	_duty+1,??_main+1
   555  000834  0100               	movlb	0	; () banked
   556  000836  3585               	rlcf	(??_main+1)& (0+255),w,b
   557  000838  3385               	rrcf	(??_main+1)& (0+255),f,b
   558  00083A  3384               	rrcf	??_main& (0+255),f,b
   559  00083C  3585               	rlcf	(??_main+1)& (0+255),w,b
   560  00083E  3385               	rrcf	(??_main+1)& (0+255),f,b
   561  000840  3384               	rrcf	??_main& (0+255),f,b
   562  000842  5184               	movf	??_main& (0+255),w,b
   563  000844  6EBE               	movwf	4030,c	;volatile
   564                           
   565                           ; BSR set to: 0
   566                           ;main.c: 78: CCP1CONbits.DC1B0 = duty%2;
   567  000846  C0A2  F084         	movff	_duty,??_main
   568  00084A  0E01               	movlw	1
   569  00084C  1784               	andwf	??_main& (0+255),f,b
   570  00084E  3B84               	swapf	??_main& (0+255),f,b
   571  000850  50BD               	movf	4029,w,c	;volatile
   572  000852  1984               	xorwf	??_main& (0+255),w,b
   573  000854  0BEF               	andlw	-17
   574  000856  1984               	xorwf	??_main& (0+255),w,b
   575  000858  6EBD               	movwf	4029,c	;volatile
   576                           
   577                           ; BSR set to: 0
   578                           ;main.c: 79: CCP1CONbits.DC1B1 = (duty >> 1)%2;
   579  00085A  35A3               	rlcf	(_duty+1)& (0+255),w,b
   580  00085C  31A3               	rrcf	(_duty+1)& (0+255),w,b
   581  00085E  6F85               	movwf	(??_main+1)& (0+255),b
   582  000860  31A2               	rrcf	_duty& (0+255),w,b
   583  000862  6F84               	movwf	??_main& (0+255),b
   584  000864  0E01               	movlw	1
   585  000866  1784               	andwf	??_main& (0+255),f,b
   586  000868  3B84               	swapf	??_main& (0+255),f,b
   587  00086A  4784               	rlncf	??_main& (0+255),f,b
   588  00086C  50BD               	movf	4029,w,c	;volatile
   589  00086E  1984               	xorwf	??_main& (0+255),w,b
   590  000870  0BDF               	andlw	-33
   591  000872  1984               	xorwf	??_main& (0+255),w,b
   592  000874  6EBD               	movwf	4029,c	;volatile
   593                           
   594                           ; BSR set to: 0
   595                           ;main.c: 82: PIE1bits.ADIE = 1;
   596  000876  8C9D               	bsf	3997,6,c	;volatile
   597                           
   598                           ; BSR set to: 0
   599                           ;main.c: 83: PIR1bits.ADIF = 0;
   600  000878  9C9E               	bcf	3998,6,c	;volatile
   601                           
   602                           ; BSR set to: 0
   603                           ;main.c: 84: IPR1bits.ADIP = 0;
   604  00087A  9C9F               	bcf	3999,6,c	;volatile
   605                           
   606                           ; BSR set to: 0
   607                           ;main.c: 87: ADCON0bits.CHS3 = 0;
   608  00087C  9AC2               	bcf	4034,5,c	;volatile
   609                           
   610                           ; BSR set to: 0
   611                           ;main.c: 88: ADCON0bits.CHS2 = 0;
   612  00087E  98C2               	bcf	4034,4,c	;volatile
   613                           
   614                           ; BSR set to: 0
   615                           ;main.c: 89: ADCON0bits.CHS1 = 1;
   616  000880  86C2               	bsf	4034,3,c	;volatile
   617                           
   618                           ; BSR set to: 0
   619                           ;main.c: 90: ADCON0bits.CHS0 = 1;
   620  000882  84C2               	bsf	4034,2,c	;volatile
   621                           
   622                           ; BSR set to: 0
   623                           ;main.c: 91: ADCON0bits.ADON = 1;
   624  000884  80C2               	bsf	4034,0,c	;volatile
   625                           
   626                           ; BSR set to: 0
   627                           ;main.c: 94: RCONbits.IPEN = 1;
   628  000886  8ED0               	bsf	4048,7,c	;volatile
   629                           
   630                           ; BSR set to: 0
   631                           ;main.c: 95: INTCONbits.GIEH = 1;
   632  000888  8EF2               	bsf	intcon,7,c	;volatile
   633                           
   634                           ; BSR set to: 0
   635                           ;main.c: 96: INTCONbits.GIEL = 1;
   636  00088A  8CF2               	bsf	intcon,6,c	;volatile
   637                           
   638                           ; BSR set to: 0
   639                           ;main.c: 99: INTCON3bits.INT1IE = 1;
   640  00088C  86F0               	bsf	intcon3,3,c	;volatile
   641                           
   642                           ; BSR set to: 0
   643                           ;main.c: 100: INTCON3bits.INT2IE = 1;
   644  00088E  88F0               	bsf	intcon3,4,c	;volatile
   645                           
   646                           ; BSR set to: 0
   647                           ;main.c: 101: INTCON2bits.INTEDG1 = 0;
   648  000890  9AF1               	bcf	intcon2,5,c	;volatile
   649                           
   650                           ; BSR set to: 0
   651                           ;main.c: 102: INTCON2bits.INTEDG2 = 0;
   652  000892  98F1               	bcf	intcon2,4,c	;volatile
   653                           
   654                           ; BSR set to: 0
   655                           ;main.c: 103: INTCON3bits.INT1IF = 0;
   656  000894  90F0               	bcf	intcon3,0,c	;volatile
   657                           
   658                           ; BSR set to: 0
   659                           ;main.c: 104: INTCON3bits.INT2IF = 0;
   660  000896  92F0               	bcf	intcon3,1,c	;volatile
   661                           
   662                           ; BSR set to: 0
   663                           ;main.c: 105: INTCON3bits.INT1IP = 0;
   664  000898  9CF0               	bcf	intcon3,6,c	;volatile
   665                           
   666                           ; BSR set to: 0
   667                           ;main.c: 106: INTCON3bits.INT2IP = 0;
   668  00089A  9EF0               	bcf	intcon3,7,c	;volatile
   669                           
   670                           ; BSR set to: 0
   671                           ;main.c: 109: TMR0L = 100;
   672  00089C  0E64               	movlw	100
   673  00089E  6ED6               	movwf	4054,c	;volatile
   674                           
   675                           ; BSR set to: 0
   676                           ;main.c: 110: T0CON = 0b11010101;
   677  0008A0  0ED5               	movlw	213
   678  0008A2  6ED5               	movwf	4053,c	;volatile
   679                           
   680                           ; BSR set to: 0
   681                           ;main.c: 111: TRISAbits.TRISA0 = 1;
   682  0008A4  8092               	bsf	3986,0,c	;volatile
   683                           
   684                           ; BSR set to: 0
   685                           ;main.c: 112: ADCON1 = 0b00001011;
   686  0008A6  0E0B               	movlw	11
   687  0008A8  6EC1               	movwf	4033,c	;volatile
   688                           
   689                           ; BSR set to: 0
   690                           ;main.c: 114: ADCON2 = 0b10010101;
   691  0008AA  0E95               	movlw	149
   692  0008AC  6EC0               	movwf	4032,c	;volatile
   693                           
   694                           ; BSR set to: 0
   695                           ;main.c: 115: INTCONbits.TMR0IF = 0;
   696  0008AE  94F2               	bcf	intcon,2,c	;volatile
   697                           
   698                           ; BSR set to: 0
   699                           ;main.c: 116: INTCONbits.TMR0IE = 1;
   700  0008B0  8AF2               	bsf	intcon,5,c	;volatile
   701                           
   702                           ; BSR set to: 0
   703                           ;main.c: 117: INTCON2bits.TMR0IP = 1;
   704  0008B2  84F1               	bsf	intcon2,2,c	;volatile
   705                           
   706                           ; BSR set to: 0
   707                           ;main.c: 122: TMR0L = 100;
   708  0008B4  0E64               	movlw	100
   709  0008B6  6ED6               	movwf	4054,c	;volatile
   710                           
   711                           ; BSR set to: 0
   712                           ;main.c: 125: CCP2CONbits.CCP2M3 = 1;
   713  0008B8  86BA               	bsf	4026,3,c	;volatile
   714                           
   715                           ; BSR set to: 0
   716                           ;main.c: 126: CCP2CONbits.CCP2M2 = 1;
   717  0008BA  84BA               	bsf	4026,2,c	;volatile
   718                           
   719                           ; BSR set to: 0
   720                           ;main.c: 129: OpenXLCD(0b00101100 & 0b00111000);
   721  0008BC  0E28               	movlw	40
   722  0008BE  EC2F  F007         	call	_OpenXLCD
   723                           
   724                           ;main.c: 130: WriteCmdXLCD(0x01);
   725  0008C2  0E01               	movlw	1
   726  0008C4  ECBC  F008         	call	_WriteCmdXLCD
   727                           
   728                           ;main.c: 131: _delay((unsigned long)((2)*(20000000/4000.0)));
   729  0008C8  0E0D               	movlw	13
   730  0008CA  0100               	movlb	0	; () banked
   731  0008CC  6F84               	movwf	??_main& (0+255),b
   732  0008CE  0EFB               	movlw	251
   733  0008D0                     u1117:
   734  0008D0  2EE8               	decfsz	wreg,f,c
   735  0008D2  D7FE               	bra	u1117
   736  0008D4  2F84               	decfsz	??_main& (0+255),f,b
   737  0008D6  D7FC               	bra	u1117
   738  0008D8  D000               	nop2	
   739  0008DA                     
   740                           ;main.c: 140: if(contador == 100){
   741  0008DA  0E64               	movlw	100
   742  0008DC  0100               	movlb	0	; () banked
   743  0008DE  19A4               	xorwf	_contador& (0+255),w,b
   744  0008E0  A4D8               	btfss	status,2,c
   745  0008E2  D7FB               	goto	l90
   746                           
   747                           ; BSR set to: 0
   748                           ;main.c: 141: contador = 0;
   749  0008E4  0E00               	movlw	0
   750  0008E6  6FA4               	movwf	_contador& (0+255),b
   751                           
   752                           ; BSR set to: 0
   753                           ;main.c: 142: mil = result / 1000;
   754  0008E8  C09E  F077         	movff	_result,___lldiv@dividend
   755  0008EC  C09F  F078         	movff	_result+1,___lldiv@dividend+1
   756  0008F0  C0A0  F079         	movff	_result+2,___lldiv@dividend+2
   757  0008F4  C0A1  F07A         	movff	_result+3,___lldiv@dividend+3
   758  0008F8  0EE8               	movlw	232
   759  0008FA  6F7B               	movwf	___lldiv@divisor& (0+255),b
   760  0008FC  0E03               	movlw	3
   761  0008FE  6F7C               	movwf	(___lldiv@divisor+1)& (0+255),b
   762  000900  0E00               	movlw	0
   763  000902  6F7D               	movwf	(___lldiv@divisor+2)& (0+255),b
   764  000904  0E00               	movlw	0
   765  000906  6F7E               	movwf	(___lldiv@divisor+3)& (0+255),b
   766  000908  ECC8  F007         	call	___lldiv	;wreg free
   767  00090C  C077  F086         	movff	?___lldiv,main@mil
   768  000910  C078  F087         	movff	?___lldiv+1,main@mil+1
   769                           
   770                           ;main.c: 143: aux = result % 1000;
   771  000914  C09E  F077         	movff	_result,___llmod@dividend
   772  000918  C09F  F078         	movff	_result+1,___llmod@dividend+1
   773  00091C  C0A0  F079         	movff	_result+2,___llmod@dividend+2
   774  000920  C0A1  F07A         	movff	_result+3,___llmod@dividend+3
   775  000924  0EE8               	movlw	232
   776  000926  0100               	movlb	0	; () banked
   777  000928  6F7B               	movwf	___llmod@divisor& (0+255),b
   778  00092A  0E03               	movlw	3
   779  00092C  6F7C               	movwf	(___llmod@divisor+1)& (0+255),b
   780  00092E  0E00               	movlw	0
   781  000930  6F7D               	movwf	(___llmod@divisor+2)& (0+255),b
   782  000932  0E00               	movlw	0
   783  000934  6F7E               	movwf	(___llmod@divisor+3)& (0+255),b
   784  000936  EC43  F008         	call	___llmod	;wreg free
   785  00093A  C077  F096         	movff	?___llmod,main@aux
   786  00093E  C078  F097         	movff	?___llmod+1,main@aux+1
   787                           
   788                           ;main.c: 144: cent = aux / 100;
   789  000942  C096  F077         	movff	main@aux,___awdiv@dividend
   790  000946  C097  F078         	movff	main@aux+1,___awdiv@dividend+1
   791  00094A  0E00               	movlw	0
   792  00094C  0100               	movlb	0	; () banked
   793  00094E  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
   794  000950  0E64               	movlw	100
   795  000952  6F79               	movwf	___awdiv@divisor& (0+255),b
   796  000954  EC85  F007         	call	___awdiv	;wreg free
   797  000958  C077  F088         	movff	?___awdiv,main@cent
   798  00095C  C078  F089         	movff	?___awdiv+1,main@cent+1
   799                           
   800                           ;main.c: 145: aux = aux % 100;
   801  000960  C096  F077         	movff	main@aux,___awmod@dividend
   802  000964  C097  F078         	movff	main@aux+1,___awmod@dividend+1
   803  000968  0E00               	movlw	0
   804  00096A  0100               	movlb	0	; () banked
   805  00096C  6F7A               	movwf	(___awmod@divisor+1)& (0+255),b
   806  00096E  0E64               	movlw	100
   807  000970  6F79               	movwf	___awmod@divisor& (0+255),b
   808  000972  EC0A  F008         	call	___awmod	;wreg free
   809  000976  C077  F096         	movff	?___awmod,main@aux
   810  00097A  C078  F097         	movff	?___awmod+1,main@aux+1
   811                           
   812                           ;main.c: 146: dez = aux / 10;
   813  00097E  C096  F077         	movff	main@aux,___awdiv@dividend
   814  000982  C097  F078         	movff	main@aux+1,___awdiv@dividend+1
   815  000986  0E00               	movlw	0
   816  000988  0100               	movlb	0	; () banked
   817  00098A  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
   818  00098C  0E0A               	movlw	10
   819  00098E  6F79               	movwf	___awdiv@divisor& (0+255),b
   820  000990  EC85  F007         	call	___awdiv	;wreg free
   821  000994  C077  F08A         	movff	?___awdiv,main@dez
   822  000998  C078  F08B         	movff	?___awdiv+1,main@dez+1
   823                           
   824                           ;main.c: 147: uni = aux % 10;
   825  00099C  C096  F077         	movff	main@aux,___awmod@dividend
   826  0009A0  C097  F078         	movff	main@aux+1,___awmod@dividend+1
   827  0009A4  0E00               	movlw	0
   828  0009A6  0100               	movlb	0	; () banked
   829  0009A8  6F7A               	movwf	(___awmod@divisor+1)& (0+255),b
   830  0009AA  0E0A               	movlw	10
   831  0009AC  6F79               	movwf	___awmod@divisor& (0+255),b
   832  0009AE  EC0A  F008         	call	___awmod	;wreg free
   833  0009B2  C077  F08C         	movff	?___awmod,main@uni
   834  0009B6  C078  F08D         	movff	?___awmod+1,main@uni+1
   835                           
   836                           ;main.c: 148: mil2 = result2 / 1000;
   837  0009BA  C09A  F077         	movff	_result2,___lldiv@dividend
   838  0009BE  C09B  F078         	movff	_result2+1,___lldiv@dividend+1
   839  0009C2  C09C  F079         	movff	_result2+2,___lldiv@dividend+2
   840  0009C6  C09D  F07A         	movff	_result2+3,___lldiv@dividend+3
   841  0009CA  0EE8               	movlw	232
   842  0009CC  0100               	movlb	0	; () banked
   843  0009CE  6F7B               	movwf	___lldiv@divisor& (0+255),b
   844  0009D0  0E03               	movlw	3
   845  0009D2  6F7C               	movwf	(___lldiv@divisor+1)& (0+255),b
   846  0009D4  0E00               	movlw	0
   847  0009D6  6F7D               	movwf	(___lldiv@divisor+2)& (0+255),b
   848  0009D8  0E00               	movlw	0
   849  0009DA  6F7E               	movwf	(___lldiv@divisor+3)& (0+255),b
   850  0009DC  ECC8  F007         	call	___lldiv	;wreg free
   851  0009E0  C077  F08E         	movff	?___lldiv,main@mil2
   852  0009E4  C078  F08F         	movff	?___lldiv+1,main@mil2+1
   853                           
   854                           ;main.c: 149: aux2 = result2 % 1000;
   855  0009E8  C09A  F077         	movff	_result2,___llmod@dividend
   856  0009EC  C09B  F078         	movff	_result2+1,___llmod@dividend+1
   857  0009F0  C09C  F079         	movff	_result2+2,___llmod@dividend+2
   858  0009F4  C09D  F07A         	movff	_result2+3,___llmod@dividend+3
   859  0009F8  0EE8               	movlw	232
   860  0009FA  0100               	movlb	0	; () banked
   861  0009FC  6F7B               	movwf	___llmod@divisor& (0+255),b
   862  0009FE  0E03               	movlw	3
   863  000A00  6F7C               	movwf	(___llmod@divisor+1)& (0+255),b
   864  000A02  0E00               	movlw	0
   865  000A04  6F7D               	movwf	(___llmod@divisor+2)& (0+255),b
   866  000A06  0E00               	movlw	0
   867  000A08  6F7E               	movwf	(___llmod@divisor+3)& (0+255),b
   868  000A0A  EC43  F008         	call	___llmod	;wreg free
   869  000A0E  C077  F098         	movff	?___llmod,main@aux2
   870  000A12  C078  F099         	movff	?___llmod+1,main@aux2+1
   871                           
   872                           ;main.c: 150: cent2 = aux2 / 100;
   873  000A16  C098  F077         	movff	main@aux2,___awdiv@dividend
   874  000A1A  C099  F078         	movff	main@aux2+1,___awdiv@dividend+1
   875  000A1E  0E00               	movlw	0
   876  000A20  0100               	movlb	0	; () banked
   877  000A22  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
   878  000A24  0E64               	movlw	100
   879  000A26  6F79               	movwf	___awdiv@divisor& (0+255),b
   880  000A28  EC85  F007         	call	___awdiv	;wreg free
   881  000A2C  C077  F090         	movff	?___awdiv,main@cent2
   882  000A30  C078  F091         	movff	?___awdiv+1,main@cent2+1
   883                           
   884                           ;main.c: 151: aux2 = aux2 % 100;
   885  000A34  C098  F077         	movff	main@aux2,___awmod@dividend
   886  000A38  C099  F078         	movff	main@aux2+1,___awmod@dividend+1
   887  000A3C  0E00               	movlw	0
   888  000A3E  0100               	movlb	0	; () banked
   889  000A40  6F7A               	movwf	(___awmod@divisor+1)& (0+255),b
   890  000A42  0E64               	movlw	100
   891  000A44  6F79               	movwf	___awmod@divisor& (0+255),b
   892  000A46  EC0A  F008         	call	___awmod	;wreg free
   893  000A4A  C077  F098         	movff	?___awmod,main@aux2
   894  000A4E  C078  F099         	movff	?___awmod+1,main@aux2+1
   895                           
   896                           ;main.c: 152: dez2 = aux2 / 10;
   897  000A52  C098  F077         	movff	main@aux2,___awdiv@dividend
   898  000A56  C099  F078         	movff	main@aux2+1,___awdiv@dividend+1
   899  000A5A  0E00               	movlw	0
   900  000A5C  0100               	movlb	0	; () banked
   901  000A5E  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
   902  000A60  0E0A               	movlw	10
   903  000A62  6F79               	movwf	___awdiv@divisor& (0+255),b
   904  000A64  EC85  F007         	call	___awdiv	;wreg free
   905  000A68  C077  F092         	movff	?___awdiv,main@dez2
   906  000A6C  C078  F093         	movff	?___awdiv+1,main@dez2+1
   907                           
   908                           ;main.c: 153: uni2 = aux2 % 10;
   909  000A70  C098  F077         	movff	main@aux2,___awmod@dividend
   910  000A74  C099  F078         	movff	main@aux2+1,___awmod@dividend+1
   911  000A78  0E00               	movlw	0
   912  000A7A  0100               	movlb	0	; () banked
   913  000A7C  6F7A               	movwf	(___awmod@divisor+1)& (0+255),b
   914  000A7E  0E0A               	movlw	10
   915  000A80  6F79               	movwf	___awmod@divisor& (0+255),b
   916  000A82  EC0A  F008         	call	___awmod	;wreg free
   917  000A86  C077  F094         	movff	?___awmod,main@uni2
   918  000A8A  C078  F095         	movff	?___awmod+1,main@uni2+1
   919                           
   920                           ;main.c: 154: WriteCmdXLCD(0x80);
   921  000A8E  0E80               	movlw	128
   922  000A90  ECBC  F008         	call	_WriteCmdXLCD
   923                           
   924                           ;main.c: 155: putsXLCD("Ta:");
   925  000A94  0E01               	movlw	low STR_1
   926  000A96  0100               	movlb	0	; () banked
   927  000A98  6F78               	movwf	putsXLCD@buffer& (0+255),b
   928  000A9A  0E08               	movlw	high STR_1
   929  000A9C  6F79               	movwf	(putsXLCD@buffer+1)& (0+255),b
   930  000A9E  ECFB  F008         	call	_putsXLCD	;wreg free
   931                           
   932                           ;main.c: 156: WriteDataXLCD(0x30 + mil);
   933  000AA2  0100               	movlb	0	; () banked
   934  000AA4  5186               	movf	main@mil& (0+255),w,b
   935  000AA6  0F30               	addlw	48
   936  000AA8  EC9A  F008         	call	_WriteDataXLCD
   937                           
   938                           ;main.c: 157: WriteDataXLCD(',');
   939  000AAC  0E2C               	movlw	44
   940  000AAE  EC9A  F008         	call	_WriteDataXLCD
   941                           
   942                           ;main.c: 158: WriteDataXLCD(0x30 + cent);
   943  000AB2  0100               	movlb	0	; () banked
   944  000AB4  5188               	movf	main@cent& (0+255),w,b
   945  000AB6  0F30               	addlw	48
   946  000AB8  EC9A  F008         	call	_WriteDataXLCD
   947                           
   948                           ;main.c: 159: WriteDataXLCD(0x30 + dez);
   949  000ABC  0100               	movlb	0	; () banked
   950  000ABE  518A               	movf	main@dez& (0+255),w,b
   951  000AC0  0F30               	addlw	48
   952  000AC2  EC9A  F008         	call	_WriteDataXLCD
   953                           
   954                           ;main.c: 160: WriteDataXLCD(0x30 + uni);
   955  000AC6  0100               	movlb	0	; () banked
   956  000AC8  518C               	movf	main@uni& (0+255),w,b
   957  000ACA  0F30               	addlw	48
   958  000ACC  EC9A  F008         	call	_WriteDataXLCD
   959                           
   960                           ;main.c: 161: WriteCmdXLCD(0x88);
   961  000AD0  0E88               	movlw	136
   962  000AD2  ECBC  F008         	call	_WriteCmdXLCD
   963                           
   964                           ;main.c: 162: putsXLCD("Tr:");
   965  000AD6  0E05               	movlw	low STR_2
   966  000AD8  0100               	movlb	0	; () banked
   967  000ADA  6F78               	movwf	putsXLCD@buffer& (0+255),b
   968  000ADC  0E08               	movlw	high STR_2
   969  000ADE  6F79               	movwf	(putsXLCD@buffer+1)& (0+255),b
   970  000AE0  ECFB  F008         	call	_putsXLCD	;wreg free
   971                           
   972                           ;main.c: 163: WriteDataXLCD(0x30 + mil2);
   973  000AE4  0100               	movlb	0	; () banked
   974  000AE6  518E               	movf	main@mil2& (0+255),w,b
   975  000AE8  0F30               	addlw	48
   976  000AEA  EC9A  F008         	call	_WriteDataXLCD
   977                           
   978                           ;main.c: 164: WriteDataXLCD(',');
   979  000AEE  0E2C               	movlw	44
   980  000AF0  EC9A  F008         	call	_WriteDataXLCD
   981                           
   982                           ;main.c: 165: WriteDataXLCD(0x30 + cent2);
   983  000AF4  0100               	movlb	0	; () banked
   984  000AF6  5190               	movf	main@cent2& (0+255),w,b
   985  000AF8  0F30               	addlw	48
   986  000AFA  EC9A  F008         	call	_WriteDataXLCD
   987                           
   988                           ;main.c: 166: WriteDataXLCD(0x30 + dez2);
   989  000AFE  0100               	movlb	0	; () banked
   990  000B00  5192               	movf	main@dez2& (0+255),w,b
   991  000B02  0F30               	addlw	48
   992  000B04  EC9A  F008         	call	_WriteDataXLCD
   993                           
   994                           ;main.c: 167: WriteDataXLCD(0x30 + uni2);
   995  000B08  0100               	movlb	0	; () banked
   996  000B0A  5194               	movf	main@uni2& (0+255),w,b
   997  000B0C  0F30               	addlw	48
   998  000B0E  EC9A  F008         	call	_WriteDataXLCD
   999  000B12  D6E3               	goto	l90
  1000  000B14                     __end_of_main:
  1001                           	opt stack 0
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           intcon	equ	0xFF2
  1005                           intcon2	equ	0xFF1
  1006                           intcon3	equ	0xFF0
  1007                           postinc0	equ	0xFEE
  1008                           wreg	equ	0xFE8
  1009                           status	equ	0xFD8
  1010                           
  1011 ;; *************** function _putsXLCD *****************
  1012 ;; Defined at:
  1013 ;;		line 510 in file "nxlcd.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  buffer          2   24[BANK0 ] PTR unsigned char 
  1016 ;;		 -> STR_2(4), STR_1(4), 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1028 ;;      Params:         0       2       0       0       0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1031 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1032 ;;Total ram usage:        2 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    6
  1035 ;; This function calls:
  1036 ;;		_BusyXLCD
  1037 ;;		_WriteDataXLCD
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text1
  1044  0011F6                     __ptext1:
  1045                           	opt stack 0
  1046  0011F6                     _putsXLCD:
  1047                           	opt stack 24
  1048                           
  1049                           ;nxlcd.c: 512: while(*buffer)
  1050                           
  1051                           ;incstack = 0
  1052  0011F6  D010               	goto	l169
  1053  0011F8                     
  1054                           ;nxlcd.c: 513: {
  1055                           ;nxlcd.c: 514: while(BusyXLCD());
  1056  0011F8  ECDE  F008         	call	_BusyXLCD	;wreg free
  1057  0011FC  0900               	iorlw	0
  1058  0011FE  A4D8               	btfss	status,2,c
  1059  001200  D7FB               	goto	l170
  1060                           
  1061                           ;nxlcd.c: 515: WriteDataXLCD(*buffer);
  1062  001202  C078  FFF6         	movff	putsXLCD@buffer,tblptrl
  1063  001206  C079  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1064  00120A                     	if	0	;tblptru may be non-zero
  1065  00120A                     	endif
  1066  00120A                     	if	0	;tblptru may be non-zero
  1067  00120A                     	endif
  1068  00120A  0008               	tblrd		*
  1069  00120C  50F5               	movf	tablat,w,c
  1070  00120E  EC9A  F008         	call	_WriteDataXLCD
  1071                           
  1072                           ;nxlcd.c: 516: buffer++;
  1073  001212  0100               	movlb	0	; () banked
  1074  001214  4B78               	infsnz	putsXLCD@buffer& (0+255),f,b
  1075  001216  2B79               	incf	(putsXLCD@buffer+1)& (0+255),f,b
  1076  001218                     l169:
  1077                           
  1078                           ; BSR set to: 0
  1079  001218  C078  FFF6         	movff	putsXLCD@buffer,tblptrl
  1080  00121C  C079  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1081  001220                     	if	0	;tblptru may be non-zero
  1082  001220                     	endif
  1083  001220                     	if	0	;tblptru may be non-zero
  1084  001220                     	endif
  1085  001220  0008               	tblrd		*
  1086  001222  50F5               	movf	tablat,w,c
  1087  001224  0900               	iorlw	0
  1088  001226  B4D8               	btfsc	status,2,c
  1089  001228  0012               	return	
  1090  00122A  D7E6               	goto	l170
  1091  00122C                     __end_of_putsXLCD:
  1092                           	opt stack 0
  1093                           tblptru	equ	0xFF8
  1094                           tblptrh	equ	0xFF7
  1095                           tblptrl	equ	0xFF6
  1096                           tablat	equ	0xFF5
  1097                           intcon	equ	0xFF2
  1098                           intcon2	equ	0xFF1
  1099                           intcon3	equ	0xFF0
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function _WriteDataXLCD *****************
  1105 ;; Defined at:
  1106 ;;		line 449 in file "nxlcd.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  data            1    wreg     unsigned char 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  data            1   23[BANK0 ] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0
  1121 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1123 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1124 ;;Total ram usage:        1 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    5
  1127 ;; This function calls:
  1128 ;;		_DelayFor18TCY
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;;		_putsXLCD
  1132 ;;		_putrsXLCD
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text2
  1137  001134                     __ptext2:
  1138                           	opt stack 0
  1139  001134                     _WriteDataXLCD:
  1140                           	opt stack 24
  1141                           
  1142                           ;incstack = 0
  1143                           ;WriteDataXLCD@data stored from wreg
  1144  001134  0100               	movlb	0	; () banked
  1145  001136  6F77               	movwf	WriteDataXLCD@data& (0+255),b
  1146                           
  1147                           ;nxlcd.c: 464: TRISD &= 0x0f;
  1148  001138  0E0F               	movlw	15
  1149  00113A  1695               	andwf	3989,f,c	;volatile
  1150                           
  1151                           ;nxlcd.c: 465: PORTD &= 0x0f;
  1152  00113C  0E0F               	movlw	15
  1153  00113E  1683               	andwf	3971,f,c	;volatile
  1154                           
  1155                           ;nxlcd.c: 466: PORTD |= data&0xf0;
  1156  001140  0100               	movlb	0	; () banked
  1157  001142  5177               	movf	WriteDataXLCD@data& (0+255),w,b
  1158  001144  0BF0               	andlw	240
  1159  001146  1283               	iorwf	3971,f,c	;volatile
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;nxlcd.c: 472: LATEbits.LATE0 = 1;
  1163  001148  808D               	bsf	3981,0,c	;volatile
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;nxlcd.c: 473: LATEbits.LATE2 = 0;
  1167  00114A  948D               	bcf	3981,2,c	;volatile
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;nxlcd.c: 474: DelayFor18TCY();
  1171  00114C  EC51  F009         	call	_DelayFor18TCY	;wreg free
  1172                           
  1173                           ;nxlcd.c: 475: LATEbits.LATE1 = 1;
  1174  001150  828D               	bsf	3981,1,c	;volatile
  1175                           
  1176                           ;nxlcd.c: 476: DelayFor18TCY();
  1177  001152  EC51  F009         	call	_DelayFor18TCY	;wreg free
  1178                           
  1179                           ;nxlcd.c: 477: LATEbits.LATE1 = 0;
  1180  001156  928D               	bcf	3981,1,c	;volatile
  1181                           
  1182                           ;nxlcd.c: 479: PORTD &= 0x0f;
  1183  001158  0E0F               	movlw	15
  1184  00115A  1683               	andwf	3971,f,c	;volatile
  1185                           
  1186                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
  1187  00115C  0100               	movlb	0	; () banked
  1188  00115E  3977               	swapf	WriteDataXLCD@data& (0+255),w,b
  1189  001160  0BF0               	andlw	240
  1190  001162  0BF0               	andlw	240
  1191  001164  1283               	iorwf	3971,f,c	;volatile
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;nxlcd.c: 485: DelayFor18TCY();
  1195  001166  EC51  F009         	call	_DelayFor18TCY	;wreg free
  1196                           
  1197                           ;nxlcd.c: 486: LATEbits.LATE1 = 1;
  1198  00116A  828D               	bsf	3981,1,c	;volatile
  1199                           
  1200                           ;nxlcd.c: 487: DelayFor18TCY();
  1201  00116C  EC51  F009         	call	_DelayFor18TCY	;wreg free
  1202                           
  1203                           ;nxlcd.c: 488: LATEbits.LATE1 = 0;
  1204  001170  928D               	bcf	3981,1,c	;volatile
  1205                           
  1206                           ;nxlcd.c: 490: TRISD |= 0xf0;
  1207  001172  0EF0               	movlw	240
  1208  001174  1295               	iorwf	3989,f,c	;volatile
  1209  001176  0012               	return	
  1210  001178                     __end_of_WriteDataXLCD:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           intcon	equ	0xFF2
  1217                           intcon2	equ	0xFF1
  1218                           intcon3	equ	0xFF0
  1219                           postinc0	equ	0xFEE
  1220                           wreg	equ	0xFE8
  1221                           status	equ	0xFD8
  1222                           
  1223 ;; *************** function ___llmod *****************
  1224 ;; Defined at:
  1225 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  dividend        4   23[BANK0 ] unsigned long 
  1228 ;;  divisor         4   27[BANK0 ] unsigned long 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  counter         1   31[BANK0 ] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  4   23[BANK0 ] unsigned long 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1240 ;;      Params:         0       8       0       0       0       0       0       0       0
  1241 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1243 ;;      Totals:         0       9       0       0       0       0       0       0       0
  1244 ;;Total ram usage:        9 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    4
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_main
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text3
  1255  001086                     __ptext3:
  1256                           	opt stack 0
  1257  001086                     ___llmod:
  1258                           	opt stack 26
  1259                           
  1260                           ;incstack = 0
  1261  001086  0100               	movlb	0	; () banked
  1262  001088  517B               	movf	___llmod@divisor& (0+255),w,b
  1263  00108A  117C               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  1264  00108C  117D               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  1265  00108E  117E               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  1266  001090  B4D8               	btfsc	status,2,c
  1267  001092  D024               	goto	l550
  1268                           
  1269                           ; BSR set to: 0
  1270  001094  0E01               	movlw	1
  1271  001096  6F7F               	movwf	___llmod@counter& (0+255),b
  1272  001098  D006               	goto	l545
  1273  00109A                     
  1274                           ; BSR set to: 0
  1275                           
  1276                           ; BSR set to: 0
  1277  00109A  90D8               	bcf	status,0,c
  1278  00109C  377B               	rlcf	___llmod@divisor& (0+255),f,b
  1279  00109E  377C               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  1280  0010A0  377D               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  1281  0010A2  377E               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  1282  0010A4  2B7F               	incf	___llmod@counter& (0+255),f,b
  1283  0010A6                     l545:
  1284                           
  1285                           ; BSR set to: 0
  1286                           
  1287                           ; BSR set to: 0
  1288  0010A6  AF7E               	btfss	(___llmod@divisor+3)& (0+255),7,b
  1289  0010A8  D7F8               	goto	l546
  1290  0010AA                     u1040:
  1291                           
  1292                           ; BSR set to: 0
  1293                           
  1294                           ; BSR set to: 0
  1295                           
  1296                           ; BSR set to: 0
  1297  0010AA  517B               	movf	___llmod@divisor& (0+255),w,b
  1298  0010AC  5D77               	subwf	___llmod@dividend& (0+255),w,b
  1299  0010AE  517C               	movf	(___llmod@divisor+1)& (0+255),w,b
  1300  0010B0  5978               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  1301  0010B2  517D               	movf	(___llmod@divisor+2)& (0+255),w,b
  1302  0010B4  5979               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  1303  0010B6  517E               	movf	(___llmod@divisor+3)& (0+255),w,b
  1304  0010B8  597A               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  1305  0010BA  A0D8               	btfss	status,0,c
  1306  0010BC  D008               	goto	l549
  1307                           
  1308                           ; BSR set to: 0
  1309  0010BE  517B               	movf	___llmod@divisor& (0+255),w,b
  1310  0010C0  5F77               	subwf	___llmod@dividend& (0+255),f,b
  1311  0010C2  517C               	movf	(___llmod@divisor+1)& (0+255),w,b
  1312  0010C4  5B78               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  1313  0010C6  517D               	movf	(___llmod@divisor+2)& (0+255),w,b
  1314  0010C8  5B79               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  1315  0010CA  517E               	movf	(___llmod@divisor+3)& (0+255),w,b
  1316  0010CC  5B7A               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  1317  0010CE                     l549:
  1318                           
  1319                           ; BSR set to: 0
  1320                           
  1321                           ; BSR set to: 0
  1322  0010CE  90D8               	bcf	status,0,c
  1323  0010D0  337E               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  1324  0010D2  337D               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  1325  0010D4  337C               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  1326  0010D6  337B               	rrcf	___llmod@divisor& (0+255),f,b
  1327                           
  1328                           ; BSR set to: 0
  1329  0010D8  2F7F               	decfsz	___llmod@counter& (0+255),f,b
  1330  0010DA  D7E7               	goto	u1040
  1331  0010DC                     l550:
  1332                           
  1333                           ; BSR set to: 0
  1334                           
  1335                           ; BSR set to: 0
  1336  0010DC  C077  F077         	movff	___llmod@dividend,?___llmod
  1337  0010E0  C078  F078         	movff	___llmod@dividend+1,?___llmod+1
  1338  0010E4  C079  F079         	movff	___llmod@dividend+2,?___llmod+2
  1339  0010E8  C07A  F07A         	movff	___llmod@dividend+3,?___llmod+3
  1340                           
  1341                           ; BSR set to: 0
  1342  0010EC  0012               	return		;funcret
  1343  0010EE                     __end_of___llmod:
  1344                           	opt stack 0
  1345                           tblptru	equ	0xFF8
  1346                           tblptrh	equ	0xFF7
  1347                           tblptrl	equ	0xFF6
  1348                           tablat	equ	0xFF5
  1349                           intcon	equ	0xFF2
  1350                           intcon2	equ	0xFF1
  1351                           intcon3	equ	0xFF0
  1352                           postinc0	equ	0xFEE
  1353                           wreg	equ	0xFE8
  1354                           status	equ	0xFD8
  1355                           
  1356 ;; *************** function ___lldiv *****************
  1357 ;; Defined at:
  1358 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  dividend        4   23[BANK0 ] unsigned long 
  1361 ;;  divisor         4   27[BANK0 ] unsigned long 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  quotient        4   31[BANK0 ] unsigned long 
  1364 ;;  counter         1   35[BANK0 ] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  4   23[BANK0 ] unsigned long 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1374 ;;      Params:         0       8       0       0       0       0       0       0       0
  1375 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1377 ;;      Totals:         0      13       0       0       0       0       0       0       0
  1378 ;;Total ram usage:       13 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    4
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text4
  1389  000F90                     __ptext4:
  1390                           	opt stack 0
  1391  000F90                     ___lldiv:
  1392                           	opt stack 26
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;incstack = 0
  1396  000F90  0E00               	movlw	0
  1397  000F92  0100               	movlb	0	; () banked
  1398  000F94  6F7F               	movwf	___lldiv@quotient& (0+255),b
  1399  000F96  0E00               	movlw	0
  1400  000F98  6F80               	movwf	(___lldiv@quotient+1)& (0+255),b
  1401  000F9A  0E00               	movlw	0
  1402  000F9C  6F81               	movwf	(___lldiv@quotient+2)& (0+255),b
  1403  000F9E  0E00               	movlw	0
  1404  000FA0  6F82               	movwf	(___lldiv@quotient+3)& (0+255),b
  1405                           
  1406                           ; BSR set to: 0
  1407  000FA2  517B               	movf	___lldiv@divisor& (0+255),w,b
  1408  000FA4  117C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  1409  000FA6  117D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  1410  000FA8  117E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  1411  000FAA  B4D8               	btfsc	status,2,c
  1412  000FAC  D02A               	goto	l540
  1413                           
  1414                           ; BSR set to: 0
  1415  000FAE  0E01               	movlw	1
  1416  000FB0  6F83               	movwf	___lldiv@counter& (0+255),b
  1417  000FB2  D006               	goto	l535
  1418  000FB4                     
  1419                           ; BSR set to: 0
  1420                           
  1421                           ; BSR set to: 0
  1422  000FB4  90D8               	bcf	status,0,c
  1423  000FB6  377B               	rlcf	___lldiv@divisor& (0+255),f,b
  1424  000FB8  377C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  1425  000FBA  377D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  1426  000FBC  377E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  1427  000FBE  2B83               	incf	___lldiv@counter& (0+255),f,b
  1428  000FC0                     l535:
  1429                           
  1430                           ; BSR set to: 0
  1431                           
  1432                           ; BSR set to: 0
  1433  000FC0  AF7E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  1434  000FC2  D7F8               	goto	l536
  1435  000FC4                     u1010:
  1436                           
  1437                           ; BSR set to: 0
  1438                           
  1439                           ; BSR set to: 0
  1440                           
  1441                           ; BSR set to: 0
  1442  000FC4  90D8               	bcf	status,0,c
  1443  000FC6  377F               	rlcf	___lldiv@quotient& (0+255),f,b
  1444  000FC8  3780               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1445  000FCA  3781               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1446  000FCC  3782               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1447                           
  1448                           ; BSR set to: 0
  1449  000FCE  517B               	movf	___lldiv@divisor& (0+255),w,b
  1450  000FD0  5D77               	subwf	___lldiv@dividend& (0+255),w,b
  1451  000FD2  517C               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1452  000FD4  5978               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  1453  000FD6  517D               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1454  000FD8  5979               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  1455  000FDA  517E               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1456  000FDC  597A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  1457  000FDE  A0D8               	btfss	status,0,c
  1458  000FE0  D009               	goto	l539
  1459                           
  1460                           ; BSR set to: 0
  1461  000FE2  517B               	movf	___lldiv@divisor& (0+255),w,b
  1462  000FE4  5F77               	subwf	___lldiv@dividend& (0+255),f,b
  1463  000FE6  517C               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1464  000FE8  5B78               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  1465  000FEA  517D               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1466  000FEC  5B79               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  1467  000FEE  517E               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1468  000FF0  5B7A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  1469                           
  1470                           ; BSR set to: 0
  1471  000FF2  817F               	bsf	___lldiv@quotient& (0+255),0,b
  1472  000FF4                     l539:
  1473                           
  1474                           ; BSR set to: 0
  1475                           
  1476                           ; BSR set to: 0
  1477  000FF4  90D8               	bcf	status,0,c
  1478  000FF6  337E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  1479  000FF8  337D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  1480  000FFA  337C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  1481  000FFC  337B               	rrcf	___lldiv@divisor& (0+255),f,b
  1482                           
  1483                           ; BSR set to: 0
  1484  000FFE  2F83               	decfsz	___lldiv@counter& (0+255),f,b
  1485  001000  D7E1               	goto	u1010
  1486  001002                     l540:
  1487                           
  1488                           ; BSR set to: 0
  1489                           
  1490                           ; BSR set to: 0
  1491  001002  C07F  F077         	movff	___lldiv@quotient,?___lldiv
  1492  001006  C080  F078         	movff	___lldiv@quotient+1,?___lldiv+1
  1493  00100A  C081  F079         	movff	___lldiv@quotient+2,?___lldiv+2
  1494  00100E  C082  F07A         	movff	___lldiv@quotient+3,?___lldiv+3
  1495                           
  1496                           ; BSR set to: 0
  1497  001012  0012               	return		;funcret
  1498  001014                     __end_of___lldiv:
  1499                           	opt stack 0
  1500                           tblptru	equ	0xFF8
  1501                           tblptrh	equ	0xFF7
  1502                           tblptrl	equ	0xFF6
  1503                           tablat	equ	0xFF5
  1504                           intcon	equ	0xFF2
  1505                           intcon2	equ	0xFF1
  1506                           intcon3	equ	0xFF0
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           status	equ	0xFD8
  1510                           
  1511 ;; *************** function ___awmod *****************
  1512 ;; Defined at:
  1513 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  dividend        2   23[BANK0 ] int 
  1516 ;;  divisor         2   25[BANK0 ] int 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  sign            1   28[BANK0 ] unsigned char 
  1519 ;;  counter         1   27[BANK0 ] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2   23[BANK0 ] int 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1529 ;;      Params:         0       4       0       0       0       0       0       0       0
  1530 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1532 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1533 ;;Total ram usage:        6 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    4
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text5
  1544  001014                     __ptext5:
  1545                           	opt stack 0
  1546  001014                     ___awmod:
  1547                           	opt stack 26
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;incstack = 0
  1551  001014  0E00               	movlw	0
  1552  001016  0100               	movlb	0	; () banked
  1553  001018  6F7C               	movwf	___awmod@sign& (0+255),b
  1554                           
  1555                           ; BSR set to: 0
  1556  00101A  AF78               	btfss	(___awmod@dividend+1)& (0+255),7,b
  1557  00101C  D006               	goto	l365
  1558                           
  1559                           ; BSR set to: 0
  1560  00101E  6D77               	negf	___awmod@dividend& (0+255),b
  1561  001020  1F78               	comf	(___awmod@dividend+1)& (0+255),f,b
  1562  001022  B0D8               	btfsc	status,0,c
  1563  001024  2B78               	incf	(___awmod@dividend+1)& (0+255),f,b
  1564                           
  1565                           ; BSR set to: 0
  1566  001026  0E01               	movlw	1
  1567  001028  6F7C               	movwf	___awmod@sign& (0+255),b
  1568  00102A                     l365:
  1569                           
  1570                           ; BSR set to: 0
  1571                           
  1572                           ; BSR set to: 0
  1573  00102A  AF7A               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1574  00102C  D004               	goto	l366
  1575                           
  1576                           ; BSR set to: 0
  1577  00102E  6D79               	negf	___awmod@divisor& (0+255),b
  1578  001030  1F7A               	comf	(___awmod@divisor+1)& (0+255),f,b
  1579  001032  B0D8               	btfsc	status,0,c
  1580  001034  2B7A               	incf	(___awmod@divisor+1)& (0+255),f,b
  1581  001036                     l366:
  1582                           
  1583                           ; BSR set to: 0
  1584                           
  1585                           ; BSR set to: 0
  1586  001036  5179               	movf	___awmod@divisor& (0+255),w,b
  1587  001038  117A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1588  00103A  B4D8               	btfsc	status,2,c
  1589  00103C  D018               	goto	l373
  1590                           
  1591                           ; BSR set to: 0
  1592  00103E  0E01               	movlw	1
  1593  001040  6F7B               	movwf	___awmod@counter& (0+255),b
  1594  001042  D004               	goto	l368
  1595  001044                     
  1596                           ; BSR set to: 0
  1597                           
  1598                           ; BSR set to: 0
  1599  001044  90D8               	bcf	status,0,c
  1600  001046  3779               	rlcf	___awmod@divisor& (0+255),f,b
  1601  001048  377A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1602  00104A  2B7B               	incf	___awmod@counter& (0+255),f,b
  1603  00104C                     l368:
  1604                           
  1605                           ; BSR set to: 0
  1606                           
  1607                           ; BSR set to: 0
  1608  00104C  AF7A               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1609  00104E  D7FA               	goto	l369
  1610  001050                     u890:
  1611                           
  1612                           ; BSR set to: 0
  1613                           
  1614                           ; BSR set to: 0
  1615                           
  1616                           ; BSR set to: 0
  1617  001050  5179               	movf	___awmod@divisor& (0+255),w,b
  1618  001052  5D77               	subwf	___awmod@dividend& (0+255),w,b
  1619  001054  517A               	movf	(___awmod@divisor+1)& (0+255),w,b
  1620  001056  5978               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1621  001058  A0D8               	btfss	status,0,c
  1622  00105A  D004               	goto	l372
  1623                           
  1624                           ; BSR set to: 0
  1625  00105C  5179               	movf	___awmod@divisor& (0+255),w,b
  1626  00105E  5F77               	subwf	___awmod@dividend& (0+255),f,b
  1627  001060  517A               	movf	(___awmod@divisor+1)& (0+255),w,b
  1628  001062  5B78               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1629  001064                     l372:
  1630                           
  1631                           ; BSR set to: 0
  1632                           
  1633                           ; BSR set to: 0
  1634  001064  90D8               	bcf	status,0,c
  1635  001066  337A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1636  001068  3379               	rrcf	___awmod@divisor& (0+255),f,b
  1637                           
  1638                           ; BSR set to: 0
  1639  00106A  2F7B               	decfsz	___awmod@counter& (0+255),f,b
  1640  00106C  D7F1               	goto	u890
  1641  00106E                     l373:
  1642                           
  1643                           ; BSR set to: 0
  1644                           
  1645                           ; BSR set to: 0
  1646                           
  1647                           ; BSR set to: 0
  1648  00106E  517C               	movf	___awmod@sign& (0+255),w,b
  1649  001070  B4D8               	btfsc	status,2,c
  1650  001072  D004               	goto	l374
  1651                           
  1652                           ; BSR set to: 0
  1653  001074  6D77               	negf	___awmod@dividend& (0+255),b
  1654  001076  1F78               	comf	(___awmod@dividend+1)& (0+255),f,b
  1655  001078  B0D8               	btfsc	status,0,c
  1656  00107A  2B78               	incf	(___awmod@dividend+1)& (0+255),f,b
  1657  00107C                     l374:
  1658                           
  1659                           ; BSR set to: 0
  1660                           
  1661                           ; BSR set to: 0
  1662  00107C  C077  F077         	movff	___awmod@dividend,?___awmod
  1663  001080  C078  F078         	movff	___awmod@dividend+1,?___awmod+1
  1664  001084  0012               	return	
  1665  001086                     __end_of___awmod:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           tblptrh	equ	0xFF7
  1669                           tblptrl	equ	0xFF6
  1670                           tablat	equ	0xFF5
  1671                           intcon	equ	0xFF2
  1672                           intcon2	equ	0xFF1
  1673                           intcon3	equ	0xFF0
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           status	equ	0xFD8
  1677                           
  1678 ;; *************** function ___awdiv *****************
  1679 ;; Defined at:
  1680 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  dividend        2   23[BANK0 ] int 
  1683 ;;  divisor         2   25[BANK0 ] int 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  quotient        2   29[BANK0 ] int 
  1686 ;;  sign            1   28[BANK0 ] unsigned char 
  1687 ;;  counter         1   27[BANK0 ] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  2   23[BANK0 ] int 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1697 ;;      Params:         0       4       0       0       0       0       0       0       0
  1698 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1700 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1701 ;;Total ram usage:        8 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    4
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text6
  1712  000F0A                     __ptext6:
  1713                           	opt stack 0
  1714  000F0A                     ___awdiv:
  1715                           	opt stack 26
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;incstack = 0
  1719  000F0A  0E00               	movlw	0
  1720  000F0C  0100               	movlb	0	; () banked
  1721  000F0E  6F7C               	movwf	___awdiv@sign& (0+255),b
  1722                           
  1723                           ; BSR set to: 0
  1724  000F10  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1725  000F12  D006               	goto	l352
  1726                           
  1727                           ; BSR set to: 0
  1728  000F14  6D79               	negf	___awdiv@divisor& (0+255),b
  1729  000F16  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1730  000F18  B0D8               	btfsc	status,0,c
  1731  000F1A  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1732                           
  1733                           ; BSR set to: 0
  1734  000F1C  0E01               	movlw	1
  1735  000F1E  6F7C               	movwf	___awdiv@sign& (0+255),b
  1736  000F20                     l352:
  1737                           
  1738                           ; BSR set to: 0
  1739                           
  1740                           ; BSR set to: 0
  1741  000F20  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1742  000F22  D006               	goto	l353
  1743                           
  1744                           ; BSR set to: 0
  1745  000F24  6D77               	negf	___awdiv@dividend& (0+255),b
  1746  000F26  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1747  000F28  B0D8               	btfsc	status,0,c
  1748  000F2A  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1749                           
  1750                           ; BSR set to: 0
  1751  000F2C  0E01               	movlw	1
  1752  000F2E  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
  1753  000F30                     l353:
  1754                           
  1755                           ; BSR set to: 0
  1756                           
  1757                           ; BSR set to: 0
  1758  000F30  0E00               	movlw	0
  1759  000F32  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
  1760  000F34  0E00               	movlw	0
  1761  000F36  6F7D               	movwf	___awdiv@quotient& (0+255),b
  1762                           
  1763                           ; BSR set to: 0
  1764  000F38  5179               	movf	___awdiv@divisor& (0+255),w,b
  1765  000F3A  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1766  000F3C  B4D8               	btfsc	status,2,c
  1767  000F3E  D01C               	goto	l360
  1768                           
  1769                           ; BSR set to: 0
  1770  000F40  0E01               	movlw	1
  1771  000F42  6F7B               	movwf	___awdiv@counter& (0+255),b
  1772  000F44  D004               	goto	l355
  1773  000F46                     
  1774                           ; BSR set to: 0
  1775                           
  1776                           ; BSR set to: 0
  1777  000F46  90D8               	bcf	status,0,c
  1778  000F48  3779               	rlcf	___awdiv@divisor& (0+255),f,b
  1779  000F4A  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1780  000F4C  2B7B               	incf	___awdiv@counter& (0+255),f,b
  1781  000F4E                     l355:
  1782                           
  1783                           ; BSR set to: 0
  1784                           
  1785                           ; BSR set to: 0
  1786  000F4E  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1787  000F50  D7FA               	goto	l356
  1788  000F52                     u830:
  1789                           
  1790                           ; BSR set to: 0
  1791                           
  1792                           ; BSR set to: 0
  1793                           
  1794                           ; BSR set to: 0
  1795  000F52  90D8               	bcf	status,0,c
  1796  000F54  377D               	rlcf	___awdiv@quotient& (0+255),f,b
  1797  000F56  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1798                           
  1799                           ; BSR set to: 0
  1800  000F58  5179               	movf	___awdiv@divisor& (0+255),w,b
  1801  000F5A  5D77               	subwf	___awdiv@dividend& (0+255),w,b
  1802  000F5C  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1803  000F5E  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1804  000F60  A0D8               	btfss	status,0,c
  1805  000F62  D005               	goto	l359
  1806                           
  1807                           ; BSR set to: 0
  1808  000F64  5179               	movf	___awdiv@divisor& (0+255),w,b
  1809  000F66  5F77               	subwf	___awdiv@dividend& (0+255),f,b
  1810  000F68  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1811  000F6A  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1812                           
  1813                           ; BSR set to: 0
  1814  000F6C  817D               	bsf	___awdiv@quotient& (0+255),0,b
  1815  000F6E                     l359:
  1816                           
  1817                           ; BSR set to: 0
  1818                           
  1819                           ; BSR set to: 0
  1820  000F6E  90D8               	bcf	status,0,c
  1821  000F70  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1822  000F72  3379               	rrcf	___awdiv@divisor& (0+255),f,b
  1823                           
  1824                           ; BSR set to: 0
  1825  000F74  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
  1826  000F76  D7ED               	goto	u830
  1827  000F78                     l360:
  1828                           
  1829                           ; BSR set to: 0
  1830                           
  1831                           ; BSR set to: 0
  1832                           
  1833                           ; BSR set to: 0
  1834  000F78  517C               	movf	___awdiv@sign& (0+255),w,b
  1835  000F7A  B4D8               	btfsc	status,2,c
  1836  000F7C  D004               	goto	l361
  1837                           
  1838                           ; BSR set to: 0
  1839  000F7E  6D7D               	negf	___awdiv@quotient& (0+255),b
  1840  000F80  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1841  000F82  B0D8               	btfsc	status,0,c
  1842  000F84  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1843  000F86                     l361:
  1844                           
  1845                           ; BSR set to: 0
  1846                           
  1847                           ; BSR set to: 0
  1848  000F86  C07D  F077         	movff	___awdiv@quotient,?___awdiv
  1849  000F8A  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
  1850  000F8E  0012               	return	
  1851  000F90                     __end_of___awdiv:
  1852                           	opt stack 0
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           intcon	equ	0xFF2
  1858                           intcon2	equ	0xFF1
  1859                           intcon3	equ	0xFF0
  1860                           postinc0	equ	0xFEE
  1861                           wreg	equ	0xFE8
  1862                           status	equ	0xFD8
  1863                           
  1864 ;; *************** function _OpenXLCD *****************
  1865 ;; Defined at:
  1866 ;;		line 41 in file "nxlcd.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  lcdtype         1    wreg     unsigned char 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  lcdtype         1   24[BANK0 ] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0
  1881 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1883 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1884 ;;Total ram usage:        1 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    6
  1887 ;; This function calls:
  1888 ;;		_BusyXLCD
  1889 ;;		_DelayPORXLCD
  1890 ;;		_DelayXLCD
  1891 ;;		_SetDDRamAddr
  1892 ;;		_WriteCmdXLCD
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text7
  1899  000E5E                     __ptext7:
  1900                           	opt stack 0
  1901  000E5E                     _OpenXLCD:
  1902                           	opt stack 24
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;incstack = 0
  1906                           ;OpenXLCD@lcdtype stored from wreg
  1907  000E5E  0100               	movlb	0	; () banked
  1908  000E60  6F78               	movwf	OpenXLCD@lcdtype& (0+255),b
  1909                           
  1910                           ;nxlcd.c: 50: PORTD &= 0x0f;
  1911  000E62  0E0F               	movlw	15
  1912  000E64  1683               	andwf	3971,f,c	;volatile
  1913                           
  1914                           ;nxlcd.c: 51: TRISD &= 0x0F;
  1915  000E66  0E0F               	movlw	15
  1916  000E68  1695               	andwf	3989,f,c	;volatile
  1917                           
  1918                           ;nxlcd.c: 57: TRISEbits.TRISE2 = 0;
  1919  000E6A  9496               	bcf	3990,2,c	;volatile
  1920                           
  1921                           ;nxlcd.c: 58: TRISEbits.TRISE0 = 0;
  1922  000E6C  9096               	bcf	3990,0,c	;volatile
  1923                           
  1924                           ;nxlcd.c: 59: TRISEbits.TRISE1 = 0;
  1925  000E6E  9296               	bcf	3990,1,c	;volatile
  1926                           
  1927                           ;nxlcd.c: 60: LATEbits.LATE2 = 0;
  1928  000E70  948D               	bcf	3981,2,c	;volatile
  1929                           
  1930                           ;nxlcd.c: 61: LATEbits.LATE0 = 0;
  1931  000E72  908D               	bcf	3981,0,c	;volatile
  1932                           
  1933                           ;nxlcd.c: 62: LATEbits.LATE1 = 0;
  1934  000E74  928D               	bcf	3981,1,c	;volatile
  1935                           
  1936                           ;nxlcd.c: 65: DelayPORXLCD();
  1937  000E76  EC47  F009         	call	_DelayPORXLCD	;wreg free
  1938                           
  1939                           ;nxlcd.c: 67: WriteCmdXLCD(0x30);
  1940  000E7A  0E30               	movlw	48
  1941  000E7C  ECBC  F008         	call	_WriteCmdXLCD
  1942                           
  1943                           ;nxlcd.c: 68: DelayXLCD();
  1944  000E80  EC3D  F009         	call	_DelayXLCD	;wreg free
  1945                           
  1946                           ;nxlcd.c: 69: DelayXLCD();
  1947  000E84  EC3D  F009         	call	_DelayXLCD	;wreg free
  1948                           
  1949                           ;nxlcd.c: 70: WriteCmdXLCD(0x30);
  1950  000E88  0E30               	movlw	48
  1951  000E8A  ECBC  F008         	call	_WriteCmdXLCD
  1952                           
  1953                           ;nxlcd.c: 71: DelayXLCD();
  1954  000E8E  EC3D  F009         	call	_DelayXLCD	;wreg free
  1955                           
  1956                           ;nxlcd.c: 72: DelayXLCD();
  1957  000E92  EC3D  F009         	call	_DelayXLCD	;wreg free
  1958                           
  1959                           ;nxlcd.c: 73: WriteCmdXLCD(0x32);
  1960  000E96  0E32               	movlw	50
  1961  000E98  ECBC  F008         	call	_WriteCmdXLCD
  1962  000E9C  ECDE  F008         	call	_BusyXLCD	;wreg free
  1963  000EA0  0900               	iorlw	0
  1964  000EA2  A4D8               	btfss	status,2,c
  1965  000EA4  D7FB               	goto	l123
  1966  000EA6                     u650:
  1967                           
  1968                           ;nxlcd.c: 79: while(BusyXLCD());
  1969  000EA6  ECDE  F008         	call	_BusyXLCD	;wreg free
  1970  000EAA  0900               	iorlw	0
  1971  000EAC  A4D8               	btfss	status,2,c
  1972  000EAE  D7FB               	goto	u650
  1973                           
  1974                           ;nxlcd.c: 80: WriteCmdXLCD(lcdtype);
  1975  000EB0  0100               	movlb	0	; () banked
  1976  000EB2  5178               	movf	OpenXLCD@lcdtype& (0+255),w,b
  1977  000EB4  ECBC  F008         	call	_WriteCmdXLCD
  1978  000EB8  ECDE  F008         	call	_BusyXLCD	;wreg free
  1979  000EBC  0900               	iorlw	0
  1980  000EBE  A4D8               	btfss	status,2,c
  1981  000EC0  D7FB               	goto	l129
  1982                           
  1983                           ;nxlcd.c: 84: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1984  000EC2  0E08               	movlw	8
  1985  000EC4  ECBC  F008         	call	_WriteCmdXLCD
  1986  000EC8  ECDE  F008         	call	_BusyXLCD	;wreg free
  1987  000ECC  0900               	iorlw	0
  1988  000ECE  A4D8               	btfss	status,2,c
  1989  000ED0  D7FB               	goto	l132
  1990                           
  1991                           ;nxlcd.c: 86: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1992  000ED2  0E0F               	movlw	15
  1993  000ED4  ECBC  F008         	call	_WriteCmdXLCD
  1994  000ED8  ECDE  F008         	call	_BusyXLCD	;wreg free
  1995  000EDC  0900               	iorlw	0
  1996  000EDE  A4D8               	btfss	status,2,c
  1997  000EE0  D7FB               	goto	l135
  1998                           
  1999                           ;nxlcd.c: 90: WriteCmdXLCD(0x01);
  2000  000EE2  0E01               	movlw	1
  2001  000EE4  ECBC  F008         	call	_WriteCmdXLCD
  2002  000EE8  ECDE  F008         	call	_BusyXLCD	;wreg free
  2003  000EEC  0900               	iorlw	0
  2004  000EEE  A4D8               	btfss	status,2,c
  2005  000EF0  D7FB               	goto	l138
  2006                           
  2007                           ;nxlcd.c: 94: WriteCmdXLCD(0b00000100);
  2008  000EF2  0E04               	movlw	4
  2009  000EF4  ECBC  F008         	call	_WriteCmdXLCD
  2010  000EF8  ECDE  F008         	call	_BusyXLCD	;wreg free
  2011  000EFC  0900               	iorlw	0
  2012  000EFE  A4D8               	btfss	status,2,c
  2013  000F00  D7FB               	goto	l141
  2014                           
  2015                           ;nxlcd.c: 98: SetDDRamAddr(0x80);
  2016  000F02  0E80               	movlw	128
  2017  000F04  EC77  F008         	call	_SetDDRamAddr
  2018  000F08  0012               	return	
  2019  000F0A                     __end_of_OpenXLCD:
  2020                           	opt stack 0
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           intcon	equ	0xFF2
  2026                           intcon2	equ	0xFF1
  2027                           intcon3	equ	0xFF0
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           status	equ	0xFD8
  2031                           
  2032 ;; *************** function _WriteCmdXLCD *****************
  2033 ;; Defined at:
  2034 ;;		line 388 in file "nxlcd.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  cmd             1    wreg     unsigned char 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  cmd             1   23[BANK0 ] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0
  2049 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2051 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2052 ;;Total ram usage:        1 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    5
  2055 ;; This function calls:
  2056 ;;		_DelayFor18TCY
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;;		_OpenXLCD
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text8
  2064  001178                     __ptext8:
  2065                           	opt stack 0
  2066  001178                     _WriteCmdXLCD:
  2067                           	opt stack 25
  2068                           
  2069                           ;incstack = 0
  2070                           ;WriteCmdXLCD@cmd stored from wreg
  2071  001178  0100               	movlb	0	; () banked
  2072  00117A  6F77               	movwf	WriteCmdXLCD@cmd& (0+255),b
  2073                           
  2074                           ;nxlcd.c: 403: TRISD &= 0x0f;
  2075  00117C  0E0F               	movlw	15
  2076  00117E  1695               	andwf	3989,f,c	;volatile
  2077                           
  2078                           ;nxlcd.c: 404: PORTD &= 0x0f;
  2079  001180  0E0F               	movlw	15
  2080  001182  1683               	andwf	3971,f,c	;volatile
  2081                           
  2082                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
  2083  001184  0100               	movlb	0	; () banked
  2084  001186  5177               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  2085  001188  0BF0               	andlw	240
  2086  00118A  1283               	iorwf	3971,f,c	;volatile
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;nxlcd.c: 411: LATEbits.LATE2 = 0;
  2090  00118C  948D               	bcf	3981,2,c	;volatile
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;nxlcd.c: 412: LATEbits.LATE0 = 0;
  2094  00118E  908D               	bcf	3981,0,c	;volatile
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;nxlcd.c: 413: DelayFor18TCY();
  2098  001190  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2099                           
  2100                           ;nxlcd.c: 414: LATEbits.LATE1 = 1;
  2101  001194  828D               	bsf	3981,1,c	;volatile
  2102                           
  2103                           ;nxlcd.c: 415: DelayFor18TCY();
  2104  001196  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2105                           
  2106                           ;nxlcd.c: 416: LATEbits.LATE1 = 0;
  2107  00119A  928D               	bcf	3981,1,c	;volatile
  2108                           
  2109                           ;nxlcd.c: 418: PORTD &= 0x0f;
  2110  00119C  0E0F               	movlw	15
  2111  00119E  1683               	andwf	3971,f,c	;volatile
  2112                           
  2113                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
  2114  0011A0  0100               	movlb	0	; () banked
  2115  0011A2  3977               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  2116  0011A4  0BF0               	andlw	240
  2117  0011A6  0BF0               	andlw	240
  2118  0011A8  1283               	iorwf	3971,f,c	;volatile
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;nxlcd.c: 424: DelayFor18TCY();
  2122  0011AA  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2123                           
  2124                           ;nxlcd.c: 425: LATEbits.LATE1 = 1;
  2125  0011AE  828D               	bsf	3981,1,c	;volatile
  2126                           
  2127                           ;nxlcd.c: 426: DelayFor18TCY();
  2128  0011B0  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2129                           
  2130                           ;nxlcd.c: 427: LATEbits.LATE1 = 0;
  2131  0011B4  928D               	bcf	3981,1,c	;volatile
  2132                           
  2133                           ;nxlcd.c: 429: TRISD |= 0xf0;
  2134  0011B6  0EF0               	movlw	240
  2135  0011B8  1295               	iorwf	3989,f,c	;volatile
  2136  0011BA  0012               	return	
  2137  0011BC                     __end_of_WriteCmdXLCD:
  2138                           	opt stack 0
  2139                           tblptru	equ	0xFF8
  2140                           tblptrh	equ	0xFF7
  2141                           tblptrl	equ	0xFF6
  2142                           tablat	equ	0xFF5
  2143                           intcon	equ	0xFF2
  2144                           intcon2	equ	0xFF1
  2145                           intcon3	equ	0xFF0
  2146                           postinc0	equ	0xFEE
  2147                           wreg	equ	0xFE8
  2148                           status	equ	0xFD8
  2149                           
  2150 ;; *************** function _SetDDRamAddr *****************
  2151 ;; Defined at:
  2152 ;;		line 171 in file "nxlcd.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  DDaddr          1    wreg     unsigned char 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  DDaddr          1   23[BANK0 ] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0
  2167 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2169 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2170 ;;Total ram usage:        1 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    5
  2173 ;; This function calls:
  2174 ;;		_DelayFor18TCY
  2175 ;; This function is called by:
  2176 ;;		_OpenXLCD
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text9
  2181  0010EE                     __ptext9:
  2182                           	opt stack 0
  2183  0010EE                     _SetDDRamAddr:
  2184                           	opt stack 24
  2185                           
  2186                           ;incstack = 0
  2187                           ;SetDDRamAddr@DDaddr stored from wreg
  2188  0010EE  0100               	movlb	0	; () banked
  2189  0010F0  6F77               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  2190                           
  2191                           ;nxlcd.c: 186: TRISD &= 0x0f;
  2192  0010F2  0E0F               	movlw	15
  2193  0010F4  1695               	andwf	3989,f,c	;volatile
  2194                           
  2195                           ;nxlcd.c: 187: PORTD &= 0x0f;
  2196  0010F6  0E0F               	movlw	15
  2197  0010F8  1683               	andwf	3971,f,c	;volatile
  2198                           
  2199                           ;nxlcd.c: 188: PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  2200  0010FA  0100               	movlb	0	; () banked
  2201  0010FC  5177               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  2202  0010FE  0980               	iorlw	128
  2203  001100  0BF0               	andlw	240
  2204  001102  1283               	iorwf	3971,f,c	;volatile
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;nxlcd.c: 194: LATEbits.LATE2 = 0;
  2208  001104  948D               	bcf	3981,2,c	;volatile
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;nxlcd.c: 195: LATEbits.LATE0 = 0;
  2212  001106  908D               	bcf	3981,0,c	;volatile
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;nxlcd.c: 196: DelayFor18TCY();
  2216  001108  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2217                           
  2218                           ;nxlcd.c: 197: LATEbits.LATE1 = 1;
  2219  00110C  828D               	bsf	3981,1,c	;volatile
  2220                           
  2221                           ;nxlcd.c: 198: DelayFor18TCY();
  2222  00110E  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2223                           
  2224                           ;nxlcd.c: 199: LATEbits.LATE1 = 0;
  2225  001112  928D               	bcf	3981,1,c	;volatile
  2226                           
  2227                           ;nxlcd.c: 201: PORTD &= 0x0f;
  2228  001114  0E0F               	movlw	15
  2229  001116  1683               	andwf	3971,f,c	;volatile
  2230                           
  2231                           ;nxlcd.c: 202: PORTD |= ((DDaddr<<4)&0xf0);
  2232  001118  0100               	movlb	0	; () banked
  2233  00111A  3977               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  2234  00111C  0BF0               	andlw	240
  2235  00111E  0BF0               	andlw	240
  2236  001120  1283               	iorwf	3971,f,c	;volatile
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;nxlcd.c: 207: DelayFor18TCY();
  2240  001122  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2241                           
  2242                           ;nxlcd.c: 208: LATEbits.LATE1 = 1;
  2243  001126  828D               	bsf	3981,1,c	;volatile
  2244                           
  2245                           ;nxlcd.c: 209: DelayFor18TCY();
  2246  001128  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2247                           
  2248                           ;nxlcd.c: 210: LATEbits.LATE1 = 0;
  2249  00112C  928D               	bcf	3981,1,c	;volatile
  2250                           
  2251                           ;nxlcd.c: 212: TRISD |= 0xf0;
  2252  00112E  0EF0               	movlw	240
  2253  001130  1295               	iorwf	3989,f,c	;volatile
  2254  001132  0012               	return	
  2255  001134                     __end_of_SetDDRamAddr:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           intcon	equ	0xFF2
  2262                           intcon2	equ	0xFF1
  2263                           intcon3	equ	0xFF0
  2264                           postinc0	equ	0xFEE
  2265                           wreg	equ	0xFE8
  2266                           status	equ	0xFD8
  2267                           
  2268 ;; *************** function _DelayXLCD *****************
  2269 ;; Defined at:
  2270 ;;		line 22 in file "nxlcd.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2286 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2287 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2288 ;;Total ram usage:        1 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    4
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_OpenXLCD
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text10
  2299  00127A                     __ptext10:
  2300                           	opt stack 0
  2301  00127A                     _DelayXLCD:
  2302                           	opt stack 25
  2303                           
  2304                           ;nxlcd.c: 24: _delay((unsigned long)((5)*(20000000/4000.0)));
  2305                           
  2306                           ;incstack = 0
  2307  00127A  0E21               	movlw	33
  2308  00127C  0100               	movlb	0	; () banked
  2309  00127E  6F77               	movwf	??_DelayXLCD& (0+255),b
  2310  001280  0E76               	movlw	118
  2311  001282                     u1127:
  2312  001282  2EE8               	decfsz	wreg,f,c
  2313  001284  D7FE               	bra	u1127
  2314  001286  2F77               	decfsz	??_DelayXLCD& (0+255),f,b
  2315  001288  D7FC               	bra	u1127
  2316  00128A  F000               	nop	
  2317  00128C  0012               	return		;funcret
  2318  00128E                     __end_of_DelayXLCD:
  2319                           	opt stack 0
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           intcon	equ	0xFF2
  2325                           intcon2	equ	0xFF1
  2326                           intcon3	equ	0xFF0
  2327                           postinc0	equ	0xFEE
  2328                           wreg	equ	0xFE8
  2329                           status	equ	0xFD8
  2330                           
  2331 ;; *************** function _DelayPORXLCD *****************
  2332 ;; Defined at:
  2333 ;;		line 17 in file "nxlcd.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2347 ;;      Params:         0       0       0       0       0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2349 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2350 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2351 ;;Total ram usage:        1 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    4
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_OpenXLCD
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text11
  2362  00128E                     __ptext11:
  2363                           	opt stack 0
  2364  00128E                     _DelayPORXLCD:
  2365                           	opt stack 25
  2366                           
  2367                           ;nxlcd.c: 19: _delay((unsigned long)((15)*(20000000/4000.0)));
  2368                           
  2369                           ;incstack = 0
  2370  00128E  0E62               	movlw	98
  2371  001290  0100               	movlb	0	; () banked
  2372  001292  6F77               	movwf	??_DelayPORXLCD& (0+255),b
  2373  001294  0E65               	movlw	101
  2374  001296                     u1137:
  2375  001296  2EE8               	decfsz	wreg,f,c
  2376  001298  D7FE               	bra	u1137
  2377  00129A  2F77               	decfsz	??_DelayPORXLCD& (0+255),f,b
  2378  00129C  D7FC               	bra	u1137
  2379  00129E  D000               	nop2	
  2380  0012A0  0012               	return		;funcret
  2381  0012A2                     __end_of_DelayPORXLCD:
  2382                           	opt stack 0
  2383                           tblptru	equ	0xFF8
  2384                           tblptrh	equ	0xFF7
  2385                           tblptrl	equ	0xFF6
  2386                           tablat	equ	0xFF5
  2387                           intcon	equ	0xFF2
  2388                           intcon2	equ	0xFF1
  2389                           intcon3	equ	0xFF0
  2390                           postinc0	equ	0xFEE
  2391                           wreg	equ	0xFE8
  2392                           status	equ	0xFD8
  2393                           
  2394 ;; *************** function _BusyXLCD *****************
  2395 ;; Defined at:
  2396 ;;		line 227 in file "nxlcd.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      unsigned char 
  2403 ;; Registers used:
  2404 ;;		wreg, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2410 ;;      Params:         0       0       0       0       0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    5
  2417 ;; This function calls:
  2418 ;;		_DelayFor18TCY
  2419 ;; This function is called by:
  2420 ;;		_OpenXLCD
  2421 ;;		_putsXLCD
  2422 ;;		_putrsXLCD
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text12
  2427  0011BC                     __ptext12:
  2428                           	opt stack 0
  2429  0011BC                     _BusyXLCD:
  2430                           	opt stack 24
  2431                           
  2432                           ;nxlcd.c: 229: LATEbits.LATE2 = 1;
  2433                           
  2434                           ;incstack = 0
  2435  0011BC  848D               	bsf	3981,2,c	;volatile
  2436                           
  2437                           ;nxlcd.c: 230: LATEbits.LATE0 = 0;
  2438  0011BE  908D               	bcf	3981,0,c	;volatile
  2439                           
  2440                           ;nxlcd.c: 231: DelayFor18TCY();
  2441  0011C0  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2442                           
  2443                           ;nxlcd.c: 232: LATEbits.LATE1 = 1;
  2444  0011C4  828D               	bsf	3981,1,c	;volatile
  2445                           
  2446                           ;nxlcd.c: 233: DelayFor18TCY();
  2447  0011C6  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2448                           
  2449                           ;nxlcd.c: 249: if(PORTD&0x80)
  2450  0011CA  AE83               	btfss	3971,7,c	;volatile
  2451  0011CC  D00A               	goto	l152
  2452                           
  2453                           ;nxlcd.c: 253: {
  2454                           ;nxlcd.c: 254: LATEbits.LATE1 = 0;
  2455  0011CE  928D               	bcf	3981,1,c	;volatile
  2456                           
  2457                           ;nxlcd.c: 255: DelayFor18TCY();
  2458  0011D0  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2459                           
  2460                           ;nxlcd.c: 256: LATEbits.LATE1 = 1;
  2461  0011D4  828D               	bsf	3981,1,c	;volatile
  2462                           
  2463                           ;nxlcd.c: 257: DelayFor18TCY();
  2464  0011D6  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2465                           
  2466                           ;nxlcd.c: 258: LATEbits.LATE1 = 0;
  2467  0011DA  928D               	bcf	3981,1,c	;volatile
  2468                           
  2469                           ;nxlcd.c: 259: LATEbits.LATE2 = 0;
  2470  0011DC  948D               	bcf	3981,2,c	;volatile
  2471                           
  2472                           ;nxlcd.c: 260: return 1;
  2473  0011DE  0E01               	movlw	1
  2474                           
  2475                           ;nxlcd.c: 261: }
  2476  0011E0  0012               	return	
  2477  0011E2                     l152:
  2478                           
  2479                           ;nxlcd.c: 262: else
  2480                           ;nxlcd.c: 263: {
  2481                           ;nxlcd.c: 264: LATEbits.LATE1 = 0;
  2482  0011E2  928D               	bcf	3981,1,c	;volatile
  2483                           
  2484                           ;nxlcd.c: 265: DelayFor18TCY();
  2485  0011E4  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2486                           
  2487                           ;nxlcd.c: 266: LATEbits.LATE1 = 1;
  2488  0011E8  828D               	bsf	3981,1,c	;volatile
  2489                           
  2490                           ;nxlcd.c: 267: DelayFor18TCY();
  2491  0011EA  EC51  F009         	call	_DelayFor18TCY	;wreg free
  2492                           
  2493                           ;nxlcd.c: 268: LATEbits.LATE1 = 0;
  2494  0011EE  928D               	bcf	3981,1,c	;volatile
  2495                           
  2496                           ;nxlcd.c: 269: LATEbits.LATE2 = 0;
  2497  0011F0  948D               	bcf	3981,2,c	;volatile
  2498                           
  2499                           ;nxlcd.c: 270: return 0;
  2500  0011F2  0E00               	movlw	0
  2501  0011F4  0012               	return	
  2502  0011F6                     __end_of_BusyXLCD:
  2503                           	opt stack 0
  2504                           tblptru	equ	0xFF8
  2505                           tblptrh	equ	0xFF7
  2506                           tblptrl	equ	0xFF6
  2507                           tablat	equ	0xFF5
  2508                           intcon	equ	0xFF2
  2509                           intcon2	equ	0xFF1
  2510                           intcon3	equ	0xFF0
  2511                           postinc0	equ	0xFEE
  2512                           wreg	equ	0xFE8
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _DelayFor18TCY *****************
  2516 ;; Defined at:
  2517 ;;		line 12 in file "nxlcd.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2531 ;;      Params:         0       0       0       0       0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    4
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_SetDDRamAddr
  2542 ;;		_BusyXLCD
  2543 ;;		_WriteCmdXLCD
  2544 ;;		_WriteDataXLCD
  2545 ;;		_SetCGRamAddr
  2546 ;;		_ReadAddrXLCD
  2547 ;;		_ReadDataXLCD
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text13
  2552  0012A2                     __ptext13:
  2553                           	opt stack 0
  2554  0012A2                     _DelayFor18TCY:
  2555                           	opt stack 24
  2556                           
  2557                           ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2558                           
  2559                           ;incstack = 0
  2560  0012A2  0E21               	movlw	33
  2561  0012A4                     u1147:
  2562  0012A4  2EE8               	decfsz	wreg,f,c
  2563  0012A6  D7FE               	bra	u1147
  2564  0012A8  F000               	nop	
  2565  0012AA  0012               	return		;funcret
  2566  0012AC                     __end_of_DelayFor18TCY:
  2567                           	opt stack 0
  2568                           tblptru	equ	0xFF8
  2569                           tblptrh	equ	0xFF7
  2570                           tblptrl	equ	0xFF6
  2571                           tablat	equ	0xFF5
  2572                           intcon	equ	0xFF2
  2573                           intcon2	equ	0xFF1
  2574                           intcon3	equ	0xFF0
  2575                           postinc0	equ	0xFEE
  2576                           wreg	equ	0xFE8
  2577                           status	equ	0xFD8
  2578                           
  2579 ;; *************** function _LowPriorityISR *****************
  2580 ;; Defined at:
  2581 ;;		line 36 in file "main.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2595 ;;      Params:         0       0       0       0       0       0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2597 ;;      Temps:          0      23       0       0       0       0       0       0       0
  2598 ;;      Totals:         0      23       0       0       0       0       0       0       0
  2599 ;;Total ram usage:       23 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    3
  2602 ;; This function calls:
  2603 ;;		___ftmul
  2604 ;;		___fttol
  2605 ;;		___lwtoft
  2606 ;; This function is called by:
  2607 ;;		Interrupt level 1
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	intcodelo
  2612  000018                     __pintcodelo:
  2613                           	opt stack 0
  2614  000018                     _LowPriorityISR:
  2615                           	opt stack 24
  2616                           
  2617                           ;incstack = 0
  2618  000018  8046               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2619  00001A  CFD8 F062          	movff	status,??_LowPriorityISR+2
  2620  00001E  CFE8 F063          	movff	wreg,??_LowPriorityISR+3
  2621  000022  CFE0 F064          	movff	bsr,??_LowPriorityISR+4
  2622  000026  CFFA F065          	movff	pclath,??_LowPriorityISR+5
  2623  00002A  CFFB F066          	movff	pclatu,??_LowPriorityISR+6
  2624  00002E  CFE9 F067          	movff	fsr0l,??_LowPriorityISR+7
  2625  000032  CFEA F068          	movff	fsr0h,??_LowPriorityISR+8
  2626  000036  CFE1 F069          	movff	fsr1l,??_LowPriorityISR+9
  2627  00003A  CFE2 F06A          	movff	fsr1h,??_LowPriorityISR+10
  2628  00003E  CFD9 F06B          	movff	fsr2l,??_LowPriorityISR+11
  2629  000042  CFDA F06C          	movff	fsr2h,??_LowPriorityISR+12
  2630  000046  CFF3 F06D          	movff	prodl,??_LowPriorityISR+13
  2631  00004A  CFF4 F06E          	movff	prodh,??_LowPriorityISR+14
  2632  00004E  CFF6 F06F          	movff	tblptrl,??_LowPriorityISR+15
  2633  000052  CFF7 F070          	movff	tblptrh,??_LowPriorityISR+16
  2634  000056  CFF8 F071          	movff	tblptru,??_LowPriorityISR+17
  2635  00005A  CFF5 F072          	movff	tablat,??_LowPriorityISR+18
  2636  00005E  C046  F073         	movff	btemp,??_LowPriorityISR+19
  2637  000062  C047  F074         	movff	btemp+1,??_LowPriorityISR+20
  2638  000066  C048  F075         	movff	btemp+2,??_LowPriorityISR+21
  2639  00006A  C049  F076         	movff	btemp+3,??_LowPriorityISR+22
  2640                           
  2641                           ;main.c: 37: PIR1bits.ADIF = 0;
  2642  00006E  9C9E               	bcf	3998,6,c	;volatile
  2643                           
  2644                           ;main.c: 38: valorconv = 256 * ADRESH + ADRESL;
  2645  000070  50C4               	movf	4036,w,c	;volatile
  2646  000072  0100               	movlb	0	; () banked
  2647  000074  6F61               	movwf	(??_LowPriorityISR+1)& (0+255),b
  2648  000076  6B60               	clrf	??_LowPriorityISR& (0+255),b
  2649  000078  50C3               	movf	4035,w,c	;volatile
  2650  00007A  2560               	addwf	??_LowPriorityISR& (0+255),w,b
  2651  00007C  6E44               	movwf	_valorconv,c
  2652  00007E  0E00               	movlw	0
  2653  000080  2161               	addwfc	(??_LowPriorityISR+1)& (0+255),w,b
  2654  000082  6E45               	movwf	_valorconv+1,c
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;main.c: 39: contador++;
  2658  000084  2BA4               	incf	_contador& (0+255),f,b
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;main.c: 40: if(leiturapotenciometro){
  2662  000086  5040               	movf	_leiturapotenciometro,w,c
  2663  000088  1041               	iorwf	_leiturapotenciometro+1,w,c
  2664  00008A  B4D8               	btfsc	status,2,c
  2665  00008C  D029               	goto	i1l83
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;main.c: 41: leiturapotenciometro = 0;
  2669  00008E  0E00               	movlw	0
  2670  000090  6E41               	movwf	_leiturapotenciometro+1,c
  2671  000092  0E00               	movlw	0
  2672  000094  6E40               	movwf	_leiturapotenciometro,c
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;main.c: 42: result2 = 4.89*valorconv;
  2676  000096  0E7B               	movlw	123
  2677  000098  6E21               	movwf	___ftmul@f2,c
  2678  00009A  0E9C               	movlw	156
  2679  00009C  6E22               	movwf	___ftmul@f2+1,c
  2680  00009E  0E40               	movlw	64
  2681  0000A0  6E23               	movwf	___ftmul@f2+2,c
  2682  0000A2  C044  F01B         	movff	_valorconv,___lwtoft@c
  2683  0000A6  C045  F01C         	movff	_valorconv+1,___lwtoft@c+1
  2684  0000AA  EC2B  F009         	call	___lwtoft	;wreg free
  2685  0000AE  C01B  F01E         	movff	?___lwtoft,___ftmul@f1
  2686  0000B2  C01C  F01F         	movff	?___lwtoft+1,___ftmul@f1+1
  2687  0000B6  C01D  F020         	movff	?___lwtoft+2,___ftmul@f1+2
  2688  0000BA  EC04  F006         	call	___ftmul	;wreg free
  2689  0000BE  C01E  F02D         	movff	?___ftmul,___fttol@f1
  2690  0000C2  C01F  F02E         	movff	?___ftmul+1,___fttol@f1+1
  2691  0000C6  C020  F02F         	movff	?___ftmul+2,___fttol@f1+2
  2692  0000CA  EC8A  F005         	call	___fttol	;wreg free
  2693  0000CE  C02D  F09A         	movff	?___fttol,_result2
  2694  0000D2  C02E  F09B         	movff	?___fttol+1,_result2+1
  2695  0000D6  C02F  F09C         	movff	?___fttol+2,_result2+2
  2696  0000DA  C030  F09D         	movff	?___fttol+3,_result2+3
  2697                           
  2698                           ;main.c: 44: } else {
  2699  0000DE  D024               	goto	i1l84
  2700  0000E0                     i1l83:
  2701                           
  2702                           ;main.c: 45: result = valorconv*4.89;
  2703  0000E0  0E7B               	movlw	123
  2704  0000E2  6E21               	movwf	___ftmul@f2,c
  2705  0000E4  0E9C               	movlw	156
  2706  0000E6  6E22               	movwf	___ftmul@f2+1,c
  2707  0000E8  0E40               	movlw	64
  2708  0000EA  6E23               	movwf	___ftmul@f2+2,c
  2709  0000EC  C044  F01B         	movff	_valorconv,___lwtoft@c
  2710  0000F0  C045  F01C         	movff	_valorconv+1,___lwtoft@c+1
  2711  0000F4  EC2B  F009         	call	___lwtoft	;wreg free
  2712  0000F8  C01B  F01E         	movff	?___lwtoft,___ftmul@f1
  2713  0000FC  C01C  F01F         	movff	?___lwtoft+1,___ftmul@f1+1
  2714  000100  C01D  F020         	movff	?___lwtoft+2,___ftmul@f1+2
  2715  000104  EC04  F006         	call	___ftmul	;wreg free
  2716  000108  C01E  F02D         	movff	?___ftmul,___fttol@f1
  2717  00010C  C01F  F02E         	movff	?___ftmul+1,___fttol@f1+1
  2718  000110  C020  F02F         	movff	?___ftmul+2,___fttol@f1+2
  2719  000114  EC8A  F005         	call	___fttol	;wreg free
  2720  000118  C02D  F09E         	movff	?___fttol,_result
  2721  00011C  C02E  F09F         	movff	?___fttol+1,_result+1
  2722  000120  C02F  F0A0         	movff	?___fttol+2,_result+2
  2723  000124  C030  F0A1         	movff	?___fttol+3,_result+3
  2724  000128                     i1l84:
  2725  000128  C076  F049         	movff	??_LowPriorityISR+22,btemp+3
  2726  00012C  C075  F048         	movff	??_LowPriorityISR+21,btemp+2
  2727  000130  C074  F047         	movff	??_LowPriorityISR+20,btemp+1
  2728  000134  C073  F046         	movff	??_LowPriorityISR+19,btemp
  2729  000138  C072  FFF5         	movff	??_LowPriorityISR+18,tablat
  2730  00013C  C071  FFF8         	movff	??_LowPriorityISR+17,tblptru
  2731  000140  C070  FFF7         	movff	??_LowPriorityISR+16,tblptrh
  2732  000144  C06F  FFF6         	movff	??_LowPriorityISR+15,tblptrl
  2733  000148  C06E  FFF4         	movff	??_LowPriorityISR+14,prodh
  2734  00014C  C06D  FFF3         	movff	??_LowPriorityISR+13,prodl
  2735  000150  C06C  FFDA         	movff	??_LowPriorityISR+12,fsr2h
  2736  000154  C06B  FFD9         	movff	??_LowPriorityISR+11,fsr2l
  2737  000158  C06A  FFE2         	movff	??_LowPriorityISR+10,fsr1h
  2738  00015C  C069  FFE1         	movff	??_LowPriorityISR+9,fsr1l
  2739  000160  C068  FFEA         	movff	??_LowPriorityISR+8,fsr0h
  2740  000164  C067  FFE9         	movff	??_LowPriorityISR+7,fsr0l
  2741  000168  C066  FFFB         	movff	??_LowPriorityISR+6,pclatu
  2742  00016C  C065  FFFA         	movff	??_LowPriorityISR+5,pclath
  2743  000170  C064  FFE0         	movff	??_LowPriorityISR+4,bsr
  2744  000174  C063  FFE8         	movff	??_LowPriorityISR+3,wreg
  2745  000178  C062  FFD8         	movff	??_LowPriorityISR+2,status
  2746  00017C  9046               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2747  00017E  0010               	retfie	
  2748  000180                     __end_of_LowPriorityISR:
  2749                           	opt stack 0
  2750                           pclatu	equ	0xFFB
  2751                           pclath	equ	0xFFA
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           prodh	equ	0xFF4
  2757                           prodl	equ	0xFF3
  2758                           intcon	equ	0xFF2
  2759                           intcon2	equ	0xFF1
  2760                           intcon3	equ	0xFF0
  2761                           postinc0	equ	0xFEE
  2762                           fsr0h	equ	0xFEA
  2763                           fsr0l	equ	0xFE9
  2764                           wreg	equ	0xFE8
  2765                           fsr1h	equ	0xFE2
  2766                           fsr1l	equ	0xFE1
  2767                           bsr	equ	0xFE0
  2768                           fsr2h	equ	0xFDA
  2769                           fsr2l	equ	0xFD9
  2770                           status	equ	0xFD8
  2771                           
  2772 ;; *************** function ___lwtoft *****************
  2773 ;; Defined at:
  2774 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  c               2   26[COMRAM] unsigned int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  3   26[COMRAM] float 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2788 ;;      Params:         3       0       0       0       0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2791 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2792 ;;Total ram usage:        3 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    2
  2795 ;; This function calls:
  2796 ;;		___ftpack
  2797 ;; This function is called by:
  2798 ;;		_LowPriorityISR
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text15
  2803  001256                     __ptext15:
  2804                           	opt stack 0
  2805  001256                     ___lwtoft:
  2806                           	opt stack 24
  2807                           
  2808                           ;incstack = 0
  2809  001256  C01B  F013         	movff	___lwtoft@c,___ftpack@arg
  2810  00125A  C01C  F014         	movff	___lwtoft@c+1,___ftpack@arg+1
  2811  00125E  6A15               	clrf	___ftpack@arg+2,c
  2812  001260  0E8E               	movlw	142
  2813  001262  6E16               	movwf	___ftpack@exp,c
  2814  001264  0E00               	movlw	0
  2815  001266  6E17               	movwf	___ftpack@sign,c
  2816  001268  ECD8  F006         	call	___ftpack	;wreg free
  2817  00126C  C013  F01B         	movff	?___ftpack,?___lwtoft
  2818  001270  C014  F01C         	movff	?___ftpack+1,?___lwtoft+1
  2819  001274  C015  F01D         	movff	?___ftpack+2,?___lwtoft+2
  2820  001278  0012               	return	
  2821  00127A                     __end_of___lwtoft:
  2822                           	opt stack 0
  2823                           pclatu	equ	0xFFB
  2824                           pclath	equ	0xFFA
  2825                           tblptru	equ	0xFF8
  2826                           tblptrh	equ	0xFF7
  2827                           tblptrl	equ	0xFF6
  2828                           tablat	equ	0xFF5
  2829                           prodh	equ	0xFF4
  2830                           prodl	equ	0xFF3
  2831                           intcon	equ	0xFF2
  2832                           intcon2	equ	0xFF1
  2833                           intcon3	equ	0xFF0
  2834                           postinc0	equ	0xFEE
  2835                           fsr0h	equ	0xFEA
  2836                           fsr0l	equ	0xFE9
  2837                           wreg	equ	0xFE8
  2838                           fsr1h	equ	0xFE2
  2839                           fsr1l	equ	0xFE1
  2840                           bsr	equ	0xFE0
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function ___fttol *****************
  2846 ;; Defined at:
  2847 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  f1              3   44[COMRAM] float 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  lval            4   54[COMRAM] unsigned long 
  2852 ;;  exp1            1   58[COMRAM] unsigned char 
  2853 ;;  sign1           1   53[COMRAM] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  4   44[COMRAM] long 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         4       0       0       0       0       0       0       0       0
  2864 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2865 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2866 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2867 ;;Total ram usage:       15 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_LowPriorityISR
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text16
  2878  000B14                     __ptext16:
  2879                           	opt stack 0
  2880  000B14                     ___fttol:
  2881                           	opt stack 25
  2882                           
  2883                           ;incstack = 0
  2884  000B14  C02F  F031         	movff	___fttol@f1+2,??___fttol
  2885  000B18  6A32               	clrf	(??___fttol+1)& (0+255),c
  2886  000B1A  6A33               	clrf	(??___fttol+2)& (0+255),c
  2887  000B1C  342E               	rlcf	___fttol@f1+1,w,c
  2888  000B1E  3631               	rlcf	??___fttol& (0+255),f,c
  2889  000B20  E301               	bnc	u92_21
  2890  000B22  8032               	bsf	(??___fttol+1)& (0+255),0,c
  2891  000B24                     u92_21:
  2892  000B24  5031               	movf	??___fttol,w,c
  2893  000B26  6E3B               	movwf	___fttol@exp1,c
  2894  000B28  503B               	movf	___fttol@exp1,w,c
  2895  000B2A  A4D8               	btfss	status,2,c
  2896  000B2C  D009               	goto	i1l499
  2897  000B2E  0E00               	movlw	0
  2898  000B30  6E2D               	movwf	?___fttol,c
  2899  000B32  0E00               	movlw	0
  2900  000B34  6E2E               	movwf	?___fttol+1,c
  2901  000B36  0E00               	movlw	0
  2902  000B38  6E2F               	movwf	?___fttol+2,c
  2903  000B3A  0E00               	movlw	0
  2904  000B3C  6E30               	movwf	?___fttol+3,c
  2905  000B3E  0012               	return	
  2906  000B40                     i1l499:
  2907  000B40  0E17               	movlw	23
  2908  000B42  6E31               	movwf	??___fttol& (0+255),c
  2909  000B44  C02D  F032         	movff	___fttol@f1,??___fttol+1
  2910  000B48  C02E  F033         	movff	___fttol@f1+1,??___fttol+2
  2911  000B4C  C02F  F034         	movff	___fttol@f1+2,??___fttol+3
  2912  000B50  2831               	incf	??___fttol,w,c
  2913  000B52  6E35               	movwf	(??___fttol+4)& (0+255),c
  2914  000B54  D004               	goto	i1u94_20
  2915  000B56                     i1u94_25:
  2916  000B56  90D8               	bcf	status,0,c
  2917  000B58  3234               	rrcf	??___fttol+3,f,c
  2918  000B5A  3233               	rrcf	??___fttol+2,f,c
  2919  000B5C  3232               	rrcf	??___fttol+1,f,c
  2920  000B5E                     i1u94_20:
  2921  000B5E  2E35               	decfsz	(??___fttol+4)& (0+255),f,c
  2922  000B60  D7FA               	goto	i1u94_25
  2923  000B62  5032               	movf	??___fttol+1,w,c
  2924  000B64  6E36               	movwf	___fttol@sign1,c
  2925  000B66  8E2E               	bsf	___fttol@f1+1,7,c
  2926  000B68  0EFF               	movlw	255
  2927  000B6A  162D               	andwf	___fttol@f1,f,c
  2928  000B6C  0EFF               	movlw	255
  2929  000B6E  162E               	andwf	___fttol@f1+1,f,c
  2930  000B70  0E00               	movlw	0
  2931  000B72  162F               	andwf	___fttol@f1+2,f,c
  2932  000B74  502D               	movf	___fttol@f1,w,c
  2933  000B76  6E37               	movwf	___fttol@lval,c
  2934  000B78  502E               	movf	___fttol@f1+1,w,c
  2935  000B7A  6E38               	movwf	___fttol@lval+1,c
  2936  000B7C  502F               	movf	___fttol@f1+2,w,c
  2937  000B7E  6E39               	movwf	___fttol@lval+2,c
  2938  000B80  6A3A               	clrf	___fttol@lval+3,c
  2939  000B82  0E8E               	movlw	142
  2940  000B84  5E3B               	subwf	___fttol@exp1,f,c
  2941  000B86  AE3B               	btfss	___fttol@exp1,7,c
  2942  000B88  D016               	goto	i1l501
  2943  000B8A  503B               	movf	___fttol@exp1,w,c
  2944  000B8C  0A80               	xorlw	128
  2945  000B8E  0F8F               	addlw	143
  2946  000B90  B0D8               	btfsc	status,0,c
  2947  000B92  D009               	goto	i1l502
  2948  000B94  0E00               	movlw	0
  2949  000B96  6E2D               	movwf	?___fttol,c
  2950  000B98  0E00               	movlw	0
  2951  000B9A  6E2E               	movwf	?___fttol+1,c
  2952  000B9C  0E00               	movlw	0
  2953  000B9E  6E2F               	movwf	?___fttol+2,c
  2954  000BA0  0E00               	movlw	0
  2955  000BA2  6E30               	movwf	?___fttol+3,c
  2956  000BA4  0012               	return	
  2957  000BA6                     i1l502:
  2958  000BA6  90D8               	bcf	status,0,c
  2959  000BA8  323A               	rrcf	___fttol@lval+3,f,c
  2960  000BAA  3239               	rrcf	___fttol@lval+2,f,c
  2961  000BAC  3238               	rrcf	___fttol@lval+1,f,c
  2962  000BAE  3237               	rrcf	___fttol@lval,f,c
  2963  000BB0  3E3B               	incfsz	___fttol@exp1,f,c
  2964  000BB2  D7F9               	goto	i1l502
  2965  000BB4  D015               	goto	i1u98_20
  2966  000BB6                     i1l501:
  2967  000BB6  0E17               	movlw	23
  2968  000BB8  643B               	cpfsgt	___fttol@exp1,c
  2969  000BBA  D00F               	goto	i1l507
  2970  000BBC  0E00               	movlw	0
  2971  000BBE  6E2D               	movwf	?___fttol,c
  2972  000BC0  0E00               	movlw	0
  2973  000BC2  6E2E               	movwf	?___fttol+1,c
  2974  000BC4  0E00               	movlw	0
  2975  000BC6  6E2F               	movwf	?___fttol+2,c
  2976  000BC8  0E00               	movlw	0
  2977  000BCA  6E30               	movwf	?___fttol+3,c
  2978  000BCC  0012               	return	
  2979  000BCE  90D8               	bcf	status,0,c
  2980  000BD0  3637               	rlcf	___fttol@lval,f,c
  2981  000BD2  3638               	rlcf	___fttol@lval+1,f,c
  2982  000BD4  3639               	rlcf	___fttol@lval+2,f,c
  2983  000BD6  363A               	rlcf	___fttol@lval+3,f,c
  2984  000BD8  063B               	decf	___fttol@exp1,f,c
  2985  000BDA                     i1l507:
  2986  000BDA  503B               	movf	___fttol@exp1,w,c
  2987  000BDC  A4D8               	btfss	status,2,c
  2988  000BDE  D7F7               	goto	i1l508
  2989  000BE0                     i1u98_20:
  2990  000BE0  5036               	movf	___fttol@sign1,w,c
  2991  000BE2  B4D8               	btfsc	status,2,c
  2992  000BE4  D008               	goto	i1l510
  2993  000BE6  1E3A               	comf	___fttol@lval+3,f,c
  2994  000BE8  1E39               	comf	___fttol@lval+2,f,c
  2995  000BEA  1E38               	comf	___fttol@lval+1,f,c
  2996  000BEC  6C37               	negf	___fttol@lval,c
  2997  000BEE  0E00               	movlw	0
  2998  000BF0  2238               	addwfc	___fttol@lval+1,f,c
  2999  000BF2  2239               	addwfc	___fttol@lval+2,f,c
  3000  000BF4  223A               	addwfc	___fttol@lval+3,f,c
  3001  000BF6                     i1l510:
  3002  000BF6  C037  F02D         	movff	___fttol@lval,?___fttol
  3003  000BFA  C038  F02E         	movff	___fttol@lval+1,?___fttol+1
  3004  000BFE  C039  F02F         	movff	___fttol@lval+2,?___fttol+2
  3005  000C02  C03A  F030         	movff	___fttol@lval+3,?___fttol+3
  3006  000C06  0012               	return	
  3007  000C08                     __end_of___fttol:
  3008                           	opt stack 0
  3009                           pclatu	equ	0xFFB
  3010                           pclath	equ	0xFFA
  3011                           tblptru	equ	0xFF8
  3012                           tblptrh	equ	0xFF7
  3013                           tblptrl	equ	0xFF6
  3014                           tablat	equ	0xFF5
  3015                           prodh	equ	0xFF4
  3016                           prodl	equ	0xFF3
  3017                           intcon	equ	0xFF2
  3018                           intcon2	equ	0xFF1
  3019                           intcon3	equ	0xFF0
  3020                           postinc0	equ	0xFEE
  3021                           fsr0h	equ	0xFEA
  3022                           fsr0l	equ	0xFE9
  3023                           wreg	equ	0xFE8
  3024                           fsr1h	equ	0xFE2
  3025                           fsr1l	equ	0xFE1
  3026                           bsr	equ	0xFE0
  3027                           fsr2h	equ	0xFDA
  3028                           fsr2l	equ	0xFD9
  3029                           status	equ	0xFD8
  3030                           
  3031 ;; *************** function ___ftmul *****************
  3032 ;; Defined at:
  3033 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  f1              3   29[COMRAM] float 
  3036 ;;  f2              3   32[COMRAM] float 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  f3_as_produc    3   39[COMRAM] unsigned um
  3039 ;;  sign            1   43[COMRAM] unsigned char 
  3040 ;;  cntr            1   42[COMRAM] unsigned char 
  3041 ;;  exp             1   38[COMRAM] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  3   29[COMRAM] float 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3051 ;;      Params:         6       0       0       0       0       0       0       0       0
  3052 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3053 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3054 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3055 ;;Total ram usage:       15 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    2
  3058 ;; This function calls:
  3059 ;;		___ftpack
  3060 ;; This function is called by:
  3061 ;;		_LowPriorityISR
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text17
  3066  000C08                     __ptext17:
  3067                           	opt stack 0
  3068  000C08                     ___ftmul:
  3069                           	opt stack 24
  3070                           
  3071                           ;incstack = 0
  3072  000C08  C020  F024         	movff	___ftmul@f1+2,??___ftmul
  3073  000C0C  6A25               	clrf	(??___ftmul+1)& (0+255),c
  3074  000C0E  6A26               	clrf	(??___ftmul+2)& (0+255),c
  3075  000C10  341F               	rlcf	___ftmul@f1+1,w,c
  3076  000C12  3624               	rlcf	??___ftmul& (0+255),f,c
  3077  000C14  E301               	bnc	u74_21
  3078  000C16  8025               	bsf	(??___ftmul+1)& (0+255),0,c
  3079  000C18                     u74_21:
  3080  000C18  5024               	movf	??___ftmul,w,c
  3081  000C1A  6E27               	movwf	___ftmul@exp,c
  3082  000C1C  5027               	movf	___ftmul@exp,w,c
  3083  000C1E  A4D8               	btfss	status,2,c
  3084  000C20  D007               	goto	i1l478
  3085  000C22  0E00               	movlw	0
  3086  000C24  6E1E               	movwf	?___ftmul,c
  3087  000C26  0E00               	movlw	0
  3088  000C28  6E1F               	movwf	?___ftmul+1,c
  3089  000C2A  0E00               	movlw	0
  3090  000C2C  6E20               	movwf	?___ftmul+2,c
  3091  000C2E  0012               	return	
  3092  000C30                     i1l478:
  3093  000C30  C023  F024         	movff	___ftmul@f2+2,??___ftmul
  3094  000C34  6A25               	clrf	(??___ftmul+1)& (0+255),c
  3095  000C36  6A26               	clrf	(??___ftmul+2)& (0+255),c
  3096  000C38  3422               	rlcf	___ftmul@f2+1,w,c
  3097  000C3A  3624               	rlcf	??___ftmul& (0+255),f,c
  3098  000C3C  E301               	bnc	u76_21
  3099  000C3E  8025               	bsf	(??___ftmul+1)& (0+255),0,c
  3100  000C40                     u76_21:
  3101  000C40  5024               	movf	??___ftmul,w,c
  3102  000C42  6E2C               	movwf	___ftmul@sign,c
  3103  000C44  502C               	movf	___ftmul@sign,w,c
  3104  000C46  A4D8               	btfss	status,2,c
  3105  000C48  D007               	goto	i1l480
  3106  000C4A  0E00               	movlw	0
  3107  000C4C  6E1E               	movwf	?___ftmul,c
  3108  000C4E  0E00               	movlw	0
  3109  000C50  6E1F               	movwf	?___ftmul+1,c
  3110  000C52  0E00               	movlw	0
  3111  000C54  6E20               	movwf	?___ftmul+2,c
  3112  000C56  0012               	return	
  3113  000C58                     i1l480:
  3114  000C58  502C               	movf	___ftmul@sign,w,c
  3115  000C5A  0F7B               	addlw	123
  3116  000C5C  2627               	addwf	___ftmul@exp,f,c
  3117  000C5E  C020  F02C         	movff	___ftmul@f1+2,___ftmul@sign
  3118  000C62  5023               	movf	___ftmul@f2+2,w,c
  3119  000C64  1A2C               	xorwf	___ftmul@sign,f,c
  3120  000C66  0E80               	movlw	128
  3121  000C68  162C               	andwf	___ftmul@sign,f,c
  3122  000C6A  8E1F               	bsf	___ftmul@f1+1,7,c
  3123  000C6C  8E22               	bsf	___ftmul@f2+1,7,c
  3124  000C6E  0EFF               	movlw	255
  3125  000C70  1621               	andwf	___ftmul@f2,f,c
  3126  000C72  0EFF               	movlw	255
  3127  000C74  1622               	andwf	___ftmul@f2+1,f,c
  3128  000C76  0E00               	movlw	0
  3129  000C78  1623               	andwf	___ftmul@f2+2,f,c
  3130  000C7A  0E00               	movlw	0
  3131  000C7C  6E28               	movwf	___ftmul@f3_as_product,c
  3132  000C7E  0E00               	movlw	0
  3133  000C80  6E29               	movwf	___ftmul@f3_as_product+1,c
  3134  000C82  0E00               	movlw	0
  3135  000C84  6E2A               	movwf	___ftmul@f3_as_product+2,c
  3136  000C86  0E07               	movlw	7
  3137  000C88  6E2B               	movwf	___ftmul@cntr,c
  3138  000C8A  A01E               	btfss	___ftmul@f1,0,c
  3139  000C8C  D006               	goto	i1l482
  3140  000C8E  5021               	movf	___ftmul@f2,w,c
  3141  000C90  2628               	addwf	___ftmul@f3_as_product,f,c
  3142  000C92  5022               	movf	___ftmul@f2+1,w,c
  3143  000C94  2229               	addwfc	___ftmul@f3_as_product+1,f,c
  3144  000C96  5023               	movf	___ftmul@f2+2,w,c
  3145  000C98  222A               	addwfc	___ftmul@f3_as_product+2,f,c
  3146  000C9A                     i1l482:
  3147  000C9A  90D8               	bcf	status,0,c
  3148  000C9C  3220               	rrcf	___ftmul@f1+2,f,c
  3149  000C9E  321F               	rrcf	___ftmul@f1+1,f,c
  3150  000CA0  321E               	rrcf	___ftmul@f1,f,c
  3151  000CA2  90D8               	bcf	status,0,c
  3152  000CA4  3621               	rlcf	___ftmul@f2,f,c
  3153  000CA6  3622               	rlcf	___ftmul@f2+1,f,c
  3154  000CA8  3623               	rlcf	___ftmul@f2+2,f,c
  3155  000CAA  2E2B               	decfsz	___ftmul@cntr,f,c
  3156  000CAC  D7EE               	goto	i1l481
  3157  000CAE  0E09               	movlw	9
  3158  000CB0  6E2B               	movwf	___ftmul@cntr,c
  3159  000CB2  A01E               	btfss	___ftmul@f1,0,c
  3160  000CB4  D006               	goto	i1l485
  3161  000CB6  5021               	movf	___ftmul@f2,w,c
  3162  000CB8  2628               	addwf	___ftmul@f3_as_product,f,c
  3163  000CBA  5022               	movf	___ftmul@f2+1,w,c
  3164  000CBC  2229               	addwfc	___ftmul@f3_as_product+1,f,c
  3165  000CBE  5023               	movf	___ftmul@f2+2,w,c
  3166  000CC0  222A               	addwfc	___ftmul@f3_as_product+2,f,c
  3167  000CC2                     i1l485:
  3168  000CC2  90D8               	bcf	status,0,c
  3169  000CC4  3220               	rrcf	___ftmul@f1+2,f,c
  3170  000CC6  321F               	rrcf	___ftmul@f1+1,f,c
  3171  000CC8  321E               	rrcf	___ftmul@f1,f,c
  3172  000CCA  90D8               	bcf	status,0,c
  3173  000CCC  322A               	rrcf	___ftmul@f3_as_product+2,f,c
  3174  000CCE  3229               	rrcf	___ftmul@f3_as_product+1,f,c
  3175  000CD0  3228               	rrcf	___ftmul@f3_as_product,f,c
  3176  000CD2  2E2B               	decfsz	___ftmul@cntr,f,c
  3177  000CD4  D7EE               	goto	i1l484
  3178  000CD6  C028  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  3179  000CDA  C029  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3180  000CDE  C02A  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3181  000CE2  C027  F016         	movff	___ftmul@exp,___ftpack@exp
  3182  000CE6  C02C  F017         	movff	___ftmul@sign,___ftpack@sign
  3183  000CEA  ECD8  F006         	call	___ftpack	;wreg free
  3184  000CEE  C013  F01E         	movff	?___ftpack,?___ftmul
  3185  000CF2  C014  F01F         	movff	?___ftpack+1,?___ftmul+1
  3186  000CF6  C015  F020         	movff	?___ftpack+2,?___ftmul+2
  3187  000CFA  0012               	return	
  3188  000CFC                     __end_of___ftmul:
  3189                           	opt stack 0
  3190                           pclatu	equ	0xFFB
  3191                           pclath	equ	0xFFA
  3192                           tblptru	equ	0xFF8
  3193                           tblptrh	equ	0xFF7
  3194                           tblptrl	equ	0xFF6
  3195                           tablat	equ	0xFF5
  3196                           prodh	equ	0xFF4
  3197                           prodl	equ	0xFF3
  3198                           intcon	equ	0xFF2
  3199                           intcon2	equ	0xFF1
  3200                           intcon3	equ	0xFF0
  3201                           postinc0	equ	0xFEE
  3202                           fsr0h	equ	0xFEA
  3203                           fsr0l	equ	0xFE9
  3204                           wreg	equ	0xFE8
  3205                           fsr1h	equ	0xFE2
  3206                           fsr1l	equ	0xFE1
  3207                           bsr	equ	0xFE0
  3208                           fsr2h	equ	0xFDA
  3209                           fsr2l	equ	0xFD9
  3210                           status	equ	0xFD8
  3211                           
  3212 ;; *************** function ___ftpack *****************
  3213 ;; Defined at:
  3214 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  arg             3   18[COMRAM] unsigned um
  3217 ;;  exp             1   21[COMRAM] unsigned char 
  3218 ;;  sign            1   22[COMRAM] unsigned char 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  3   18[COMRAM] float 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3230 ;;      Params:         5       0       0       0       0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3232 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3233 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3234 ;;Total ram usage:        8 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		___ftmul
  3241 ;;		___lwtoft
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text18
  3246  000DB0                     __ptext18:
  3247                           	opt stack 0
  3248  000DB0                     ___ftpack:
  3249                           	opt stack 24
  3250                           
  3251                           ;incstack = 0
  3252  000DB0  5016               	movf	___ftpack@exp,w,c
  3253  000DB2  B4D8               	btfsc	status,2,c
  3254  000DB4  D005               	goto	i1u58_20
  3255  000DB6  5013               	movf	___ftpack@arg,w,c
  3256  000DB8  1014               	iorwf	___ftpack@arg+1,w,c
  3257  000DBA  1015               	iorwf	___ftpack@arg+2,w,c
  3258  000DBC  A4D8               	btfss	status,2,c
  3259  000DBE  D00C               	goto	i1l399
  3260  000DC0                     i1u58_20:
  3261  000DC0  0E00               	movlw	0
  3262  000DC2  6E13               	movwf	?___ftpack,c
  3263  000DC4  0E00               	movlw	0
  3264  000DC6  6E14               	movwf	?___ftpack+1,c
  3265  000DC8  0E00               	movlw	0
  3266  000DCA  6E15               	movwf	?___ftpack+2,c
  3267  000DCC  0012               	return	
  3268  000DCE  2A16               	incf	___ftpack@exp,f,c
  3269  000DD0  90D8               	bcf	status,0,c
  3270  000DD2  3215               	rrcf	___ftpack@arg+2,f,c
  3271  000DD4  3214               	rrcf	___ftpack@arg+1,f,c
  3272  000DD6  3213               	rrcf	___ftpack@arg,f,c
  3273  000DD8                     i1l399:
  3274  000DD8  0E00               	movlw	0
  3275  000DDA  1413               	andwf	___ftpack@arg,w,c
  3276  000DDC  6E18               	movwf	??___ftpack& (0+255),c
  3277  000DDE  0E00               	movlw	0
  3278  000DE0  1414               	andwf	___ftpack@arg+1,w,c
  3279  000DE2  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3280  000DE4  0EFE               	movlw	254
  3281  000DE6  1415               	andwf	___ftpack@arg+2,w,c
  3282  000DE8  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3283  000DEA  5018               	movf	??___ftpack,w,c
  3284  000DEC  1019               	iorwf	??___ftpack+1,w,c
  3285  000DEE  101A               	iorwf	??___ftpack+2,w,c
  3286  000DF0  B4D8               	btfsc	status,2,c
  3287  000DF2  D00C               	goto	i1l402
  3288  000DF4  D7EC               	goto	i1l400
  3289  000DF6  2A16               	incf	___ftpack@exp,f,c
  3290  000DF8  0E01               	movlw	1
  3291  000DFA  2613               	addwf	___ftpack@arg,f,c
  3292  000DFC  0E00               	movlw	0
  3293  000DFE  2214               	addwfc	___ftpack@arg+1,f,c
  3294  000E00  0E00               	movlw	0
  3295  000E02  2215               	addwfc	___ftpack@arg+2,f,c
  3296  000E04  90D8               	bcf	status,0,c
  3297  000E06  3215               	rrcf	___ftpack@arg+2,f,c
  3298  000E08  3214               	rrcf	___ftpack@arg+1,f,c
  3299  000E0A  3213               	rrcf	___ftpack@arg,f,c
  3300  000E0C                     i1l402:
  3301  000E0C  0E00               	movlw	0
  3302  000E0E  1413               	andwf	___ftpack@arg,w,c
  3303  000E10  6E18               	movwf	??___ftpack& (0+255),c
  3304  000E12  0E00               	movlw	0
  3305  000E14  1414               	andwf	___ftpack@arg+1,w,c
  3306  000E16  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3307  000E18  0EFF               	movlw	255
  3308  000E1A  1415               	andwf	___ftpack@arg+2,w,c
  3309  000E1C  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3310  000E1E  5018               	movf	??___ftpack,w,c
  3311  000E20  1019               	iorwf	??___ftpack+1,w,c
  3312  000E22  101A               	iorwf	??___ftpack+2,w,c
  3313  000E24  B4D8               	btfsc	status,2,c
  3314  000E26  D006               	goto	i1l405
  3315  000E28  D7E6               	goto	i1l403
  3316  000E2A  0616               	decf	___ftpack@exp,f,c
  3317  000E2C  90D8               	bcf	status,0,c
  3318  000E2E  3613               	rlcf	___ftpack@arg,f,c
  3319  000E30  3614               	rlcf	___ftpack@arg+1,f,c
  3320  000E32  3615               	rlcf	___ftpack@arg+2,f,c
  3321  000E34                     i1l405:
  3322  000E34  BE14               	btfsc	___ftpack@arg+1,7,c
  3323  000E36  D003               	goto	i1u62_20
  3324  000E38  0E02               	movlw	2
  3325  000E3A  6016               	cpfslt	___ftpack@exp,c
  3326  000E3C  D7F6               	goto	i1l406
  3327  000E3E                     i1u62_20:
  3328  000E3E  A016               	btfss	___ftpack@exp,0,c
  3329  000E40  9E14               	bcf	___ftpack@arg+1,7,c
  3330  000E42  90D8               	bcf	status,0,c
  3331  000E44  3216               	rrcf	___ftpack@exp,f,c
  3332  000E46  5016               	movf	___ftpack@exp,w,c
  3333  000E48  1215               	iorwf	___ftpack@arg+2,f,c
  3334  000E4A  5017               	movf	___ftpack@sign,w,c
  3335  000E4C  A4D8               	btfss	status,2,c
  3336  000E4E  8E15               	bsf	___ftpack@arg+2,7,c
  3337  000E50  C013  F013         	movff	___ftpack@arg,?___ftpack
  3338  000E54  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3339  000E58  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3340  000E5C  0012               	return	
  3341  000E5E                     __end_of___ftpack:
  3342                           	opt stack 0
  3343                           pclatu	equ	0xFFB
  3344                           pclath	equ	0xFFA
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           prodh	equ	0xFF4
  3350                           prodl	equ	0xFF3
  3351                           intcon	equ	0xFF2
  3352                           intcon2	equ	0xFF1
  3353                           intcon3	equ	0xFF0
  3354                           postinc0	equ	0xFEE
  3355                           fsr0h	equ	0xFEA
  3356                           fsr0l	equ	0xFE9
  3357                           wreg	equ	0xFE8
  3358                           fsr1h	equ	0xFE2
  3359                           fsr1l	equ	0xFE1
  3360                           bsr	equ	0xFE0
  3361                           fsr2h	equ	0xFDA
  3362                           fsr2l	equ	0xFD9
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _HighPriorityISR *****************
  3366 ;; Defined at:
  3367 ;;		line 18 in file "main.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3383 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3384 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3385 ;;Total ram usage:       18 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		Interrupt level 2
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	intcode
  3395  000008                     __pintcode:
  3396                           	opt stack 0
  3397  000008                     _HighPriorityISR:
  3398                           	opt stack 24
  3399                           
  3400                           ;incstack = 0
  3401  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3402  00000A  ED7E  F006         	call	int_func,f	;refresh shadow registers
  3403                           pclatu	equ	0xFFB
  3404                           pclath	equ	0xFFA
  3405                           tblptru	equ	0xFF8
  3406                           tblptrh	equ	0xFF7
  3407                           tblptrl	equ	0xFF6
  3408                           tablat	equ	0xFF5
  3409                           prodh	equ	0xFF4
  3410                           prodl	equ	0xFF3
  3411                           intcon	equ	0xFF2
  3412                           intcon2	equ	0xFF1
  3413                           intcon3	equ	0xFF0
  3414                           postinc0	equ	0xFEE
  3415                           fsr0h	equ	0xFEA
  3416                           fsr0l	equ	0xFE9
  3417                           wreg	equ	0xFE8
  3418                           fsr1h	equ	0xFE2
  3419                           fsr1l	equ	0xFE1
  3420                           bsr	equ	0xFE0
  3421                           fsr2h	equ	0xFDA
  3422                           fsr2l	equ	0xFD9
  3423                           status	equ	0xFD8
  3424                           
  3425                           	psect	intcode_body
  3426  000CFC                     __pintcode_body:
  3427                           	opt stack 24
  3428  000CFC                     int_func:
  3429                           	opt stack 24
  3430  000CFC  0006               	pop		; remove dummy address from shadow register refresh
  3431  000CFE  CFFA F001          	movff	pclath,??_HighPriorityISR
  3432  000D02  CFFB F002          	movff	pclatu,??_HighPriorityISR+1
  3433  000D06  CFE9 F003          	movff	fsr0l,??_HighPriorityISR+2
  3434  000D0A  CFEA F004          	movff	fsr0h,??_HighPriorityISR+3
  3435  000D0E  CFE1 F005          	movff	fsr1l,??_HighPriorityISR+4
  3436  000D12  CFE2 F006          	movff	fsr1h,??_HighPriorityISR+5
  3437  000D16  CFD9 F007          	movff	fsr2l,??_HighPriorityISR+6
  3438  000D1A  CFDA F008          	movff	fsr2h,??_HighPriorityISR+7
  3439  000D1E  CFF3 F009          	movff	prodl,??_HighPriorityISR+8
  3440  000D22  CFF4 F00A          	movff	prodh,??_HighPriorityISR+9
  3441  000D26  CFF6 F00B          	movff	tblptrl,??_HighPriorityISR+10
  3442  000D2A  CFF7 F00C          	movff	tblptrh,??_HighPriorityISR+11
  3443  000D2E  CFF8 F00D          	movff	tblptru,??_HighPriorityISR+12
  3444  000D32  CFF5 F00E          	movff	tablat,??_HighPriorityISR+13
  3445  000D36  C046  F00F         	movff	btemp,??_HighPriorityISR+14
  3446  000D3A  C047  F010         	movff	btemp+1,??_HighPriorityISR+15
  3447  000D3E  C048  F011         	movff	btemp+2,??_HighPriorityISR+16
  3448  000D42  C049  F012         	movff	btemp+3,??_HighPriorityISR+17
  3449                           
  3450                           ;main.c: 19: INTCONbits.TMR0IF = 0;
  3451  000D46  94F2               	bcf	intcon,2,c	;volatile
  3452                           
  3453                           ;main.c: 20: TMR0L = 100;
  3454  000D48  0E64               	movlw	100
  3455  000D4A  6ED6               	movwf	4054,c	;volatile
  3456                           
  3457                           ;main.c: 21: ADCON0bits.GO_DONE = 1;
  3458  000D4C  82C2               	bsf	4034,1,c	;volatile
  3459                           
  3460                           ;main.c: 22: if(contador == 100){
  3461  000D4E  0E64               	movlw	100
  3462  000D50  0100               	movlb	0	; () banked
  3463  000D52  19A4               	xorwf	_contador& (0+255),w,b
  3464  000D54  A4D8               	btfss	status,2,c
  3465  000D56  D006               	goto	i2l77
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;main.c: 23: contador = 0;
  3469  000D58  0E00               	movlw	0
  3470  000D5A  6FA4               	movwf	_contador& (0+255),b
  3471                           
  3472                           ;main.c: 24: leiturapotenciometro = 1;
  3473  000D5C  0E00               	movlw	0
  3474  000D5E  6E41               	movwf	_leiturapotenciometro+1,c
  3475  000D60  0E01               	movlw	1
  3476  000D62  6E40               	movwf	_leiturapotenciometro,c
  3477  000D64                     i2l77:
  3478                           
  3479                           ; BSR set to: 0
  3480                           
  3481                           ; BSR set to: 0
  3482  000D64  C012  F049         	movff	??_HighPriorityISR+17,btemp+3
  3483  000D68  C011  F048         	movff	??_HighPriorityISR+16,btemp+2
  3484  000D6C  C010  F047         	movff	??_HighPriorityISR+15,btemp+1
  3485  000D70  C00F  F046         	movff	??_HighPriorityISR+14,btemp
  3486  000D74  C00E  FFF5         	movff	??_HighPriorityISR+13,tablat
  3487  000D78  C00D  FFF8         	movff	??_HighPriorityISR+12,tblptru
  3488  000D7C  C00C  FFF7         	movff	??_HighPriorityISR+11,tblptrh
  3489  000D80  C00B  FFF6         	movff	??_HighPriorityISR+10,tblptrl
  3490  000D84  C00A  FFF4         	movff	??_HighPriorityISR+9,prodh
  3491  000D88  C009  FFF3         	movff	??_HighPriorityISR+8,prodl
  3492  000D8C  C008  FFDA         	movff	??_HighPriorityISR+7,fsr2h
  3493  000D90  C007  FFD9         	movff	??_HighPriorityISR+6,fsr2l
  3494  000D94  C006  FFE2         	movff	??_HighPriorityISR+5,fsr1h
  3495  000D98  C005  FFE1         	movff	??_HighPriorityISR+4,fsr1l
  3496  000D9C  C004  FFEA         	movff	??_HighPriorityISR+3,fsr0h
  3497  000DA0  C003  FFE9         	movff	??_HighPriorityISR+2,fsr0l
  3498  000DA4  C002  FFFB         	movff	??_HighPriorityISR+1,pclatu
  3499  000DA8  C001  FFFA         	movff	??_HighPriorityISR,pclath
  3500  000DAC  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3501  000DAE  0011               	retfie		f
  3502  000DB0                     __end_of_HighPriorityISR:
  3503                           	opt stack 0
  3504                           pclatu	equ	0xFFB
  3505                           pclath	equ	0xFFA
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           prodh	equ	0xFF4
  3511                           prodl	equ	0xFF3
  3512                           intcon	equ	0xFF2
  3513                           intcon2	equ	0xFF1
  3514                           intcon3	equ	0xFF0
  3515                           postinc0	equ	0xFEE
  3516                           fsr0h	equ	0xFEA
  3517                           fsr0l	equ	0xFE9
  3518                           wreg	equ	0xFE8
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           bsr	equ	0xFE0
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           pclatu	equ	0xFFB
  3526                           pclath	equ	0xFFA
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           prodh	equ	0xFF4
  3532                           prodl	equ	0xFF3
  3533                           intcon	equ	0xFF2
  3534                           intcon2	equ	0xFF1
  3535                           intcon3	equ	0xFF0
  3536                           postinc0	equ	0xFEE
  3537                           fsr0h	equ	0xFEA
  3538                           fsr0l	equ	0xFE9
  3539                           wreg	equ	0xFE8
  3540                           fsr1h	equ	0xFE2
  3541                           fsr1l	equ	0xFE1
  3542                           bsr	equ	0xFE0
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547                           	psect	rparam
  3548  0000                     pclatu	equ	0xFFB
  3549                           pclath	equ	0xFFA
  3550                           tblptru	equ	0xFF8
  3551                           tblptrh	equ	0xFF7
  3552                           tblptrl	equ	0xFF6
  3553                           tablat	equ	0xFF5
  3554                           prodh	equ	0xFF4
  3555                           prodl	equ	0xFF3
  3556                           intcon	equ	0xFF2
  3557                           intcon2	equ	0xFF1
  3558                           intcon3	equ	0xFF0
  3559                           postinc0	equ	0xFEE
  3560                           fsr0h	equ	0xFEA
  3561                           fsr0l	equ	0xFE9
  3562                           wreg	equ	0xFE8
  3563                           fsr1h	equ	0xFE2
  3564                           fsr1l	equ	0xFE1
  3565                           bsr	equ	0xFE0
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           
  3570                           	psect	temp
  3571  000046                     btemp:
  3572                           	opt stack 0
  3573  000046                     	ds	1
  3574  0000                     int$flags	set	btemp
  3575  0000                     wtemp6	set	btemp+1
  3576                           pclatu	equ	0xFFB
  3577                           pclath	equ	0xFFA
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           intcon	equ	0xFF2
  3585                           intcon2	equ	0xFF1
  3586                           intcon3	equ	0xFF0
  3587                           postinc0	equ	0xFEE
  3588                           fsr0h	equ	0xFEA
  3589                           fsr0l	equ	0xFE9
  3590                           wreg	equ	0xFE8
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           bsr	equ	0xFE0
  3594                           fsr2h	equ	0xFDA
  3595                           fsr2l	equ	0xFD9
  3596                           status	equ	0xFD8


Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      69
    BANK0           160     58      69
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityISR in COMRAM

    _LowPriorityISR->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _HighPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    _putsXLCD->_WriteDataXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _LowPriorityISR in BANK0

    None.

Critical Paths under _HighPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowPriorityISR in BANK1

    None.

Critical Paths under _HighPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowPriorityISR in BANK2

    None.

Critical Paths under _HighPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityISR in BANK3

    None.

Critical Paths under _HighPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityISR in BANK4

    None.

Critical Paths under _HighPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityISR in BANK5

    None.

Critical Paths under _HighPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityISR in BANK6

    None.

Critical Paths under _HighPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityISR in BANK7

    None.

Critical Paths under _HighPriorityISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    3544
                                             36 BANK0     22    22      0
                           _OpenXLCD
                       _WriteCmdXLCD
                      _WriteDataXLCD
                            ___awdiv
                            ___awmod
                            ___lldiv
                            ___llmod
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     241
                                             24 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                             23 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     463
                                             23 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     466
                                             23 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     904
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     908
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     110
                                             24 BANK0      1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                             23 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      44
                                             23 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowPriorityISR                                      23    23      0    6110
                                              0 BANK0     23    23      0
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             3     0      3    2562
                                             26 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     404
                                             44 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    3144
                                             29 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2388
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighPriorityISR                                     18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   _WriteDataXLCD
     _DelayFor18TCY
   ___awdiv
   ___awmod
   ___lldiv
   ___llmod
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY

 _LowPriorityISR (ROOT)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack

 _HighPriorityISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3A      45       5       43.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      45       1       73.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8A      20        0.0%
DATA                 0      0      8A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 28 18:24:08 2023

                      l90 08DA              ___awdiv@sign 007C                        _dc 0042  
                      bsr 000FE0                       l123 0E9C                       l132 0EC8  
                     l141 0EF8                       l135 0ED8                       l152 11E2  
                     l129 0EB8                       l138 0EE8                       l170 11F8  
                     l360 0F78                       l352 0F20                       l361 0F86  
                     l353 0F30                       l169 1218                       l355 0F4E  
                     l356 0F46                       l372 1064                       l540 1002  
                     l373 106E                       l365 102A                       l374 107C  
                     l366 1036                       l550 10DC                       l359 0F6E  
                     l535 0FC0                       l368 104C                       l536 0FB4  
                     l369 1044                       l545 10A6                       l546 109A  
                     l539 0FF4                       l549 10CE                       _PR2 000FCB  
                     u650 0EA6                       u830 0F52   __end_of_HighPriorityISR 0DB0  
                     u890 1050     __size_of_WriteCmdXLCD 0044              ___awmod@sign 007C  
                     wreg 000FE8              __CFG_FOSC$HS 000000              __CFG_LVP$OFF 000000  
            __CFG_WDT$OFF 000000                      STR_1 0801                      STR_2 0805  
                    u1010 0FC4                      u1040 10AA                      u1117 08D0  
                    u1127 1282                      u1137 1296                      u1147 12A4  
           __CFG_DEBUG$ON 000000                      i1l83 00E0                      i1l84 0128  
                    i2l77 0D64      _leiturapotenciometro 0040                      _main 080A  
            ___ftpack@arg 0013                      _duty 00A2              ___ftpack@exp 0016  
                    _temp 003C                      fsr0h 000FEA                      fsr1h 000FE2  
                    fsr2h 000FDA                      fsr0l 000FE9                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 0046    __size_of_WriteDataXLCD 0044  
                    prodh 000FF4                      prodl 000FF3                      start 0180  
           __CFG_MCLRE$ON 000000              ___ftmul@cntr 002B              ___param_bank 000000  
            ___ftmul@sign 002C              ___fttol@exp1 003B              ___fttol@lval 0037  
            _WriteCmdXLCD 1178             ?_SetDDRamAddr 0001                     ?_main 0001  
         __end_of___awdiv 0F90           __end_of___awmod 1086           __end_of___lldiv 1014  
         __end_of___ftmul 0CFC                     _T0CON 000FD5           ___awdiv@divisor 0079  
         __end_of___llmod 10EE           __end_of___fttol 0C08                     i1l400 0DCE  
                   i1l402 0E0C                     i1l403 0DF6                     i1l405 0E34  
                   i1l501 0BB6                     i1l406 0E2A                     i1l510 0BF6  
                   i1l502 0BA6                     i1l507 0BDA                     i1l508 0BCE  
                   i1l480 0C58                     i1l481 0C8A                     i1l482 0C9A  
                   i1l484 0CB2                     i1l485 0CC2                     i1l478 0C30  
                   i1l399 0DD8                     i1l499 0B40           ___awdiv@counter 007B  
                   _TMR0L 000FD6                     _PORTD 000F83                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   u74_21 0C18                     u76_21 0C40                     u92_21 0B24  
           ___ftpack@sign 0017                     pclath 000FFA                     tablat 000FF5  
                   status 000FD8                     wtemp6 0047           __initialization 122C  
            __end_of_main 0B14          __end_of_BusyXLCD 11F6        __size_of_DelayXLCD 0014  
   __size_of_DelayPORXLCD 0014            ??_SetDDRamAddr 0077          __end_of_OpenXLCD 0F0A  
                  ??_main 0084             ___fttol@sign1 0036             __activetblptr 000001  
           _WriteDataXLCD 1134          ?_HighPriorityISR 0001                    _ADCON1 000FC1  
                  _ADCON2 000FC0          ___llmod@dividend 0077                    _ADRESH 000FC4  
                  _ADRESL 000FC3                    _CCPR1L 000FBE          ___awdiv@dividend 0077  
        ??_LowPriorityISR 0060          __end_of___ftpack 0E5E          __end_of___lwtoft 127A  
            _DelayPORXLCD 128E                 ??___awdiv 007B                 ??___awmod 007B  
               ??___lldiv 007F                 ??___ftmul 0024                 ??___llmod 007F  
               ??___fttol 0031                    clear_0 1232                    clear_1 123E  
        ___awdiv@quotient 007D           ___awmod@divisor 0079                    _result 009E  
         ___awmod@counter 007B            ?_WriteDataXLCD 0001     ___ftmul@f3_as_product 0028  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8          __end_of_putsXLCD 122C         __end_of_DelayXLCD 128E  
              __accesstop 0060   __end_of__initialization 1244             ___rparam_used 000001  
              ___ftmul@f1 001E                ___ftmul@f2 0021                ___fttol@f1 002D  
          __pcstackCOMRAM 0001                ___lwtoft@c 001B    __size_of_DelayFor18TCY 000A  
              __pbssBANK0 009A                 ?_BusyXLCD 0001           WriteCmdXLCD@cmd 0077  
    __end_of_SetDDRamAddr 1134                 ?_OpenXLCD 0001         WriteDataXLCD@data 0077  
         ??_WriteDataXLCD 0077                 ?___ftpack 0013                 ?___lwtoft 001B  
                 i1u62_20 0E3E                   i1u58_20 0DC0                   i1u94_20 0B5E  
                 i1u94_25 0B56                   i1u98_20 0BE0                ??_BusyXLCD 0077  
              ??_OpenXLCD 0078                   __Hparam 0000                   __Lparam 0000  
                 ___awdiv 0F0A             _DelayFor18TCY 12A2                   ___awmod 1014  
                 ___lldiv 0F90                   ___ftmul 0C08                   ___llmod 1086  
                 ___fttol 0B14                 ?_putsXLCD 0078              __psmallconst 0800  
                 __pcinit 122C                ??___ftpack 0018                   __ramtop 0800  
                 __ptext0 080A                   __ptext1 11F6                   __ptext2 1134  
                 __ptext3 1086                   __ptext4 0F90                   __ptext5 1014  
                 __ptext6 0F0A                   __ptext7 0E5E                   __ptext8 1178  
                 __ptext9 10EE                ??___lwtoft 001E                 _T2CONbits 000FCA  
        ___awmod@dividend 0077                   _result2 009A                   main@dez 008A  
                 main@aux 0096                   main@mil 0086                   main@uni 008C  
          __pintcode_body 0CFC      end_of_initialization 1244                   int_func 0CFC  
         ___lldiv@divisor 007B           ___lldiv@counter 0083            ?_DelayFor18TCY 0001  
                 postinc0 000FEE                ??_putsXLCD 007A                 _TRISAbits 000F92  
               _TRISEbits 000F96     __size_of_SetDDRamAddr 0046  __size_of_HighPriorityISR 0DA8  
             _CCP1CONbits 000FBD               _CCP2CONbits 000FBA                 _DelayXLCD 127A  
             ___ftmul@exp 0027              _SetDDRamAddr 10EE        SetDDRamAddr@DDaddr 0077  
     start_initialization 122C           ___llmod@divisor 007B         __size_of_BusyXLCD 003A  
         ___llmod@counter 007F                ?_DelayXLCD 0001           ??_DelayFor18TCY 0077  
 __size_of_LowPriorityISR 0168         __size_of_OpenXLCD 00AC             ?_WriteCmdXLCD 0001  
       __size_of___ftpack 00AE               __pbssCOMRAM 003C         __size_of___lwtoft 0024  
           __pcstackBANK0 0060         ??_HighPriorityISR 0001            putsXLCD@buffer 0078  
               __pintcode 0008            ??_WriteCmdXLCD 0077                  ?___awdiv 0077  
                ?___awmod 0077                  ?___lldiv 0077                  ?___ftmul 001E  
                ?___llmod 0077                  ?___fttol 002D               __pintcodelo 0018  
       __size_of_putsXLCD 0036     __end_of_WriteDataXLCD 1178               __smallconst 0800  
                _LATEbits 000F8D               ??_DelayXLCD 0077                  _IPR1bits 000F9F  
                _PIE1bits 000F9D             ?_DelayPORXLCD 0001                  _PIR1bits 000F9E  
         OpenXLCD@lcdtype 0078                  _RCONbits 000FD0                 _valorconv 0044  
              _ADCON0bits 000FC2                 main@cent2 0090               _INTCON2bits 000FF1  
             _INTCON3bits 000FF0                  _BusyXLCD 11BC            ??_DelayPORXLCD 0077  
                _OpenXLCD 0E5E                  __Hrparam 0000            _LowPriorityISR 0018  
                __Lrparam 0000              __Lsmallconst 0800          __size_of___awdiv 0086  
        __size_of___awmod 0072          __size_of___lldiv 0084          __size_of___ftmul 00F4  
        __size_of___llmod 0068          __size_of___fttol 00F4                  ___ftpack 0DB0  
                ___lwtoft 1256                  __ptext10 127A                  __ptext11 128E  
                __ptext12 11BC                  __ptext13 12A2                  __ptext15 1256  
                __ptext16 0B14                  __ptext17 0C08                  __ptext18 0DB0  
    __end_of_WriteCmdXLCD 11BC                  _contador 00A4             __size_of_main 030A  
  __end_of_LowPriorityISR 0180                  int$flags 0046                  _putsXLCD 11F6  
                main@dez2 0092                  main@cent 0088                  main@aux2 0098  
                main@mil2 008E                  main@uni2 0094     __CFG_CPUDIV$OSC1_PLL2 000000  
              _INTCONbits 000FF2           _HighPriorityISR 0008                  intlevel1 0000  
                intlevel2 0000          ___lldiv@dividend 0077           ?_LowPriorityISR 0001  
   __end_of_DelayFor18TCY 12AC      __end_of_DelayPORXLCD 12A2          ___lldiv@quotient 007F  
