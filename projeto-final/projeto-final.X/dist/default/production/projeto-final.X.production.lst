

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Nov 29 12:05:43 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4550 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataBANK0
    76  001420                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _duty
    80  001420  0300               	dw	768
    81                           
    82                           ;initializer for _dconst
    83  001422  0300               	dw	768
    84  0000                     _LATEbits	set	3981
    85  0000                     _TRISEbits	set	3990
    86  0000                     _TRISD	set	3989
    87  0000                     _PORTD	set	3971
    88  0000                     _CCP2CONbits	set	4026
    89  0000                     _ADCON2	set	4032
    90  0000                     _ADCON1	set	4033
    91  0000                     _TRISAbits	set	3986
    92  0000                     _T0CON	set	4053
    93  0000                     _INTCON2bits	set	4081
    94  0000                     _INTCON3bits	set	4080
    95  0000                     _RCONbits	set	4048
    96  0000                     _IPR1bits	set	3999
    97  0000                     _PIE1bits	set	3997
    98  0000                     _CCPR1L	set	4030
    99  0000                     _PR2	set	4043
   100  0000                     _T2CONbits	set	4042
   101  0000                     _CCP1CONbits	set	4029
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISC	set	3988
   104  0000                     _TRISA	set	3986
   105  0000                     _ADRESL	set	4035
   106  0000                     _PIR1bits	set	3998
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _TMR0L	set	4054
   109  0000                     _INTCONbits	set	4082
   110  0000                     _ADRESH	set	4036
   111                           
   112                           	psect	smallconst
   113  000800                     __psmallconst:
   114                           	opt stack 0
   115  000800  00                 	db	0
   116  000801                     STR_3:
   117                           
   118                           ; BSR set to: 0
   119  000801  52                 	db	82	;'R'
   120  000802  61                 	db	97	;'a'
   121  000803  7A                 	db	122	;'z'
   122  000804  61                 	db	97	;'a'
   123  000805  6F                 	db	111	;'o'
   124  000806  3A                 	db	58	;':'
   125  000807  00                 	db	0
   126  000808                     STR_1:
   127                           
   128                           ; BSR set to: 0
   129  000808  54                 	db	84	;'T'
   130  000809  61                 	db	97	;'a'
   131  00080A  3A                 	db	58	;':'
   132  00080B  00                 	db	0
   133  00080C                     STR_2:
   134                           
   135                           ; BSR set to: 0
   136  00080C  54                 	db	84	;'T'
   137  00080D  72                 	db	114	;'r'
   138  00080E  3A                 	db	58	;':'
   139  00080F  00                 	db	0
   140                           
   141                           ; #config settings
   142  000810  00                 	db	0	; dummy byte at the end
   143  0000                     
   144                           	psect	cinit
   145  00121A                     __pcinit:
   146                           	opt stack 0
   147  00121A                     start_initialization:
   148                           	opt stack 0
   149  00121A                     __initialization:
   150                           	opt stack 0
   151                           
   152                           ; Initialize objects allocated to BANK0 (4 bytes)
   153                           ; load TBLPTR registers with __pidataBANK0
   154  00121A  0E20               	movlw	low __pidataBANK0
   155  00121C  6EF6               	movwf	tblptrl,c
   156  00121E  0E14               	movlw	high __pidataBANK0
   157  001220  6EF7               	movwf	tblptrh,c
   158  001222  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   159  001224  6EF8               	movwf	tblptru,c
   160  001226  EE00  F0AB         	lfsr	0,__pdataBANK0
   161  00122A  EE10 F004          	lfsr	1,4
   162  00122E                     copy_data0:
   163  00122E  0009               	tblrd		*+
   164  001230  CFF5 FFEE          	movff	tablat,postinc0
   165  001234  50E5               	movf	postdec1,w,c
   166  001236  50E1               	movf	fsr1l,w,c
   167  001238  E1FA               	bnz	copy_data0
   168                           
   169                           ; Clear objects allocated to BANK0 (9 bytes)
   170  00123A  EE00  F0A2         	lfsr	0,__pbssBANK0
   171  00123E  0E09               	movlw	9
   172  001240                     clear_0:
   173  001240  6AEE               	clrf	postinc0,c
   174  001242  06E8               	decf	wreg,f,c
   175  001244  E1FD               	bnz	clear_0
   176                           
   177                           ; Clear objects allocated to COMRAM (8 bytes)
   178  001246  EE00  F042         	lfsr	0,__pbssCOMRAM
   179  00124A  0E08               	movlw	8
   180  00124C                     clear_1:
   181  00124C  6AEE               	clrf	postinc0,c
   182  00124E  06E8               	decf	wreg,f,c
   183  001250  E1FD               	bnz	clear_1
   184  001252                     end_of_initialization:
   185                           	opt stack 0
   186  001252                     __end_of__initialization:
   187                           	opt stack 0
   188  001252  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   189  001254  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   190  001256  0E00               	movlw	low (__Lsmallconst shr (0+16))
   191  001258  6EF8               	movwf	tblptru,c
   192  00125A  0E08               	movlw	high __Lsmallconst
   193  00125C  6EF7               	movwf	tblptrh,c
   194  00125E  0100               	movlb	0
   195  001260  EF09  F004         	goto	_main	;jump to C main() function
   196                           tblptru	equ	0xFF8
   197                           tblptrh	equ	0xFF7
   198                           tblptrl	equ	0xFF6
   199                           tablat	equ	0xFF5
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           postdec1	equ	0xFE5
   203                           fsr1l	equ	0xFE1
   204                           
   205                           	psect	bssCOMRAM
   206  000042                     __pbssCOMRAM:
   207                           	opt stack 0
   208  000042                     _result2:
   209                           	opt stack 0
   210  000042                     	ds	4
   211  000046                     _leiturapotenciometro:
   212                           	opt stack 0
   213  000046                     	ds	2
   214  000048                     _valorconv:
   215                           	opt stack 0
   216  000048                     	ds	2
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           postdec1	equ	0xFE5
   224                           fsr1l	equ	0xFE1
   225                           
   226                           	psect	bssBANK0
   227  0000A2                     __pbssBANK0:
   228                           	opt stack 0
   229  0000A2                     _dc:
   230                           	opt stack 0
   231  0000A2                     	ds	4
   232  0000A6                     _result:
   233                           	opt stack 0
   234  0000A6                     	ds	4
   235  0000AA                     _contador:
   236                           	opt stack 0
   237  0000AA                     	ds	1
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1l	equ	0xFE1
   246                           
   247                           	psect	dataBANK0
   248  0000AB                     __pdataBANK0:
   249                           	opt stack 0
   250  0000AB                     _duty:
   251                           	opt stack 0
   252  0000AB                     	ds	2
   253  0000AD                     _dconst:
   254                           	opt stack 0
   255  0000AD                     	ds	2
   256                           tblptru	equ	0xFF8
   257                           tblptrh	equ	0xFF7
   258                           tblptrl	equ	0xFF6
   259                           tablat	equ	0xFF5
   260                           postinc0	equ	0xFEE
   261                           wreg	equ	0xFE8
   262                           postdec1	equ	0xFE5
   263                           fsr1l	equ	0xFE1
   264                           
   265                           	psect	cstackBANK0
   266  000060                     __pcstackBANK0:
   267                           	opt stack 0
   268  000060                     ??_LowPriorityISR:
   269                           
   270                           ; 1 bytes @ 0x0
   271  000060                     	ds	23
   272  000077                     ??_DelayPORXLCD:
   273  000077                     ??_DelayXLCD:
   274  000077                     ?___wmul:
   275                           	opt stack 0
   276  000077                     ?___awdiv:
   277                           	opt stack 0
   278  000077                     ?___awmod:
   279                           	opt stack 0
   280  000077                     ?___lldiv:
   281                           	opt stack 0
   282  000077                     ?___llmod:
   283                           	opt stack 0
   284  000077                     SetDDRamAddr@DDaddr:
   285                           	opt stack 0
   286  000077                     WriteCmdXLCD@cmd:
   287                           	opt stack 0
   288  000077                     WriteDataXLCD@data:
   289                           	opt stack 0
   290  000077                     ___wmul@multiplier:
   291                           	opt stack 0
   292  000077                     ___awdiv@dividend:
   293                           	opt stack 0
   294  000077                     ___awmod@dividend:
   295                           	opt stack 0
   296  000077                     ___lldiv@dividend:
   297                           	opt stack 0
   298  000077                     ___llmod@dividend:
   299                           	opt stack 0
   300                           
   301                           ; 4 bytes @ 0x17
   302  000077                     	ds	1
   303  000078                     OpenXLCD@lcdtype:
   304                           	opt stack 0
   305  000078                     putsXLCD@buffer:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x18
   309  000078                     	ds	1
   310  000079                     ___wmul@multiplicand:
   311                           	opt stack 0
   312  000079                     ___awdiv@divisor:
   313                           	opt stack 0
   314  000079                     ___awmod@divisor:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x19
   318  000079                     	ds	1
   319  00007A                     
   320                           ; 1 bytes @ 0x1A
   321  00007A                     	ds	1
   322  00007B                     ___awdiv@counter:
   323                           	opt stack 0
   324  00007B                     ___awmod@counter:
   325                           	opt stack 0
   326  00007B                     ___wmul@product:
   327                           	opt stack 0
   328  00007B                     ___lldiv@divisor:
   329                           	opt stack 0
   330  00007B                     ___llmod@divisor:
   331                           	opt stack 0
   332                           
   333                           ; 4 bytes @ 0x1B
   334  00007B                     	ds	1
   335  00007C                     ___awdiv@sign:
   336                           	opt stack 0
   337  00007C                     ___awmod@sign:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0x1C
   341  00007C                     	ds	1
   342  00007D                     ___awdiv@quotient:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x1D
   346  00007D                     	ds	2
   347  00007F                     ___llmod@counter:
   348                           	opt stack 0
   349  00007F                     ___lldiv@quotient:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0x1F
   353  00007F                     	ds	4
   354  000083                     ___lldiv@counter:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x23
   358  000083                     	ds	1
   359  000084                     ??_main:
   360                           
   361                           ; 1 bytes @ 0x24
   362  000084                     	ds	4
   363  000088                     main@result3:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x28
   367  000088                     	ds	2
   368  00008A                     main@cent:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x2A
   372  00008A                     	ds	2
   373  00008C                     main@dez:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x2C
   377  00008C                     	ds	2
   378  00008E                     main@uni:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x2E
   382  00008E                     	ds	2
   383  000090                     main@cent2:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x30
   387  000090                     	ds	2
   388  000092                     main@dez2:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x32
   392  000092                     	ds	2
   393  000094                     main@uni2:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x34
   397  000094                     	ds	2
   398  000096                     main@cent3:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x36
   402  000096                     	ds	2
   403  000098                     main@dez3:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x38
   407  000098                     	ds	2
   408  00009A                     main@uni3:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x3A
   412  00009A                     	ds	2
   413  00009C                     main@aux3:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x3C
   417  00009C                     	ds	2
   418  00009E                     main@aux:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x3E
   422  00009E                     	ds	2
   423  0000A0                     main@aux2:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x40
   427  0000A0                     	ds	2
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	cstackCOMRAM
   438  000001                     __pcstackCOMRAM:
   439                           	opt stack 0
   440  000001                     ??_HighPriorityISR:
   441  000001                     
   442                           ; 1 bytes @ 0x0
   443  000001                     	ds	18
   444  000013                     ?___ftpack:
   445                           	opt stack 0
   446  000013                     ___ftpack@arg:
   447                           	opt stack 0
   448                           
   449                           ; 3 bytes @ 0x12
   450  000013                     	ds	3
   451  000016                     ___ftpack@exp:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x15
   455  000016                     	ds	1
   456  000017                     ___ftpack@sign:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x16
   460  000017                     	ds	1
   461  000018                     ??___ftpack:
   462                           
   463                           ; 1 bytes @ 0x17
   464  000018                     	ds	3
   465  00001B                     ?___lltoft:
   466                           	opt stack 0
   467  00001B                     ?___lwtoft:
   468                           	opt stack 0
   469  00001B                     ___lwtoft@c:
   470                           	opt stack 0
   471  00001B                     ___lltoft@c:
   472                           	opt stack 0
   473                           
   474                           ; 4 bytes @ 0x1A
   475  00001B                     	ds	3
   476  00001E                     
   477                           ; 1 bytes @ 0x1D
   478  00001E                     	ds	1
   479  00001F                     ??___lltoft:
   480                           
   481                           ; 1 bytes @ 0x1E
   482  00001F                     	ds	4
   483  000023                     ___lltoft@exp:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x22
   487  000023                     	ds	1
   488  000024                     ?___ftmul:
   489                           	opt stack 0
   490  000024                     ___ftmul@f1:
   491                           	opt stack 0
   492                           
   493                           ; 3 bytes @ 0x23
   494  000024                     	ds	3
   495  000027                     ___ftmul@f2:
   496                           	opt stack 0
   497                           
   498                           ; 3 bytes @ 0x26
   499  000027                     	ds	3
   500  00002A                     ??___ftmul:
   501                           
   502                           ; 1 bytes @ 0x29
   503  00002A                     	ds	3
   504  00002D                     ___ftmul@exp:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x2C
   508  00002D                     	ds	1
   509  00002E                     ___ftmul@f3_as_product:
   510                           	opt stack 0
   511                           
   512                           ; 3 bytes @ 0x2D
   513  00002E                     	ds	3
   514  000031                     ___ftmul@cntr:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x30
   518  000031                     	ds	1
   519  000032                     ___ftmul@sign:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x31
   523  000032                     	ds	1
   524  000033                     ?___fttol:
   525                           	opt stack 0
   526  000033                     ___fttol@f1:
   527                           	opt stack 0
   528                           
   529                           ; 3 bytes @ 0x32
   530  000033                     	ds	4
   531  000037                     ??___fttol:
   532                           
   533                           ; 1 bytes @ 0x36
   534  000037                     	ds	5
   535  00003C                     ___fttol@sign1:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x3B
   539  00003C                     	ds	1
   540  00003D                     ___fttol@lval:
   541                           	opt stack 0
   542                           
   543                           ; 4 bytes @ 0x3C
   544  00003D                     	ds	4
   545  000041                     ___fttol@exp1:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x40
   549  000041                     	ds	1
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           
   559 ;;
   560 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   561 ;;
   562 ;; *************** function _main *****************
   563 ;; Defined at:
   564 ;;		line 51 in file "main.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  aux2            2   64[BANK0 ] int 
   569 ;;  aux             2   62[BANK0 ] int 
   570 ;;  aux3            2   60[BANK0 ] int 
   571 ;;  uni3            2   58[BANK0 ] int 
   572 ;;  dez3            2   56[BANK0 ] int 
   573 ;;  cent3           2   54[BANK0 ] int 
   574 ;;  uni2            2   52[BANK0 ] int 
   575 ;;  dez2            2   50[BANK0 ] int 
   576 ;;  cent2           2   48[BANK0 ] int 
   577 ;;  uni             2   46[BANK0 ] int 
   578 ;;  dez             2   44[BANK0 ] int 
   579 ;;  cent            2   42[BANK0 ] int 
   580 ;;  result3         2   40[BANK0 ] int 
   581 ;;  mil2            2    0        int 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   591 ;;      Params:         0       0       0       0       0       0       0       0       0
   592 ;;      Locals:         0      26       0       0       0       0       0       0       0
   593 ;;      Temps:          0       4       0       0       0       0       0       0       0
   594 ;;      Totals:         0      30       0       0       0       0       0       0       0
   595 ;;Total ram usage:       30 bytes
   596 ;; Hardware stack levels required when called:    7
   597 ;; This function calls:
   598 ;;		_OpenXLCD
   599 ;;		_WriteCmdXLCD
   600 ;;		_WriteDataXLCD
   601 ;;		___awdiv
   602 ;;		___awmod
   603 ;;		___lldiv
   604 ;;		___llmod
   605 ;;		___wmul
   606 ;;		_putsXLCD
   607 ;; This function is called by:
   608 ;;		Startup code after reset
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text0
   613  000812                     __ptext0:
   614                           	opt stack 0
   615  000812                     _main:
   616                           	opt stack 24
   617                           
   618                           ;main.c: 52: int cent,aux,dez,uni;
   619                           ;main.c: 53: int mil2,cent2,aux2,dez2,uni2;
   620                           ;main.c: 54: int result3,cent3,aux3,dez3,uni3;
   621                           ;main.c: 56: TRISA = 0xFF;
   622                           
   623                           ;incstack = 0
   624  000812  6892               	setf	3986,c	;volatile
   625                           
   626                           ;main.c: 57: TRISC = 0x00;
   627  000814  0E00               	movlw	0
   628  000816  6E94               	movwf	3988,c	;volatile
   629                           
   630                           ;main.c: 58: TRISB = 0XFF;
   631  000818  6893               	setf	3987,c	;volatile
   632                           
   633                           ;main.c: 61: CCP1CONbits.CCP1M3 = 1;
   634  00081A  86BD               	bsf	4029,3,c	;volatile
   635                           
   636                           ;main.c: 62: CCP1CONbits.CCP1M2 = 1;
   637  00081C  84BD               	bsf	4029,2,c	;volatile
   638                           
   639                           ;main.c: 63: CCP1CONbits.CCP1M1 = 0;
   640  00081E  92BD               	bcf	4029,1,c	;volatile
   641                           
   642                           ;main.c: 64: CCP1CONbits.CCP1M0 = 0;
   643  000820  90BD               	bcf	4029,0,c	;volatile
   644                           
   645                           ;main.c: 67: T2CONbits.T2OUTPS3 = 0;
   646  000822  9CCA               	bcf	4042,6,c	;volatile
   647                           
   648                           ;main.c: 68: T2CONbits.T2OUTPS2 = 0;
   649  000824  9ACA               	bcf	4042,5,c	;volatile
   650                           
   651                           ;main.c: 69: T2CONbits.T2OUTPS1 = 0;
   652  000826  98CA               	bcf	4042,4,c	;volatile
   653                           
   654                           ;main.c: 70: T2CONbits.T2OUTPS0 = 0;
   655  000828  96CA               	bcf	4042,3,c	;volatile
   656                           
   657                           ;main.c: 71: T2CONbits.TMR2ON = 1;
   658  00082A  84CA               	bsf	4042,2,c	;volatile
   659                           
   660                           ;main.c: 72: T2CONbits.T2CKPS1 = 0;
   661  00082C  92CA               	bcf	4042,1,c	;volatile
   662                           
   663                           ;main.c: 73: T2CONbits.T2CKPS0 = 1;
   664  00082E  80CA               	bsf	4042,0,c	;volatile
   665                           
   666                           ;main.c: 77: PR2 = 191;
   667  000830  0EBF               	movlw	191
   668  000832  6ECB               	movwf	4043,c	;volatile
   669                           
   670                           ;main.c: 79: CCPR1L = (char)(duty >> 2);
   671  000834  C0AB  F084         	movff	_duty,??_main
   672  000838  C0AC  F085         	movff	_duty+1,??_main+1
   673  00083C  0100               	movlb	0	; () banked
   674  00083E  90D8               	bcf	status,0,c
   675  000840  3385               	rrcf	(??_main+1)& (0+255),f,b
   676  000842  3384               	rrcf	??_main& (0+255),f,b
   677  000844  90D8               	bcf	status,0,c
   678  000846  3385               	rrcf	(??_main+1)& (0+255),f,b
   679  000848  3384               	rrcf	??_main& (0+255),f,b
   680  00084A  5184               	movf	??_main& (0+255),w,b
   681  00084C  6EBE               	movwf	4030,c	;volatile
   682                           
   683                           ; BSR set to: 0
   684                           ;main.c: 80: CCP1CONbits.DC1B0 = duty%2;
   685  00084E  C0AB  F084         	movff	_duty,??_main
   686  000852  0E01               	movlw	1
   687  000854  1784               	andwf	??_main& (0+255),f,b
   688  000856  3B84               	swapf	??_main& (0+255),f,b
   689  000858  50BD               	movf	4029,w,c	;volatile
   690  00085A  1984               	xorwf	??_main& (0+255),w,b
   691  00085C  0BEF               	andlw	-17
   692  00085E  1984               	xorwf	??_main& (0+255),w,b
   693  000860  6EBD               	movwf	4029,c	;volatile
   694                           
   695                           ; BSR set to: 0
   696                           ;main.c: 81: CCP1CONbits.DC1B1 = (duty >> 1)%2;
   697  000862  90D8               	bcf	status,0,c
   698  000864  31AC               	rrcf	(_duty+1)& (0+255),w,b
   699  000866  6F85               	movwf	(??_main+1)& (0+255),b
   700  000868  31AB               	rrcf	_duty& (0+255),w,b
   701  00086A  6F84               	movwf	??_main& (0+255),b
   702  00086C  0E01               	movlw	1
   703  00086E  1784               	andwf	??_main& (0+255),f,b
   704  000870  3B84               	swapf	??_main& (0+255),f,b
   705  000872  4784               	rlncf	??_main& (0+255),f,b
   706  000874  50BD               	movf	4029,w,c	;volatile
   707  000876  1984               	xorwf	??_main& (0+255),w,b
   708  000878  0BDF               	andlw	-33
   709  00087A  1984               	xorwf	??_main& (0+255),w,b
   710  00087C  6EBD               	movwf	4029,c	;volatile
   711                           
   712                           ; BSR set to: 0
   713                           ;main.c: 84: PIE1bits.ADIE = 1;
   714  00087E  8C9D               	bsf	3997,6,c	;volatile
   715                           
   716                           ; BSR set to: 0
   717                           ;main.c: 85: PIR1bits.ADIF = 0;
   718  000880  9C9E               	bcf	3998,6,c	;volatile
   719                           
   720                           ; BSR set to: 0
   721                           ;main.c: 86: IPR1bits.ADIP = 0;
   722  000882  9C9F               	bcf	3999,6,c	;volatile
   723                           
   724                           ; BSR set to: 0
   725                           ;main.c: 89: ADCON0bits.CHS3 = 0;
   726  000884  9AC2               	bcf	4034,5,c	;volatile
   727                           
   728                           ; BSR set to: 0
   729                           ;main.c: 90: ADCON0bits.CHS2 = 0;
   730  000886  98C2               	bcf	4034,4,c	;volatile
   731                           
   732                           ; BSR set to: 0
   733                           ;main.c: 91: ADCON0bits.CHS1 = 0;
   734  000888  96C2               	bcf	4034,3,c	;volatile
   735                           
   736                           ; BSR set to: 0
   737                           ;main.c: 92: ADCON0bits.CHS0 = 0;
   738  00088A  94C2               	bcf	4034,2,c	;volatile
   739                           
   740                           ; BSR set to: 0
   741                           ;main.c: 93: ADCON0bits.ADON = 1;
   742  00088C  80C2               	bsf	4034,0,c	;volatile
   743                           
   744                           ; BSR set to: 0
   745                           ;main.c: 96: RCONbits.IPEN = 1;
   746  00088E  8ED0               	bsf	4048,7,c	;volatile
   747                           
   748                           ; BSR set to: 0
   749                           ;main.c: 97: INTCONbits.GIEH = 1;
   750  000890  8EF2               	bsf	intcon,7,c	;volatile
   751                           
   752                           ; BSR set to: 0
   753                           ;main.c: 98: INTCONbits.GIEL = 1;
   754  000892  8CF2               	bsf	intcon,6,c	;volatile
   755                           
   756                           ; BSR set to: 0
   757                           ;main.c: 101: INTCON3bits.INT1IE = 1;
   758  000894  86F0               	bsf	intcon3,3,c	;volatile
   759                           
   760                           ; BSR set to: 0
   761                           ;main.c: 102: INTCON3bits.INT2IE = 1;
   762  000896  88F0               	bsf	intcon3,4,c	;volatile
   763                           
   764                           ; BSR set to: 0
   765                           ;main.c: 103: INTCON2bits.INTEDG1 = 0;
   766  000898  9AF1               	bcf	intcon2,5,c	;volatile
   767                           
   768                           ; BSR set to: 0
   769                           ;main.c: 104: INTCON2bits.INTEDG2 = 0;
   770  00089A  98F1               	bcf	intcon2,4,c	;volatile
   771                           
   772                           ; BSR set to: 0
   773                           ;main.c: 105: INTCON3bits.INT1IF = 0;
   774  00089C  90F0               	bcf	intcon3,0,c	;volatile
   775                           
   776                           ; BSR set to: 0
   777                           ;main.c: 106: INTCON3bits.INT2IF = 0;
   778  00089E  92F0               	bcf	intcon3,1,c	;volatile
   779                           
   780                           ; BSR set to: 0
   781                           ;main.c: 107: INTCON3bits.INT1IP = 0;
   782  0008A0  9CF0               	bcf	intcon3,6,c	;volatile
   783                           
   784                           ; BSR set to: 0
   785                           ;main.c: 108: INTCON3bits.INT2IP = 0;
   786  0008A2  9EF0               	bcf	intcon3,7,c	;volatile
   787                           
   788                           ; BSR set to: 0
   789                           ;main.c: 111: T0CON = 0b11000101;
   790  0008A4  0EC5               	movlw	197
   791  0008A6  6ED5               	movwf	4053,c	;volatile
   792                           
   793                           ; BSR set to: 0
   794                           ;main.c: 112: TMR0L = 100;
   795  0008A8  0E64               	movlw	100
   796  0008AA  6ED6               	movwf	4054,c	;volatile
   797                           
   798                           ; BSR set to: 0
   799                           ;main.c: 113: TRISAbits.TRISA0 = 1;
   800  0008AC  8092               	bsf	3986,0,c	;volatile
   801                           
   802                           ; BSR set to: 0
   803                           ;main.c: 114: ADCON1 = 0b00001011;
   804  0008AE  0E0B               	movlw	11
   805  0008B0  6EC1               	movwf	4033,c	;volatile
   806                           
   807                           ; BSR set to: 0
   808                           ;main.c: 115: ADCON2 = 0b10010101;
   809  0008B2  0E95               	movlw	149
   810  0008B4  6EC0               	movwf	4032,c	;volatile
   811                           
   812                           ; BSR set to: 0
   813                           ;main.c: 116: INTCONbits.TMR0IF = 0;
   814  0008B6  94F2               	bcf	intcon,2,c	;volatile
   815                           
   816                           ; BSR set to: 0
   817                           ;main.c: 117: INTCONbits.TMR0IE = 1;
   818  0008B8  8AF2               	bsf	intcon,5,c	;volatile
   819                           
   820                           ; BSR set to: 0
   821                           ;main.c: 118: INTCON2bits.TMR0IP = 1;
   822  0008BA  84F1               	bsf	intcon2,2,c	;volatile
   823                           
   824                           ; BSR set to: 0
   825                           ;main.c: 123: TMR0L = 100;
   826  0008BC  0E64               	movlw	100
   827  0008BE  6ED6               	movwf	4054,c	;volatile
   828                           
   829                           ; BSR set to: 0
   830                           ;main.c: 126: CCP2CONbits.CCP2M3 = 1;
   831  0008C0  86BA               	bsf	4026,3,c	;volatile
   832                           
   833                           ; BSR set to: 0
   834                           ;main.c: 127: CCP2CONbits.CCP2M2 = 1;
   835  0008C2  84BA               	bsf	4026,2,c	;volatile
   836                           
   837                           ; BSR set to: 0
   838                           ;main.c: 130: OpenXLCD(0b00101100 & 0b00111000);
   839  0008C4  0E28               	movlw	40
   840  0008C6  EC97  F007         	call	_OpenXLCD
   841                           
   842                           ;main.c: 131: WriteCmdXLCD(0x01);
   843  0008CA  0E01               	movlw	1
   844  0008CC  EC77  F009         	call	_WriteCmdXLCD
   845                           
   846                           ;main.c: 132: _delay((unsigned long)((2)*(20000000/4000.0)));
   847  0008D0  0E0D               	movlw	13
   848  0008D2  0100               	movlb	0	; () banked
   849  0008D4  6F84               	movwf	??_main& (0+255),b
   850  0008D6  0EFB               	movlw	251
   851  0008D8                     u1137:
   852  0008D8  2EE8               	decfsz	wreg,f,c
   853  0008DA  D7FE               	bra	u1137
   854  0008DC  2F84               	decfsz	??_main& (0+255),f,b
   855  0008DE  D7FC               	bra	u1137
   856  0008E0  D000               	nop2	
   857  0008E2                     
   858                           ;main.c: 140: if(contador == 100){
   859  0008E2  0E64               	movlw	100
   860  0008E4  0100               	movlb	0	; () banked
   861  0008E6  19AA               	xorwf	_contador& (0+255),w,b
   862  0008E8  A4D8               	btfss	status,2,c
   863  0008EA  D7FB               	goto	l91
   864                           
   865                           ; BSR set to: 0
   866                           ;main.c: 141: result3 = dc;
   867  0008EC  C0A2  F088         	movff	_dc,main@result3
   868  0008F0  C0A3  F089         	movff	_dc+1,main@result3+1
   869                           
   870                           ; BSR set to: 0
   871                           ;main.c: 142: aux = result % 1000;
   872  0008F4  C0A6  F077         	movff	_result,___llmod@dividend
   873  0008F8  C0A7  F078         	movff	_result+1,___llmod@dividend+1
   874  0008FC  C0A8  F079         	movff	_result+2,___llmod@dividend+2
   875  000900  C0A9  F07A         	movff	_result+3,___llmod@dividend+3
   876  000904  0EE8               	movlw	232
   877  000906  6F7B               	movwf	___llmod@divisor& (0+255),b
   878  000908  0E03               	movlw	3
   879  00090A  6F7C               	movwf	(___llmod@divisor+1)& (0+255),b
   880  00090C  0E00               	movlw	0
   881  00090E  6F7D               	movwf	(___llmod@divisor+2)& (0+255),b
   882  000910  0E00               	movlw	0
   883  000912  6F7E               	movwf	(___llmod@divisor+3)& (0+255),b
   884  000914  ECAB  F008         	call	___llmod	;wreg free
   885  000918  C077  F09E         	movff	?___llmod,main@aux
   886  00091C  C078  F09F         	movff	?___llmod+1,main@aux+1
   887                           
   888                           ;main.c: 143: cent = aux / 100;
   889  000920  C09E  F077         	movff	main@aux,___awdiv@dividend
   890  000924  C09F  F078         	movff	main@aux+1,___awdiv@dividend+1
   891  000928  0E00               	movlw	0
   892  00092A  0100               	movlb	0	; () banked
   893  00092C  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
   894  00092E  0E64               	movlw	100
   895  000930  6F79               	movwf	___awdiv@divisor& (0+255),b
   896  000932  ECED  F007         	call	___awdiv	;wreg free
   897  000936  C077  F08A         	movff	?___awdiv,main@cent
   898  00093A  C078  F08B         	movff	?___awdiv+1,main@cent+1
   899                           
   900                           ;main.c: 144: aux = aux % 100;
   901  00093E  C09E  F077         	movff	main@aux,___awmod@dividend
   902  000942  C09F  F078         	movff	main@aux+1,___awmod@dividend+1
   903  000946  0E00               	movlw	0
   904  000948  0100               	movlb	0	; () banked
   905  00094A  6F7A               	movwf	(___awmod@divisor+1)& (0+255),b
   906  00094C  0E64               	movlw	100
   907  00094E  6F79               	movwf	___awmod@divisor& (0+255),b
   908  000950  EC72  F008         	call	___awmod	;wreg free
   909  000954  C077  F09E         	movff	?___awmod,main@aux
   910  000958  C078  F09F         	movff	?___awmod+1,main@aux+1
   911                           
   912                           ;main.c: 145: dez = aux / 10;
   913  00095C  C09E  F077         	movff	main@aux,___awdiv@dividend
   914  000960  C09F  F078         	movff	main@aux+1,___awdiv@dividend+1
   915  000964  0E00               	movlw	0
   916  000966  0100               	movlb	0	; () banked
   917  000968  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
   918  00096A  0E0A               	movlw	10
   919  00096C  6F79               	movwf	___awdiv@divisor& (0+255),b
   920  00096E  ECED  F007         	call	___awdiv	;wreg free
   921  000972  C077  F08C         	movff	?___awdiv,main@dez
   922  000976  C078  F08D         	movff	?___awdiv+1,main@dez+1
   923                           
   924                           ;main.c: 146: uni = aux % 10;
   925  00097A  C09E  F077         	movff	main@aux,___awmod@dividend
   926  00097E  C09F  F078         	movff	main@aux+1,___awmod@dividend+1
   927  000982  0E00               	movlw	0
   928  000984  0100               	movlb	0	; () banked
   929  000986  6F7A               	movwf	(___awmod@divisor+1)& (0+255),b
   930  000988  0E0A               	movlw	10
   931  00098A  6F79               	movwf	___awmod@divisor& (0+255),b
   932  00098C  EC72  F008         	call	___awmod	;wreg free
   933  000990  C077  F08E         	movff	?___awmod,main@uni
   934  000994  C078  F08F         	movff	?___awmod+1,main@uni+1
   935                           
   936                           ;main.c: 147: aux2 = result2 % 1000;
   937  000998  C042  F077         	movff	_result2,___llmod@dividend
   938  00099C  C043  F078         	movff	_result2+1,___llmod@dividend+1
   939  0009A0  C044  F079         	movff	_result2+2,___llmod@dividend+2
   940  0009A4  C045  F07A         	movff	_result2+3,___llmod@dividend+3
   941  0009A8  0EE8               	movlw	232
   942  0009AA  0100               	movlb	0	; () banked
   943  0009AC  6F7B               	movwf	___llmod@divisor& (0+255),b
   944  0009AE  0E03               	movlw	3
   945  0009B0  6F7C               	movwf	(___llmod@divisor+1)& (0+255),b
   946  0009B2  0E00               	movlw	0
   947  0009B4  6F7D               	movwf	(___llmod@divisor+2)& (0+255),b
   948  0009B6  0E00               	movlw	0
   949  0009B8  6F7E               	movwf	(___llmod@divisor+3)& (0+255),b
   950  0009BA  ECAB  F008         	call	___llmod	;wreg free
   951  0009BE  C077  F0A0         	movff	?___llmod,main@aux2
   952  0009C2  C078  F0A1         	movff	?___llmod+1,main@aux2+1
   953                           
   954                           ;main.c: 148: cent2 = aux2 / 100;
   955  0009C6  C0A0  F077         	movff	main@aux2,___awdiv@dividend
   956  0009CA  C0A1  F078         	movff	main@aux2+1,___awdiv@dividend+1
   957  0009CE  0E00               	movlw	0
   958  0009D0  0100               	movlb	0	; () banked
   959  0009D2  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
   960  0009D4  0E64               	movlw	100
   961  0009D6  6F79               	movwf	___awdiv@divisor& (0+255),b
   962  0009D8  ECED  F007         	call	___awdiv	;wreg free
   963  0009DC  C077  F090         	movff	?___awdiv,main@cent2
   964  0009E0  C078  F091         	movff	?___awdiv+1,main@cent2+1
   965                           
   966                           ;main.c: 149: aux2 = aux2 % 100;
   967  0009E4  C0A0  F077         	movff	main@aux2,___awmod@dividend
   968  0009E8  C0A1  F078         	movff	main@aux2+1,___awmod@dividend+1
   969  0009EC  0E00               	movlw	0
   970  0009EE  0100               	movlb	0	; () banked
   971  0009F0  6F7A               	movwf	(___awmod@divisor+1)& (0+255),b
   972  0009F2  0E64               	movlw	100
   973  0009F4  6F79               	movwf	___awmod@divisor& (0+255),b
   974  0009F6  EC72  F008         	call	___awmod	;wreg free
   975  0009FA  C077  F0A0         	movff	?___awmod,main@aux2
   976  0009FE  C078  F0A1         	movff	?___awmod+1,main@aux2+1
   977                           
   978                           ;main.c: 150: dez2 = aux2 / 10;
   979  000A02  C0A0  F077         	movff	main@aux2,___awdiv@dividend
   980  000A06  C0A1  F078         	movff	main@aux2+1,___awdiv@dividend+1
   981  000A0A  0E00               	movlw	0
   982  000A0C  0100               	movlb	0	; () banked
   983  000A0E  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
   984  000A10  0E0A               	movlw	10
   985  000A12  6F79               	movwf	___awdiv@divisor& (0+255),b
   986  000A14  ECED  F007         	call	___awdiv	;wreg free
   987  000A18  C077  F092         	movff	?___awdiv,main@dez2
   988  000A1C  C078  F093         	movff	?___awdiv+1,main@dez2+1
   989                           
   990                           ;main.c: 151: uni2 = aux2 % 10;
   991  000A20  C0A0  F077         	movff	main@aux2,___awmod@dividend
   992  000A24  C0A1  F078         	movff	main@aux2+1,___awmod@dividend+1
   993  000A28  0E00               	movlw	0
   994  000A2A  0100               	movlb	0	; () banked
   995  000A2C  6F7A               	movwf	(___awmod@divisor+1)& (0+255),b
   996  000A2E  0E0A               	movlw	10
   997  000A30  6F79               	movwf	___awmod@divisor& (0+255),b
   998  000A32  EC72  F008         	call	___awmod	;wreg free
   999  000A36  C077  F094         	movff	?___awmod,main@uni2
  1000  000A3A  C078  F095         	movff	?___awmod+1,main@uni2+1
  1001                           
  1002                           ;main.c: 152: WriteCmdXLCD(0x80);
  1003  000A3E  0E80               	movlw	128
  1004  000A40  EC77  F009         	call	_WriteCmdXLCD
  1005                           
  1006                           ;main.c: 153: putsXLCD("Ta:");
  1007  000A44  0E08               	movlw	low STR_1
  1008  000A46  0100               	movlb	0	; () banked
  1009  000A48  6F78               	movwf	putsXLCD@buffer& (0+255),b
  1010  000A4A  0E08               	movlw	high STR_1
  1011  000A4C  6F79               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1012  000A4E  ECB6  F009         	call	_putsXLCD	;wreg free
  1013                           
  1014                           ;main.c: 154: WriteDataXLCD(0x30 + cent);
  1015  000A52  0100               	movlb	0	; () banked
  1016  000A54  518A               	movf	main@cent& (0+255),w,b
  1017  000A56  0F30               	addlw	48
  1018  000A58  EC55  F009         	call	_WriteDataXLCD
  1019                           
  1020                           ;main.c: 155: WriteDataXLCD(0x30 + dez);
  1021  000A5C  0100               	movlb	0	; () banked
  1022  000A5E  518C               	movf	main@dez& (0+255),w,b
  1023  000A60  0F30               	addlw	48
  1024  000A62  EC55  F009         	call	_WriteDataXLCD
  1025                           
  1026                           ;main.c: 156: WriteDataXLCD(',');
  1027  000A66  0E2C               	movlw	44
  1028  000A68  EC55  F009         	call	_WriteDataXLCD
  1029                           
  1030                           ;main.c: 157: WriteDataXLCD(0x30 + uni);
  1031  000A6C  0100               	movlb	0	; () banked
  1032  000A6E  518E               	movf	main@uni& (0+255),w,b
  1033  000A70  0F30               	addlw	48
  1034  000A72  EC55  F009         	call	_WriteDataXLCD
  1035                           
  1036                           ;main.c: 158: WriteCmdXLCD(0x89);
  1037  000A76  0E89               	movlw	137
  1038  000A78  EC77  F009         	call	_WriteCmdXLCD
  1039                           
  1040                           ;main.c: 159: putsXLCD("Tr:");
  1041  000A7C  0E0C               	movlw	low STR_2
  1042  000A7E  0100               	movlb	0	; () banked
  1043  000A80  6F78               	movwf	putsXLCD@buffer& (0+255),b
  1044  000A82  0E08               	movlw	high STR_2
  1045  000A84  6F79               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1046  000A86  ECB6  F009         	call	_putsXLCD	;wreg free
  1047                           
  1048                           ;main.c: 160: WriteDataXLCD(0x30 + cent2);
  1049  000A8A  0100               	movlb	0	; () banked
  1050  000A8C  5190               	movf	main@cent2& (0+255),w,b
  1051  000A8E  0F30               	addlw	48
  1052  000A90  EC55  F009         	call	_WriteDataXLCD
  1053                           
  1054                           ;main.c: 161: WriteDataXLCD(0x30 + dez2);
  1055  000A94  0100               	movlb	0	; () banked
  1056  000A96  5192               	movf	main@dez2& (0+255),w,b
  1057  000A98  0F30               	addlw	48
  1058  000A9A  EC55  F009         	call	_WriteDataXLCD
  1059                           
  1060                           ;main.c: 162: WriteDataXLCD(',');
  1061  000A9E  0E2C               	movlw	44
  1062  000AA0  EC55  F009         	call	_WriteDataXLCD
  1063                           
  1064                           ;main.c: 163: WriteDataXLCD(0x30 + uni2);
  1065  000AA4  0100               	movlb	0	; () banked
  1066  000AA6  5194               	movf	main@uni2& (0+255),w,b
  1067  000AA8  0F30               	addlw	48
  1068  000AAA  EC55  F009         	call	_WriteDataXLCD
  1069                           
  1070                           ;main.c: 164: dc = (result2-result);
  1071  000AAE  C0A6  F084         	movff	_result,??_main
  1072  000AB2  C0A7  F085         	movff	_result+1,??_main+1
  1073  000AB6  C0A8  F086         	movff	_result+2,??_main+2
  1074  000ABA  C0A9  F087         	movff	_result+3,??_main+3
  1075  000ABE  0100               	movlb	0	; () banked
  1076  000AC0  1F84               	comf	??_main& (0+255),f,b
  1077  000AC2  1F85               	comf	(??_main+1)& (0+255),f,b
  1078  000AC4  1F86               	comf	(??_main+2)& (0+255),f,b
  1079  000AC6  1F87               	comf	(??_main+3)& (0+255),f,b
  1080  000AC8  2B84               	incf	??_main& (0+255),f,b
  1081  000ACA  0E00               	movlw	0
  1082  000ACC  2385               	addwfc	(??_main+1)& (0+255),f,b
  1083  000ACE  2386               	addwfc	(??_main+2)& (0+255),f,b
  1084  000AD0  2387               	addwfc	(??_main+3)& (0+255),f,b
  1085  000AD2  5042               	movf	_result2,w,c
  1086  000AD4  2584               	addwf	??_main& (0+255),w,b
  1087  000AD6  6FA2               	movwf	_dc& (0+255),b
  1088  000AD8  5043               	movf	_result2+1,w,c
  1089  000ADA  2185               	addwfc	(??_main+1)& (0+255),w,b
  1090  000ADC  6FA3               	movwf	(_dc+1)& (0+255),b
  1091  000ADE  5044               	movf	_result2+2,w,c
  1092  000AE0  2186               	addwfc	(??_main+2)& (0+255),w,b
  1093  000AE2  6FA4               	movwf	(_dc+2)& (0+255),b
  1094  000AE4  5045               	movf	_result2+3,w,c
  1095  000AE6  2187               	addwfc	(??_main+3)& (0+255),w,b
  1096  000AE8  6FA5               	movwf	(_dc+3)& (0+255),b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;main.c: 167: else
  1100                           ;main.c: 168: duty = dconst*dc;
  1101                           
  1102                           ; BSR set to: 0
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;main.c: 166: duty = 0;
  1106                           
  1107                           ;main.c: 165: if((dconst*dc)<0)
  1108  000AEA  C0AD  F077         	movff	_dconst,___wmul@multiplier
  1109  000AEE  C0AE  F078         	movff	_dconst+1,___wmul@multiplier+1
  1110  000AF2  C0A2  F079         	movff	_dc,___wmul@multiplicand
  1111  000AF6  C0A3  F07A         	movff	_dc+1,___wmul@multiplicand+1
  1112  000AFA  ECD1  F009         	call	___wmul	;wreg free
  1113  000AFE  C077  F0AB         	movff	?___wmul,_duty
  1114  000B02  C078  F0AC         	movff	?___wmul+1,_duty+1
  1115                           
  1116                           ;main.c: 169: WriteCmdXLCD(0xC3);
  1117  000B06  0EC3               	movlw	195
  1118  000B08  EC77  F009         	call	_WriteCmdXLCD
  1119                           
  1120                           ;main.c: 170: putsXLCD("Razao:");
  1121  000B0C  0E01               	movlw	low STR_3
  1122  000B0E  0100               	movlb	0	; () banked
  1123  000B10  6F78               	movwf	putsXLCD@buffer& (0+255),b
  1124  000B12  0E08               	movlw	high STR_3
  1125  000B14  6F79               	movwf	(putsXLCD@buffer+1)& (0+255),b
  1126  000B16  ECB6  F009         	call	_putsXLCD	;wreg free
  1127                           
  1128                           ;main.c: 171: cent3 = dc / 100;
  1129  000B1A  C0A2  F077         	movff	_dc,___lldiv@dividend
  1130  000B1E  C0A3  F078         	movff	_dc+1,___lldiv@dividend+1
  1131  000B22  C0A4  F079         	movff	_dc+2,___lldiv@dividend+2
  1132  000B26  C0A5  F07A         	movff	_dc+3,___lldiv@dividend+3
  1133  000B2A  0E64               	movlw	100
  1134  000B2C  0100               	movlb	0	; () banked
  1135  000B2E  6F7B               	movwf	___lldiv@divisor& (0+255),b
  1136  000B30  0E00               	movlw	0
  1137  000B32  6F7C               	movwf	(___lldiv@divisor+1)& (0+255),b
  1138  000B34  0E00               	movlw	0
  1139  000B36  6F7D               	movwf	(___lldiv@divisor+2)& (0+255),b
  1140  000B38  0E00               	movlw	0
  1141  000B3A  6F7E               	movwf	(___lldiv@divisor+3)& (0+255),b
  1142  000B3C  EC30  F008         	call	___lldiv	;wreg free
  1143  000B40  C077  F096         	movff	?___lldiv,main@cent3
  1144  000B44  C078  F097         	movff	?___lldiv+1,main@cent3+1
  1145                           
  1146                           ;main.c: 172: aux3 = dc % 100;
  1147  000B48  C0A2  F077         	movff	_dc,___llmod@dividend
  1148  000B4C  C0A3  F078         	movff	_dc+1,___llmod@dividend+1
  1149  000B50  C0A4  F079         	movff	_dc+2,___llmod@dividend+2
  1150  000B54  C0A5  F07A         	movff	_dc+3,___llmod@dividend+3
  1151  000B58  0E64               	movlw	100
  1152  000B5A  0100               	movlb	0	; () banked
  1153  000B5C  6F7B               	movwf	___llmod@divisor& (0+255),b
  1154  000B5E  0E00               	movlw	0
  1155  000B60  6F7C               	movwf	(___llmod@divisor+1)& (0+255),b
  1156  000B62  0E00               	movlw	0
  1157  000B64  6F7D               	movwf	(___llmod@divisor+2)& (0+255),b
  1158  000B66  0E00               	movlw	0
  1159  000B68  6F7E               	movwf	(___llmod@divisor+3)& (0+255),b
  1160  000B6A  ECAB  F008         	call	___llmod	;wreg free
  1161  000B6E  C077  F09C         	movff	?___llmod,main@aux3
  1162  000B72  C078  F09D         	movff	?___llmod+1,main@aux3+1
  1163                           
  1164                           ;main.c: 173: dez3 = aux3 / 10;
  1165  000B76  C09C  F077         	movff	main@aux3,___awdiv@dividend
  1166  000B7A  C09D  F078         	movff	main@aux3+1,___awdiv@dividend+1
  1167  000B7E  0E00               	movlw	0
  1168  000B80  0100               	movlb	0	; () banked
  1169  000B82  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  1170  000B84  0E0A               	movlw	10
  1171  000B86  6F79               	movwf	___awdiv@divisor& (0+255),b
  1172  000B88  ECED  F007         	call	___awdiv	;wreg free
  1173  000B8C  C077  F098         	movff	?___awdiv,main@dez3
  1174  000B90  C078  F099         	movff	?___awdiv+1,main@dez3+1
  1175                           
  1176                           ;main.c: 174: uni3 = aux3 % 10;
  1177  000B94  C09C  F077         	movff	main@aux3,___awmod@dividend
  1178  000B98  C09D  F078         	movff	main@aux3+1,___awmod@dividend+1
  1179  000B9C  0E00               	movlw	0
  1180  000B9E  0100               	movlb	0	; () banked
  1181  000BA0  6F7A               	movwf	(___awmod@divisor+1)& (0+255),b
  1182  000BA2  0E0A               	movlw	10
  1183  000BA4  6F79               	movwf	___awmod@divisor& (0+255),b
  1184  000BA6  EC72  F008         	call	___awmod	;wreg free
  1185  000BAA  C077  F09A         	movff	?___awmod,main@uni3
  1186  000BAE  C078  F09B         	movff	?___awmod+1,main@uni3+1
  1187                           
  1188                           ;main.c: 175: WriteDataXLCD(0x30 + cent3);
  1189  000BB2  0100               	movlb	0	; () banked
  1190  000BB4  5196               	movf	main@cent3& (0+255),w,b
  1191  000BB6  0F30               	addlw	48
  1192  000BB8  EC55  F009         	call	_WriteDataXLCD
  1193                           
  1194                           ;main.c: 176: WriteDataXLCD(0x30 + dez3);
  1195  000BBC  0100               	movlb	0	; () banked
  1196  000BBE  5198               	movf	main@dez3& (0+255),w,b
  1197  000BC0  0F30               	addlw	48
  1198  000BC2  EC55  F009         	call	_WriteDataXLCD
  1199                           
  1200                           ;main.c: 177: WriteDataXLCD(0x30 + uni3);
  1201  000BC6  0100               	movlb	0	; () banked
  1202  000BC8  519A               	movf	main@uni3& (0+255),w,b
  1203  000BCA  0F30               	addlw	48
  1204  000BCC  EC55  F009         	call	_WriteDataXLCD
  1205                           
  1206                           ;main.c: 179: WriteDataXLCD('%');
  1207  000BD0  0E25               	movlw	37
  1208  000BD2  EC55  F009         	call	_WriteDataXLCD
  1209  000BD6  D685               	goto	l91
  1210  000BD8                     __end_of_main:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           intcon	equ	0xFF2
  1217                           intcon2	equ	0xFF1
  1218                           intcon3	equ	0xFF0
  1219                           postinc0	equ	0xFEE
  1220                           wreg	equ	0xFE8
  1221                           postdec1	equ	0xFE5
  1222                           fsr1l	equ	0xFE1
  1223                           status	equ	0xFD8
  1224                           
  1225 ;; *************** function _putsXLCD *****************
  1226 ;; Defined at:
  1227 ;;		line 510 in file "nxlcd.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  buffer          2   24[BANK0 ] PTR unsigned char 
  1230 ;;		 -> STR_3(7), STR_2(4), STR_1(4), 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1242 ;;      Params:         0       2       0       0       0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1245 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    6
  1249 ;; This function calls:
  1250 ;;		_BusyXLCD
  1251 ;;		_WriteDataXLCD
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text1
  1258  00136C                     __ptext1:
  1259                           	opt stack 0
  1260  00136C                     _putsXLCD:
  1261                           	opt stack 24
  1262                           
  1263                           ;nxlcd.c: 512: while(*buffer)
  1264                           
  1265                           ;incstack = 0
  1266  00136C  D010               	goto	l172
  1267  00136E                     
  1268                           ;nxlcd.c: 513: {
  1269                           ;nxlcd.c: 514: while(BusyXLCD());
  1270  00136E  EC99  F009         	call	_BusyXLCD	;wreg free
  1271  001372  0900               	iorlw	0
  1272  001374  A4D8               	btfss	status,2,c
  1273  001376  D7FB               	goto	l173
  1274                           
  1275                           ;nxlcd.c: 515: WriteDataXLCD(*buffer);
  1276  001378  C078  FFF6         	movff	putsXLCD@buffer,tblptrl
  1277  00137C  C079  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1278  001380                     	if	0	;tblptru may be non-zero
  1279  001380                     	endif
  1280  001380                     	if	0	;tblptru may be non-zero
  1281  001380                     	endif
  1282  001380  0008               	tblrd		*
  1283  001382  50F5               	movf	tablat,w,c
  1284  001384  EC55  F009         	call	_WriteDataXLCD
  1285                           
  1286                           ;nxlcd.c: 516: buffer++;
  1287  001388  0100               	movlb	0	; () banked
  1288  00138A  4B78               	infsnz	putsXLCD@buffer& (0+255),f,b
  1289  00138C  2B79               	incf	(putsXLCD@buffer+1)& (0+255),f,b
  1290  00138E                     l172:
  1291                           
  1292                           ; BSR set to: 0
  1293  00138E  C078  FFF6         	movff	putsXLCD@buffer,tblptrl
  1294  001392  C079  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1295  001396                     	if	0	;tblptru may be non-zero
  1296  001396                     	endif
  1297  001396                     	if	0	;tblptru may be non-zero
  1298  001396                     	endif
  1299  001396  0008               	tblrd		*
  1300  001398  50F5               	movf	tablat,w,c
  1301  00139A  0900               	iorlw	0
  1302  00139C  B4D8               	btfsc	status,2,c
  1303  00139E  0012               	return	
  1304  0013A0  D7E6               	goto	l173
  1305  0013A2                     __end_of_putsXLCD:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           intcon	equ	0xFF2
  1312                           intcon2	equ	0xFF1
  1313                           intcon3	equ	0xFF0
  1314                           postinc0	equ	0xFEE
  1315                           wreg	equ	0xFE8
  1316                           postdec1	equ	0xFE5
  1317                           fsr1l	equ	0xFE1
  1318                           status	equ	0xFD8
  1319                           
  1320 ;; *************** function _WriteDataXLCD *****************
  1321 ;; Defined at:
  1322 ;;		line 449 in file "nxlcd.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  data            1    wreg     unsigned char 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  data            1   23[BANK0 ] unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0
  1337 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1339 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1340 ;;Total ram usage:        1 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    5
  1343 ;; This function calls:
  1344 ;;		_DelayFor18TCY
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;;		_putsXLCD
  1348 ;;		_putrsXLCD
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text2
  1353  0012AA                     __ptext2:
  1354                           	opt stack 0
  1355  0012AA                     _WriteDataXLCD:
  1356                           	opt stack 24
  1357                           
  1358                           ;incstack = 0
  1359                           ;WriteDataXLCD@data stored from wreg
  1360  0012AA  0100               	movlb	0	; () banked
  1361  0012AC  6F77               	movwf	WriteDataXLCD@data& (0+255),b
  1362                           
  1363                           ;nxlcd.c: 464: TRISD &= 0x0f;
  1364  0012AE  0E0F               	movlw	15
  1365  0012B0  1695               	andwf	3989,f,c	;volatile
  1366                           
  1367                           ;nxlcd.c: 465: PORTD &= 0x0f;
  1368  0012B2  0E0F               	movlw	15
  1369  0012B4  1683               	andwf	3971,f,c	;volatile
  1370                           
  1371                           ;nxlcd.c: 466: PORTD |= data&0xf0;
  1372  0012B6  0100               	movlb	0	; () banked
  1373  0012B8  5177               	movf	WriteDataXLCD@data& (0+255),w,b
  1374  0012BA  0BF0               	andlw	240
  1375  0012BC  1283               	iorwf	3971,f,c	;volatile
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;nxlcd.c: 472: LATEbits.LATE0 = 1;
  1379  0012BE  808D               	bsf	3981,0,c	;volatile
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;nxlcd.c: 473: LATEbits.LATE2 = 0;
  1383  0012C0  948D               	bcf	3981,2,c	;volatile
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;nxlcd.c: 474: DelayFor18TCY();
  1387  0012C2  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  1388                           
  1389                           ;nxlcd.c: 475: LATEbits.LATE1 = 1;
  1390  0012C6  828D               	bsf	3981,1,c	;volatile
  1391                           
  1392                           ;nxlcd.c: 476: DelayFor18TCY();
  1393  0012C8  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  1394                           
  1395                           ;nxlcd.c: 477: LATEbits.LATE1 = 0;
  1396  0012CC  928D               	bcf	3981,1,c	;volatile
  1397                           
  1398                           ;nxlcd.c: 479: PORTD &= 0x0f;
  1399  0012CE  0E0F               	movlw	15
  1400  0012D0  1683               	andwf	3971,f,c	;volatile
  1401                           
  1402                           ;nxlcd.c: 480: PORTD |= ((data<<4)&0xf0);
  1403  0012D2  0100               	movlb	0	; () banked
  1404  0012D4  3977               	swapf	WriteDataXLCD@data& (0+255),w,b
  1405  0012D6  0BF0               	andlw	240
  1406  0012D8  0BF0               	andlw	240
  1407  0012DA  1283               	iorwf	3971,f,c	;volatile
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;nxlcd.c: 485: DelayFor18TCY();
  1411  0012DC  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  1412                           
  1413                           ;nxlcd.c: 486: LATEbits.LATE1 = 1;
  1414  0012E0  828D               	bsf	3981,1,c	;volatile
  1415                           
  1416                           ;nxlcd.c: 487: DelayFor18TCY();
  1417  0012E2  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  1418                           
  1419                           ;nxlcd.c: 488: LATEbits.LATE1 = 0;
  1420  0012E6  928D               	bcf	3981,1,c	;volatile
  1421                           
  1422                           ;nxlcd.c: 490: TRISD |= 0xf0;
  1423  0012E8  0EF0               	movlw	240
  1424  0012EA  1295               	iorwf	3989,f,c	;volatile
  1425  0012EC  0012               	return	
  1426  0012EE                     __end_of_WriteDataXLCD:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           intcon	equ	0xFF2
  1433                           intcon2	equ	0xFF1
  1434                           intcon3	equ	0xFF0
  1435                           postinc0	equ	0xFEE
  1436                           wreg	equ	0xFE8
  1437                           postdec1	equ	0xFE5
  1438                           fsr1l	equ	0xFE1
  1439                           status	equ	0xFD8
  1440                           
  1441 ;; *************** function ___wmul *****************
  1442 ;; Defined at:
  1443 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  multiplier      2   23[BANK0 ] unsigned int 
  1446 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  product         2   27[BANK0 ] unsigned int 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  2   23[BANK0 ] unsigned int 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0, prodl, prodh
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1458 ;;      Params:         0       4       0       0       0       0       0       0       0
  1459 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1461 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1462 ;;Total ram usage:        6 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    4
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text3
  1473  0013A2                     __ptext3:
  1474                           	opt stack 0
  1475  0013A2                     ___wmul:
  1476                           	opt stack 26
  1477                           
  1478                           ;incstack = 0
  1479  0013A2  0100               	movlb	0	; () banked
  1480  0013A4  5177               	movf	___wmul@multiplier& (0+255),w,b
  1481  0013A6  0379               	mulwf	___wmul@multiplicand& (0+255),b
  1482  0013A8  CFF3 F07B          	movff	prodl,___wmul@product
  1483  0013AC  CFF4 F07C          	movff	prodh,___wmul@product+1
  1484  0013B0  5177               	movf	___wmul@multiplier& (0+255),w,b
  1485  0013B2  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1486  0013B4  50F3               	movf	prodl,w,c
  1487  0013B6  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  1488  0013B8  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1489  0013BA  0379               	mulwf	___wmul@multiplicand& (0+255),b
  1490  0013BC  50F3               	movf	prodl,w,c
  1491  0013BE  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  1492                           
  1493                           ; BSR set to: 0
  1494  0013C0  C07B  F077         	movff	___wmul@product,?___wmul
  1495  0013C4  C07C  F078         	movff	___wmul@product+1,?___wmul+1
  1496  0013C8  0012               	return	
  1497  0013CA                     __end_of___wmul:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           prodh	equ	0xFF4
  1504                           prodl	equ	0xFF3
  1505                           intcon	equ	0xFF2
  1506                           intcon2	equ	0xFF1
  1507                           intcon3	equ	0xFF0
  1508                           postinc0	equ	0xFEE
  1509                           wreg	equ	0xFE8
  1510                           postdec1	equ	0xFE5
  1511                           fsr1l	equ	0xFE1
  1512                           status	equ	0xFD8
  1513                           
  1514 ;; *************** function ___llmod *****************
  1515 ;; Defined at:
  1516 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  dividend        4   23[BANK0 ] unsigned long 
  1519 ;;  divisor         4   27[BANK0 ] unsigned long 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  counter         1   31[BANK0 ] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  4   23[BANK0 ] unsigned long 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1531 ;;      Params:         0       8       0       0       0       0       0       0       0
  1532 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1534 ;;      Totals:         0       9       0       0       0       0       0       0       0
  1535 ;;Total ram usage:        9 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    4
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text4
  1546  001156                     __ptext4:
  1547                           	opt stack 0
  1548  001156                     ___llmod:
  1549                           	opt stack 26
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;incstack = 0
  1553  001156  0100               	movlb	0	; () banked
  1554  001158  517B               	movf	___llmod@divisor& (0+255),w,b
  1555  00115A  117C               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  1556  00115C  117D               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  1557  00115E  117E               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  1558  001160  B4D8               	btfsc	status,2,c
  1559  001162  D024               	goto	l553
  1560                           
  1561                           ; BSR set to: 0
  1562  001164  0E01               	movlw	1
  1563  001166  6F7F               	movwf	___llmod@counter& (0+255),b
  1564  001168  D006               	goto	l548
  1565  00116A                     
  1566                           ; BSR set to: 0
  1567                           
  1568                           ; BSR set to: 0
  1569  00116A  90D8               	bcf	status,0,c
  1570  00116C  377B               	rlcf	___llmod@divisor& (0+255),f,b
  1571  00116E  377C               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  1572  001170  377D               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  1573  001172  377E               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  1574  001174  2B7F               	incf	___llmod@counter& (0+255),f,b
  1575  001176                     l548:
  1576                           
  1577                           ; BSR set to: 0
  1578                           
  1579                           ; BSR set to: 0
  1580  001176  AF7E               	btfss	(___llmod@divisor+3)& (0+255),7,b
  1581  001178  D7F8               	goto	l549
  1582  00117A                     u1050:
  1583                           
  1584                           ; BSR set to: 0
  1585                           
  1586                           ; BSR set to: 0
  1587                           
  1588                           ; BSR set to: 0
  1589  00117A  517B               	movf	___llmod@divisor& (0+255),w,b
  1590  00117C  5D77               	subwf	___llmod@dividend& (0+255),w,b
  1591  00117E  517C               	movf	(___llmod@divisor+1)& (0+255),w,b
  1592  001180  5978               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  1593  001182  517D               	movf	(___llmod@divisor+2)& (0+255),w,b
  1594  001184  5979               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  1595  001186  517E               	movf	(___llmod@divisor+3)& (0+255),w,b
  1596  001188  597A               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  1597  00118A  A0D8               	btfss	status,0,c
  1598  00118C  D008               	goto	l552
  1599                           
  1600                           ; BSR set to: 0
  1601  00118E  517B               	movf	___llmod@divisor& (0+255),w,b
  1602  001190  5F77               	subwf	___llmod@dividend& (0+255),f,b
  1603  001192  517C               	movf	(___llmod@divisor+1)& (0+255),w,b
  1604  001194  5B78               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  1605  001196  517D               	movf	(___llmod@divisor+2)& (0+255),w,b
  1606  001198  5B79               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  1607  00119A  517E               	movf	(___llmod@divisor+3)& (0+255),w,b
  1608  00119C  5B7A               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  1609  00119E                     l552:
  1610                           
  1611                           ; BSR set to: 0
  1612                           
  1613                           ; BSR set to: 0
  1614  00119E  90D8               	bcf	status,0,c
  1615  0011A0  337E               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  1616  0011A2  337D               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  1617  0011A4  337C               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  1618  0011A6  337B               	rrcf	___llmod@divisor& (0+255),f,b
  1619                           
  1620                           ; BSR set to: 0
  1621  0011A8  2F7F               	decfsz	___llmod@counter& (0+255),f,b
  1622  0011AA  D7E7               	goto	u1050
  1623  0011AC                     l553:
  1624                           
  1625                           ; BSR set to: 0
  1626                           
  1627                           ; BSR set to: 0
  1628  0011AC  C077  F077         	movff	___llmod@dividend,?___llmod
  1629  0011B0  C078  F078         	movff	___llmod@dividend+1,?___llmod+1
  1630  0011B4  C079  F079         	movff	___llmod@dividend+2,?___llmod+2
  1631  0011B8  C07A  F07A         	movff	___llmod@dividend+3,?___llmod+3
  1632                           
  1633                           ; BSR set to: 0
  1634  0011BC  0012               	return		;funcret
  1635  0011BE                     __end_of___llmod:
  1636                           	opt stack 0
  1637                           tblptru	equ	0xFF8
  1638                           tblptrh	equ	0xFF7
  1639                           tblptrl	equ	0xFF6
  1640                           tablat	equ	0xFF5
  1641                           prodh	equ	0xFF4
  1642                           prodl	equ	0xFF3
  1643                           intcon	equ	0xFF2
  1644                           intcon2	equ	0xFF1
  1645                           intcon3	equ	0xFF0
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           postdec1	equ	0xFE5
  1649                           fsr1l	equ	0xFE1
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function ___lldiv *****************
  1653 ;; Defined at:
  1654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  dividend        4   23[BANK0 ] unsigned long 
  1657 ;;  divisor         4   27[BANK0 ] unsigned long 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  quotient        4   31[BANK0 ] unsigned long 
  1660 ;;  counter         1   35[BANK0 ] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  4   23[BANK0 ] unsigned long 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1670 ;;      Params:         0       8       0       0       0       0       0       0       0
  1671 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1673 ;;      Totals:         0      13       0       0       0       0       0       0       0
  1674 ;;Total ram usage:       13 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    4
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text5
  1685  001060                     __ptext5:
  1686                           	opt stack 0
  1687  001060                     ___lldiv:
  1688                           	opt stack 26
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;incstack = 0
  1692  001060  0E00               	movlw	0
  1693  001062  0100               	movlb	0	; () banked
  1694  001064  6F7F               	movwf	___lldiv@quotient& (0+255),b
  1695  001066  0E00               	movlw	0
  1696  001068  6F80               	movwf	(___lldiv@quotient+1)& (0+255),b
  1697  00106A  0E00               	movlw	0
  1698  00106C  6F81               	movwf	(___lldiv@quotient+2)& (0+255),b
  1699  00106E  0E00               	movlw	0
  1700  001070  6F82               	movwf	(___lldiv@quotient+3)& (0+255),b
  1701                           
  1702                           ; BSR set to: 0
  1703  001072  517B               	movf	___lldiv@divisor& (0+255),w,b
  1704  001074  117C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  1705  001076  117D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  1706  001078  117E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  1707  00107A  B4D8               	btfsc	status,2,c
  1708  00107C  D02A               	goto	l543
  1709                           
  1710                           ; BSR set to: 0
  1711  00107E  0E01               	movlw	1
  1712  001080  6F83               	movwf	___lldiv@counter& (0+255),b
  1713  001082  D006               	goto	l538
  1714  001084                     
  1715                           ; BSR set to: 0
  1716                           
  1717                           ; BSR set to: 0
  1718  001084  90D8               	bcf	status,0,c
  1719  001086  377B               	rlcf	___lldiv@divisor& (0+255),f,b
  1720  001088  377C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  1721  00108A  377D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  1722  00108C  377E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  1723  00108E  2B83               	incf	___lldiv@counter& (0+255),f,b
  1724  001090                     l538:
  1725                           
  1726                           ; BSR set to: 0
  1727                           
  1728                           ; BSR set to: 0
  1729  001090  AF7E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  1730  001092  D7F8               	goto	l539
  1731  001094                     u1020:
  1732                           
  1733                           ; BSR set to: 0
  1734                           
  1735                           ; BSR set to: 0
  1736                           
  1737                           ; BSR set to: 0
  1738  001094  90D8               	bcf	status,0,c
  1739  001096  377F               	rlcf	___lldiv@quotient& (0+255),f,b
  1740  001098  3780               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  1741  00109A  3781               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  1742  00109C  3782               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  1743                           
  1744                           ; BSR set to: 0
  1745  00109E  517B               	movf	___lldiv@divisor& (0+255),w,b
  1746  0010A0  5D77               	subwf	___lldiv@dividend& (0+255),w,b
  1747  0010A2  517C               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1748  0010A4  5978               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  1749  0010A6  517D               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1750  0010A8  5979               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  1751  0010AA  517E               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1752  0010AC  597A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  1753  0010AE  A0D8               	btfss	status,0,c
  1754  0010B0  D009               	goto	l542
  1755                           
  1756                           ; BSR set to: 0
  1757  0010B2  517B               	movf	___lldiv@divisor& (0+255),w,b
  1758  0010B4  5F77               	subwf	___lldiv@dividend& (0+255),f,b
  1759  0010B6  517C               	movf	(___lldiv@divisor+1)& (0+255),w,b
  1760  0010B8  5B78               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  1761  0010BA  517D               	movf	(___lldiv@divisor+2)& (0+255),w,b
  1762  0010BC  5B79               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  1763  0010BE  517E               	movf	(___lldiv@divisor+3)& (0+255),w,b
  1764  0010C0  5B7A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  1765                           
  1766                           ; BSR set to: 0
  1767  0010C2  817F               	bsf	___lldiv@quotient& (0+255),0,b
  1768  0010C4                     l542:
  1769                           
  1770                           ; BSR set to: 0
  1771                           
  1772                           ; BSR set to: 0
  1773  0010C4  90D8               	bcf	status,0,c
  1774  0010C6  337E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  1775  0010C8  337D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  1776  0010CA  337C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  1777  0010CC  337B               	rrcf	___lldiv@divisor& (0+255),f,b
  1778                           
  1779                           ; BSR set to: 0
  1780  0010CE  2F83               	decfsz	___lldiv@counter& (0+255),f,b
  1781  0010D0  D7E1               	goto	u1020
  1782  0010D2                     l543:
  1783                           
  1784                           ; BSR set to: 0
  1785                           
  1786                           ; BSR set to: 0
  1787  0010D2  C07F  F077         	movff	___lldiv@quotient,?___lldiv
  1788  0010D6  C080  F078         	movff	___lldiv@quotient+1,?___lldiv+1
  1789  0010DA  C081  F079         	movff	___lldiv@quotient+2,?___lldiv+2
  1790  0010DE  C082  F07A         	movff	___lldiv@quotient+3,?___lldiv+3
  1791                           
  1792                           ; BSR set to: 0
  1793  0010E2  0012               	return		;funcret
  1794  0010E4                     __end_of___lldiv:
  1795                           	opt stack 0
  1796                           tblptru	equ	0xFF8
  1797                           tblptrh	equ	0xFF7
  1798                           tblptrl	equ	0xFF6
  1799                           tablat	equ	0xFF5
  1800                           prodh	equ	0xFF4
  1801                           prodl	equ	0xFF3
  1802                           intcon	equ	0xFF2
  1803                           intcon2	equ	0xFF1
  1804                           intcon3	equ	0xFF0
  1805                           postinc0	equ	0xFEE
  1806                           wreg	equ	0xFE8
  1807                           postdec1	equ	0xFE5
  1808                           fsr1l	equ	0xFE1
  1809                           status	equ	0xFD8
  1810                           
  1811 ;; *************** function ___awmod *****************
  1812 ;; Defined at:
  1813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  dividend        2   23[BANK0 ] int 
  1816 ;;  divisor         2   25[BANK0 ] int 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  sign            1   28[BANK0 ] unsigned char 
  1819 ;;  counter         1   27[BANK0 ] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  2   23[BANK0 ] int 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1829 ;;      Params:         0       4       0       0       0       0       0       0       0
  1830 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1832 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1833 ;;Total ram usage:        6 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    4
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text6
  1844  0010E4                     __ptext6:
  1845                           	opt stack 0
  1846  0010E4                     ___awmod:
  1847                           	opt stack 26
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;incstack = 0
  1851  0010E4  0E00               	movlw	0
  1852  0010E6  0100               	movlb	0	; () banked
  1853  0010E8  6F7C               	movwf	___awmod@sign& (0+255),b
  1854                           
  1855                           ; BSR set to: 0
  1856  0010EA  AF78               	btfss	(___awmod@dividend+1)& (0+255),7,b
  1857  0010EC  D006               	goto	l368
  1858                           
  1859                           ; BSR set to: 0
  1860  0010EE  6D77               	negf	___awmod@dividend& (0+255),b
  1861  0010F0  1F78               	comf	(___awmod@dividend+1)& (0+255),f,b
  1862  0010F2  B0D8               	btfsc	status,0,c
  1863  0010F4  2B78               	incf	(___awmod@dividend+1)& (0+255),f,b
  1864                           
  1865                           ; BSR set to: 0
  1866  0010F6  0E01               	movlw	1
  1867  0010F8  6F7C               	movwf	___awmod@sign& (0+255),b
  1868  0010FA                     l368:
  1869                           
  1870                           ; BSR set to: 0
  1871                           
  1872                           ; BSR set to: 0
  1873  0010FA  AF7A               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1874  0010FC  D004               	goto	l369
  1875                           
  1876                           ; BSR set to: 0
  1877  0010FE  6D79               	negf	___awmod@divisor& (0+255),b
  1878  001100  1F7A               	comf	(___awmod@divisor+1)& (0+255),f,b
  1879  001102  B0D8               	btfsc	status,0,c
  1880  001104  2B7A               	incf	(___awmod@divisor+1)& (0+255),f,b
  1881  001106                     l369:
  1882                           
  1883                           ; BSR set to: 0
  1884                           
  1885                           ; BSR set to: 0
  1886  001106  5179               	movf	___awmod@divisor& (0+255),w,b
  1887  001108  117A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1888  00110A  B4D8               	btfsc	status,2,c
  1889  00110C  D018               	goto	l376
  1890                           
  1891                           ; BSR set to: 0
  1892  00110E  0E01               	movlw	1
  1893  001110  6F7B               	movwf	___awmod@counter& (0+255),b
  1894  001112  D004               	goto	l371
  1895  001114                     
  1896                           ; BSR set to: 0
  1897                           
  1898                           ; BSR set to: 0
  1899  001114  90D8               	bcf	status,0,c
  1900  001116  3779               	rlcf	___awmod@divisor& (0+255),f,b
  1901  001118  377A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1902  00111A  2B7B               	incf	___awmod@counter& (0+255),f,b
  1903  00111C                     l371:
  1904                           
  1905                           ; BSR set to: 0
  1906                           
  1907                           ; BSR set to: 0
  1908  00111C  AF7A               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1909  00111E  D7FA               	goto	l372
  1910  001120                     u900:
  1911                           
  1912                           ; BSR set to: 0
  1913                           
  1914                           ; BSR set to: 0
  1915                           
  1916                           ; BSR set to: 0
  1917  001120  5179               	movf	___awmod@divisor& (0+255),w,b
  1918  001122  5D77               	subwf	___awmod@dividend& (0+255),w,b
  1919  001124  517A               	movf	(___awmod@divisor+1)& (0+255),w,b
  1920  001126  5978               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1921  001128  A0D8               	btfss	status,0,c
  1922  00112A  D004               	goto	l375
  1923                           
  1924                           ; BSR set to: 0
  1925  00112C  5179               	movf	___awmod@divisor& (0+255),w,b
  1926  00112E  5F77               	subwf	___awmod@dividend& (0+255),f,b
  1927  001130  517A               	movf	(___awmod@divisor+1)& (0+255),w,b
  1928  001132  5B78               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1929  001134                     l375:
  1930                           
  1931                           ; BSR set to: 0
  1932                           
  1933                           ; BSR set to: 0
  1934  001134  90D8               	bcf	status,0,c
  1935  001136  337A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1936  001138  3379               	rrcf	___awmod@divisor& (0+255),f,b
  1937                           
  1938                           ; BSR set to: 0
  1939  00113A  2F7B               	decfsz	___awmod@counter& (0+255),f,b
  1940  00113C  D7F1               	goto	u900
  1941  00113E                     l376:
  1942                           
  1943                           ; BSR set to: 0
  1944                           
  1945                           ; BSR set to: 0
  1946                           
  1947                           ; BSR set to: 0
  1948  00113E  517C               	movf	___awmod@sign& (0+255),w,b
  1949  001140  B4D8               	btfsc	status,2,c
  1950  001142  D004               	goto	l377
  1951                           
  1952                           ; BSR set to: 0
  1953  001144  6D77               	negf	___awmod@dividend& (0+255),b
  1954  001146  1F78               	comf	(___awmod@dividend+1)& (0+255),f,b
  1955  001148  B0D8               	btfsc	status,0,c
  1956  00114A  2B78               	incf	(___awmod@dividend+1)& (0+255),f,b
  1957  00114C                     l377:
  1958                           
  1959                           ; BSR set to: 0
  1960                           
  1961                           ; BSR set to: 0
  1962  00114C  C077  F077         	movff	___awmod@dividend,?___awmod
  1963  001150  C078  F078         	movff	___awmod@dividend+1,?___awmod+1
  1964  001154  0012               	return	
  1965  001156                     __end_of___awmod:
  1966                           	opt stack 0
  1967                           tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           prodh	equ	0xFF4
  1972                           prodl	equ	0xFF3
  1973                           intcon	equ	0xFF2
  1974                           intcon2	equ	0xFF1
  1975                           intcon3	equ	0xFF0
  1976                           postinc0	equ	0xFEE
  1977                           wreg	equ	0xFE8
  1978                           postdec1	equ	0xFE5
  1979                           fsr1l	equ	0xFE1
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function ___awdiv *****************
  1983 ;; Defined at:
  1984 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  dividend        2   23[BANK0 ] int 
  1987 ;;  divisor         2   25[BANK0 ] int 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  quotient        2   29[BANK0 ] int 
  1990 ;;  sign            1   28[BANK0 ] unsigned char 
  1991 ;;  counter         1   27[BANK0 ] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  2   23[BANK0 ] int 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2001 ;;      Params:         0       4       0       0       0       0       0       0       0
  2002 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2004 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2005 ;;Total ram usage:        8 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    4
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text7
  2016  000FDA                     __ptext7:
  2017                           	opt stack 0
  2018  000FDA                     ___awdiv:
  2019                           	opt stack 26
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;incstack = 0
  2023  000FDA  0E00               	movlw	0
  2024  000FDC  0100               	movlb	0	; () banked
  2025  000FDE  6F7C               	movwf	___awdiv@sign& (0+255),b
  2026                           
  2027                           ; BSR set to: 0
  2028  000FE0  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2029  000FE2  D006               	goto	l355
  2030                           
  2031                           ; BSR set to: 0
  2032  000FE4  6D79               	negf	___awdiv@divisor& (0+255),b
  2033  000FE6  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2034  000FE8  B0D8               	btfsc	status,0,c
  2035  000FEA  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2036                           
  2037                           ; BSR set to: 0
  2038  000FEC  0E01               	movlw	1
  2039  000FEE  6F7C               	movwf	___awdiv@sign& (0+255),b
  2040  000FF0                     l355:
  2041                           
  2042                           ; BSR set to: 0
  2043                           
  2044                           ; BSR set to: 0
  2045  000FF0  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2046  000FF2  D006               	goto	l356
  2047                           
  2048                           ; BSR set to: 0
  2049  000FF4  6D77               	negf	___awdiv@dividend& (0+255),b
  2050  000FF6  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2051  000FF8  B0D8               	btfsc	status,0,c
  2052  000FFA  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2053                           
  2054                           ; BSR set to: 0
  2055  000FFC  0E01               	movlw	1
  2056  000FFE  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
  2057  001000                     l356:
  2058                           
  2059                           ; BSR set to: 0
  2060                           
  2061                           ; BSR set to: 0
  2062  001000  0E00               	movlw	0
  2063  001002  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
  2064  001004  0E00               	movlw	0
  2065  001006  6F7D               	movwf	___awdiv@quotient& (0+255),b
  2066                           
  2067                           ; BSR set to: 0
  2068  001008  5179               	movf	___awdiv@divisor& (0+255),w,b
  2069  00100A  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2070  00100C  B4D8               	btfsc	status,2,c
  2071  00100E  D01C               	goto	l363
  2072                           
  2073                           ; BSR set to: 0
  2074  001010  0E01               	movlw	1
  2075  001012  6F7B               	movwf	___awdiv@counter& (0+255),b
  2076  001014  D004               	goto	l358
  2077  001016                     
  2078                           ; BSR set to: 0
  2079                           
  2080                           ; BSR set to: 0
  2081  001016  90D8               	bcf	status,0,c
  2082  001018  3779               	rlcf	___awdiv@divisor& (0+255),f,b
  2083  00101A  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2084  00101C  2B7B               	incf	___awdiv@counter& (0+255),f,b
  2085  00101E                     l358:
  2086                           
  2087                           ; BSR set to: 0
  2088                           
  2089                           ; BSR set to: 0
  2090  00101E  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2091  001020  D7FA               	goto	l359
  2092  001022                     u840:
  2093                           
  2094                           ; BSR set to: 0
  2095                           
  2096                           ; BSR set to: 0
  2097                           
  2098                           ; BSR set to: 0
  2099  001022  90D8               	bcf	status,0,c
  2100  001024  377D               	rlcf	___awdiv@quotient& (0+255),f,b
  2101  001026  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2102                           
  2103                           ; BSR set to: 0
  2104  001028  5179               	movf	___awdiv@divisor& (0+255),w,b
  2105  00102A  5D77               	subwf	___awdiv@dividend& (0+255),w,b
  2106  00102C  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2107  00102E  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2108  001030  A0D8               	btfss	status,0,c
  2109  001032  D005               	goto	l362
  2110                           
  2111                           ; BSR set to: 0
  2112  001034  5179               	movf	___awdiv@divisor& (0+255),w,b
  2113  001036  5F77               	subwf	___awdiv@dividend& (0+255),f,b
  2114  001038  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2115  00103A  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2116                           
  2117                           ; BSR set to: 0
  2118  00103C  817D               	bsf	___awdiv@quotient& (0+255),0,b
  2119  00103E                     l362:
  2120                           
  2121                           ; BSR set to: 0
  2122                           
  2123                           ; BSR set to: 0
  2124  00103E  90D8               	bcf	status,0,c
  2125  001040  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2126  001042  3379               	rrcf	___awdiv@divisor& (0+255),f,b
  2127                           
  2128                           ; BSR set to: 0
  2129  001044  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
  2130  001046  D7ED               	goto	u840
  2131  001048                     l363:
  2132                           
  2133                           ; BSR set to: 0
  2134                           
  2135                           ; BSR set to: 0
  2136                           
  2137                           ; BSR set to: 0
  2138  001048  517C               	movf	___awdiv@sign& (0+255),w,b
  2139  00104A  B4D8               	btfsc	status,2,c
  2140  00104C  D004               	goto	l364
  2141                           
  2142                           ; BSR set to: 0
  2143  00104E  6D7D               	negf	___awdiv@quotient& (0+255),b
  2144  001050  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2145  001052  B0D8               	btfsc	status,0,c
  2146  001054  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2147  001056                     l364:
  2148                           
  2149                           ; BSR set to: 0
  2150                           
  2151                           ; BSR set to: 0
  2152  001056  C07D  F077         	movff	___awdiv@quotient,?___awdiv
  2153  00105A  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
  2154  00105E  0012               	return	
  2155  001060                     __end_of___awdiv:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           prodh	equ	0xFF4
  2162                           prodl	equ	0xFF3
  2163                           intcon	equ	0xFF2
  2164                           intcon2	equ	0xFF1
  2165                           intcon3	equ	0xFF0
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1l	equ	0xFE1
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _OpenXLCD *****************
  2173 ;; Defined at:
  2174 ;;		line 41 in file "nxlcd.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  lcdtype         1    wreg     unsigned char 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  lcdtype         1   24[BANK0 ] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0
  2189 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2191 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2192 ;;Total ram usage:        1 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    6
  2195 ;; This function calls:
  2196 ;;		_BusyXLCD
  2197 ;;		_DelayPORXLCD
  2198 ;;		_DelayXLCD
  2199 ;;		_SetDDRamAddr
  2200 ;;		_WriteCmdXLCD
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text8
  2207  000F2E                     __ptext8:
  2208                           	opt stack 0
  2209  000F2E                     _OpenXLCD:
  2210                           	opt stack 24
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;incstack = 0
  2214                           ;OpenXLCD@lcdtype stored from wreg
  2215  000F2E  0100               	movlb	0	; () banked
  2216  000F30  6F78               	movwf	OpenXLCD@lcdtype& (0+255),b
  2217                           
  2218                           ;nxlcd.c: 50: PORTD &= 0x0f;
  2219  000F32  0E0F               	movlw	15
  2220  000F34  1683               	andwf	3971,f,c	;volatile
  2221                           
  2222                           ;nxlcd.c: 51: TRISD &= 0x0F;
  2223  000F36  0E0F               	movlw	15
  2224  000F38  1695               	andwf	3989,f,c	;volatile
  2225                           
  2226                           ;nxlcd.c: 57: TRISEbits.TRISE2 = 0;
  2227  000F3A  9496               	bcf	3990,2,c	;volatile
  2228                           
  2229                           ;nxlcd.c: 58: TRISEbits.TRISE0 = 0;
  2230  000F3C  9096               	bcf	3990,0,c	;volatile
  2231                           
  2232                           ;nxlcd.c: 59: TRISEbits.TRISE1 = 0;
  2233  000F3E  9296               	bcf	3990,1,c	;volatile
  2234                           
  2235                           ;nxlcd.c: 60: LATEbits.LATE2 = 0;
  2236  000F40  948D               	bcf	3981,2,c	;volatile
  2237                           
  2238                           ;nxlcd.c: 61: LATEbits.LATE0 = 0;
  2239  000F42  908D               	bcf	3981,0,c	;volatile
  2240                           
  2241                           ;nxlcd.c: 62: LATEbits.LATE1 = 0;
  2242  000F44  928D               	bcf	3981,1,c	;volatile
  2243                           
  2244                           ;nxlcd.c: 65: DelayPORXLCD();
  2245  000F46  EC01  F00A         	call	_DelayPORXLCD	;wreg free
  2246                           
  2247                           ;nxlcd.c: 67: WriteCmdXLCD(0x30);
  2248  000F4A  0E30               	movlw	48
  2249  000F4C  EC77  F009         	call	_WriteCmdXLCD
  2250                           
  2251                           ;nxlcd.c: 68: DelayXLCD();
  2252  000F50  ECF7  F009         	call	_DelayXLCD	;wreg free
  2253                           
  2254                           ;nxlcd.c: 69: DelayXLCD();
  2255  000F54  ECF7  F009         	call	_DelayXLCD	;wreg free
  2256                           
  2257                           ;nxlcd.c: 70: WriteCmdXLCD(0x30);
  2258  000F58  0E30               	movlw	48
  2259  000F5A  EC77  F009         	call	_WriteCmdXLCD
  2260                           
  2261                           ;nxlcd.c: 71: DelayXLCD();
  2262  000F5E  ECF7  F009         	call	_DelayXLCD	;wreg free
  2263                           
  2264                           ;nxlcd.c: 72: DelayXLCD();
  2265  000F62  ECF7  F009         	call	_DelayXLCD	;wreg free
  2266                           
  2267                           ;nxlcd.c: 73: WriteCmdXLCD(0x32);
  2268  000F66  0E32               	movlw	50
  2269  000F68  EC77  F009         	call	_WriteCmdXLCD
  2270  000F6C  EC99  F009         	call	_BusyXLCD	;wreg free
  2271  000F70  0900               	iorlw	0
  2272  000F72  A4D8               	btfss	status,2,c
  2273  000F74  D7FB               	goto	l126
  2274  000F76                     u660:
  2275                           
  2276                           ;nxlcd.c: 79: while(BusyXLCD());
  2277  000F76  EC99  F009         	call	_BusyXLCD	;wreg free
  2278  000F7A  0900               	iorlw	0
  2279  000F7C  A4D8               	btfss	status,2,c
  2280  000F7E  D7FB               	goto	u660
  2281                           
  2282                           ;nxlcd.c: 80: WriteCmdXLCD(lcdtype);
  2283  000F80  0100               	movlb	0	; () banked
  2284  000F82  5178               	movf	OpenXLCD@lcdtype& (0+255),w,b
  2285  000F84  EC77  F009         	call	_WriteCmdXLCD
  2286  000F88  EC99  F009         	call	_BusyXLCD	;wreg free
  2287  000F8C  0900               	iorlw	0
  2288  000F8E  A4D8               	btfss	status,2,c
  2289  000F90  D7FB               	goto	l132
  2290                           
  2291                           ;nxlcd.c: 84: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  2292  000F92  0E08               	movlw	8
  2293  000F94  EC77  F009         	call	_WriteCmdXLCD
  2294  000F98  EC99  F009         	call	_BusyXLCD	;wreg free
  2295  000F9C  0900               	iorlw	0
  2296  000F9E  A4D8               	btfss	status,2,c
  2297  000FA0  D7FB               	goto	l135
  2298                           
  2299                           ;nxlcd.c: 86: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  2300  000FA2  0E0F               	movlw	15
  2301  000FA4  EC77  F009         	call	_WriteCmdXLCD
  2302  000FA8  EC99  F009         	call	_BusyXLCD	;wreg free
  2303  000FAC  0900               	iorlw	0
  2304  000FAE  A4D8               	btfss	status,2,c
  2305  000FB0  D7FB               	goto	l138
  2306                           
  2307                           ;nxlcd.c: 90: WriteCmdXLCD(0x01);
  2308  000FB2  0E01               	movlw	1
  2309  000FB4  EC77  F009         	call	_WriteCmdXLCD
  2310  000FB8  EC99  F009         	call	_BusyXLCD	;wreg free
  2311  000FBC  0900               	iorlw	0
  2312  000FBE  A4D8               	btfss	status,2,c
  2313  000FC0  D7FB               	goto	l141
  2314                           
  2315                           ;nxlcd.c: 94: WriteCmdXLCD(0b00000100);
  2316  000FC2  0E04               	movlw	4
  2317  000FC4  EC77  F009         	call	_WriteCmdXLCD
  2318  000FC8  EC99  F009         	call	_BusyXLCD	;wreg free
  2319  000FCC  0900               	iorlw	0
  2320  000FCE  A4D8               	btfss	status,2,c
  2321  000FD0  D7FB               	goto	l144
  2322                           
  2323                           ;nxlcd.c: 98: SetDDRamAddr(0x80);
  2324  000FD2  0E80               	movlw	128
  2325  000FD4  EC32  F009         	call	_SetDDRamAddr
  2326  000FD8  0012               	return	
  2327  000FDA                     __end_of_OpenXLCD:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           intcon	equ	0xFF2
  2336                           intcon2	equ	0xFF1
  2337                           intcon3	equ	0xFF0
  2338                           postinc0	equ	0xFEE
  2339                           wreg	equ	0xFE8
  2340                           postdec1	equ	0xFE5
  2341                           fsr1l	equ	0xFE1
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _WriteCmdXLCD *****************
  2345 ;; Defined at:
  2346 ;;		line 388 in file "nxlcd.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  cmd             1    wreg     unsigned char 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  cmd             1   23[BANK0 ] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0
  2361 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2363 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2364 ;;Total ram usage:        1 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    5
  2367 ;; This function calls:
  2368 ;;		_DelayFor18TCY
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;;		_OpenXLCD
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text9
  2376  0012EE                     __ptext9:
  2377                           	opt stack 0
  2378  0012EE                     _WriteCmdXLCD:
  2379                           	opt stack 25
  2380                           
  2381                           ;incstack = 0
  2382                           ;WriteCmdXLCD@cmd stored from wreg
  2383  0012EE  0100               	movlb	0	; () banked
  2384  0012F0  6F77               	movwf	WriteCmdXLCD@cmd& (0+255),b
  2385                           
  2386                           ;nxlcd.c: 403: TRISD &= 0x0f;
  2387  0012F2  0E0F               	movlw	15
  2388  0012F4  1695               	andwf	3989,f,c	;volatile
  2389                           
  2390                           ;nxlcd.c: 404: PORTD &= 0x0f;
  2391  0012F6  0E0F               	movlw	15
  2392  0012F8  1683               	andwf	3971,f,c	;volatile
  2393                           
  2394                           ;nxlcd.c: 405: PORTD |= cmd&0xf0;
  2395  0012FA  0100               	movlb	0	; () banked
  2396  0012FC  5177               	movf	WriteCmdXLCD@cmd& (0+255),w,b
  2397  0012FE  0BF0               	andlw	240
  2398  001300  1283               	iorwf	3971,f,c	;volatile
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;nxlcd.c: 411: LATEbits.LATE2 = 0;
  2402  001302  948D               	bcf	3981,2,c	;volatile
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;nxlcd.c: 412: LATEbits.LATE0 = 0;
  2406  001304  908D               	bcf	3981,0,c	;volatile
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;nxlcd.c: 413: DelayFor18TCY();
  2410  001306  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2411                           
  2412                           ;nxlcd.c: 414: LATEbits.LATE1 = 1;
  2413  00130A  828D               	bsf	3981,1,c	;volatile
  2414                           
  2415                           ;nxlcd.c: 415: DelayFor18TCY();
  2416  00130C  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2417                           
  2418                           ;nxlcd.c: 416: LATEbits.LATE1 = 0;
  2419  001310  928D               	bcf	3981,1,c	;volatile
  2420                           
  2421                           ;nxlcd.c: 418: PORTD &= 0x0f;
  2422  001312  0E0F               	movlw	15
  2423  001314  1683               	andwf	3971,f,c	;volatile
  2424                           
  2425                           ;nxlcd.c: 419: PORTD |= (cmd<<4)&0xf0;
  2426  001316  0100               	movlb	0	; () banked
  2427  001318  3977               	swapf	WriteCmdXLCD@cmd& (0+255),w,b
  2428  00131A  0BF0               	andlw	240
  2429  00131C  0BF0               	andlw	240
  2430  00131E  1283               	iorwf	3971,f,c	;volatile
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;nxlcd.c: 424: DelayFor18TCY();
  2434  001320  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2435                           
  2436                           ;nxlcd.c: 425: LATEbits.LATE1 = 1;
  2437  001324  828D               	bsf	3981,1,c	;volatile
  2438                           
  2439                           ;nxlcd.c: 426: DelayFor18TCY();
  2440  001326  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2441                           
  2442                           ;nxlcd.c: 427: LATEbits.LATE1 = 0;
  2443  00132A  928D               	bcf	3981,1,c	;volatile
  2444                           
  2445                           ;nxlcd.c: 429: TRISD |= 0xf0;
  2446  00132C  0EF0               	movlw	240
  2447  00132E  1295               	iorwf	3989,f,c	;volatile
  2448  001330  0012               	return	
  2449  001332                     __end_of_WriteCmdXLCD:
  2450                           	opt stack 0
  2451                           tblptru	equ	0xFF8
  2452                           tblptrh	equ	0xFF7
  2453                           tblptrl	equ	0xFF6
  2454                           tablat	equ	0xFF5
  2455                           prodh	equ	0xFF4
  2456                           prodl	equ	0xFF3
  2457                           intcon	equ	0xFF2
  2458                           intcon2	equ	0xFF1
  2459                           intcon3	equ	0xFF0
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1l	equ	0xFE1
  2464                           status	equ	0xFD8
  2465                           
  2466 ;; *************** function _SetDDRamAddr *****************
  2467 ;; Defined at:
  2468 ;;		line 171 in file "nxlcd.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  DDaddr          1    wreg     unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  DDaddr          1   23[BANK0 ] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2482 ;;      Params:         0       0       0       0       0       0       0       0       0
  2483 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2485 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2486 ;;Total ram usage:        1 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    5
  2489 ;; This function calls:
  2490 ;;		_DelayFor18TCY
  2491 ;; This function is called by:
  2492 ;;		_OpenXLCD
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text10
  2497  001264                     __ptext10:
  2498                           	opt stack 0
  2499  001264                     _SetDDRamAddr:
  2500                           	opt stack 24
  2501                           
  2502                           ;incstack = 0
  2503                           ;SetDDRamAddr@DDaddr stored from wreg
  2504  001264  0100               	movlb	0	; () banked
  2505  001266  6F77               	movwf	SetDDRamAddr@DDaddr& (0+255),b
  2506                           
  2507                           ;nxlcd.c: 186: TRISD &= 0x0f;
  2508  001268  0E0F               	movlw	15
  2509  00126A  1695               	andwf	3989,f,c	;volatile
  2510                           
  2511                           ;nxlcd.c: 187: PORTD &= 0x0f;
  2512  00126C  0E0F               	movlw	15
  2513  00126E  1683               	andwf	3971,f,c	;volatile
  2514                           
  2515                           ;nxlcd.c: 188: PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  2516  001270  0100               	movlb	0	; () banked
  2517  001272  5177               	movf	SetDDRamAddr@DDaddr& (0+255),w,b
  2518  001274  0980               	iorlw	128
  2519  001276  0BF0               	andlw	240
  2520  001278  1283               	iorwf	3971,f,c	;volatile
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;nxlcd.c: 194: LATEbits.LATE2 = 0;
  2524  00127A  948D               	bcf	3981,2,c	;volatile
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;nxlcd.c: 195: LATEbits.LATE0 = 0;
  2528  00127C  908D               	bcf	3981,0,c	;volatile
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;nxlcd.c: 196: DelayFor18TCY();
  2532  00127E  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2533                           
  2534                           ;nxlcd.c: 197: LATEbits.LATE1 = 1;
  2535  001282  828D               	bsf	3981,1,c	;volatile
  2536                           
  2537                           ;nxlcd.c: 198: DelayFor18TCY();
  2538  001284  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2539                           
  2540                           ;nxlcd.c: 199: LATEbits.LATE1 = 0;
  2541  001288  928D               	bcf	3981,1,c	;volatile
  2542                           
  2543                           ;nxlcd.c: 201: PORTD &= 0x0f;
  2544  00128A  0E0F               	movlw	15
  2545  00128C  1683               	andwf	3971,f,c	;volatile
  2546                           
  2547                           ;nxlcd.c: 202: PORTD |= ((DDaddr<<4)&0xf0);
  2548  00128E  0100               	movlb	0	; () banked
  2549  001290  3977               	swapf	SetDDRamAddr@DDaddr& (0+255),w,b
  2550  001292  0BF0               	andlw	240
  2551  001294  0BF0               	andlw	240
  2552  001296  1283               	iorwf	3971,f,c	;volatile
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;nxlcd.c: 207: DelayFor18TCY();
  2556  001298  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2557                           
  2558                           ;nxlcd.c: 208: LATEbits.LATE1 = 1;
  2559  00129C  828D               	bsf	3981,1,c	;volatile
  2560                           
  2561                           ;nxlcd.c: 209: DelayFor18TCY();
  2562  00129E  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2563                           
  2564                           ;nxlcd.c: 210: LATEbits.LATE1 = 0;
  2565  0012A2  928D               	bcf	3981,1,c	;volatile
  2566                           
  2567                           ;nxlcd.c: 212: TRISD |= 0xf0;
  2568  0012A4  0EF0               	movlw	240
  2569  0012A6  1295               	iorwf	3989,f,c	;volatile
  2570  0012A8  0012               	return	
  2571  0012AA                     __end_of_SetDDRamAddr:
  2572                           	opt stack 0
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           prodh	equ	0xFF4
  2578                           prodl	equ	0xFF3
  2579                           intcon	equ	0xFF2
  2580                           intcon2	equ	0xFF1
  2581                           intcon3	equ	0xFF0
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           postdec1	equ	0xFE5
  2585                           fsr1l	equ	0xFE1
  2586                           status	equ	0xFD8
  2587                           
  2588 ;; *************** function _DelayXLCD *****************
  2589 ;; Defined at:
  2590 ;;		line 22 in file "nxlcd.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2606 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2607 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2608 ;;Total ram usage:        1 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    4
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_OpenXLCD
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text11
  2619  0013EE                     __ptext11:
  2620                           	opt stack 0
  2621  0013EE                     _DelayXLCD:
  2622                           	opt stack 25
  2623                           
  2624                           ;nxlcd.c: 24: _delay((unsigned long)((5)*(20000000/4000.0)));
  2625                           
  2626                           ;incstack = 0
  2627  0013EE  0E21               	movlw	33
  2628  0013F0  0100               	movlb	0	; () banked
  2629  0013F2  6F77               	movwf	??_DelayXLCD& (0+255),b
  2630  0013F4  0E76               	movlw	118
  2631  0013F6                     u1147:
  2632  0013F6  2EE8               	decfsz	wreg,f,c
  2633  0013F8  D7FE               	bra	u1147
  2634  0013FA  2F77               	decfsz	??_DelayXLCD& (0+255),f,b
  2635  0013FC  D7FC               	bra	u1147
  2636  0013FE  F000               	nop	
  2637  001400  0012               	return		;funcret
  2638  001402                     __end_of_DelayXLCD:
  2639                           	opt stack 0
  2640                           tblptru	equ	0xFF8
  2641                           tblptrh	equ	0xFF7
  2642                           tblptrl	equ	0xFF6
  2643                           tablat	equ	0xFF5
  2644                           prodh	equ	0xFF4
  2645                           prodl	equ	0xFF3
  2646                           intcon	equ	0xFF2
  2647                           intcon2	equ	0xFF1
  2648                           intcon3	equ	0xFF0
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           postdec1	equ	0xFE5
  2652                           fsr1l	equ	0xFE1
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function _DelayPORXLCD *****************
  2656 ;; Defined at:
  2657 ;;		line 17 in file "nxlcd.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2673 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2674 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2675 ;;Total ram usage:        1 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    4
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_OpenXLCD
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text12
  2686  001402                     __ptext12:
  2687                           	opt stack 0
  2688  001402                     _DelayPORXLCD:
  2689                           	opt stack 25
  2690                           
  2691                           ;nxlcd.c: 19: _delay((unsigned long)((15)*(20000000/4000.0)));
  2692                           
  2693                           ;incstack = 0
  2694  001402  0E62               	movlw	98
  2695  001404  0100               	movlb	0	; () banked
  2696  001406  6F77               	movwf	??_DelayPORXLCD& (0+255),b
  2697  001408  0E65               	movlw	101
  2698  00140A                     u1157:
  2699  00140A  2EE8               	decfsz	wreg,f,c
  2700  00140C  D7FE               	bra	u1157
  2701  00140E  2F77               	decfsz	??_DelayPORXLCD& (0+255),f,b
  2702  001410  D7FC               	bra	u1157
  2703  001412  D000               	nop2	
  2704  001414  0012               	return		;funcret
  2705  001416                     __end_of_DelayPORXLCD:
  2706                           	opt stack 0
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           prodh	equ	0xFF4
  2712                           prodl	equ	0xFF3
  2713                           intcon	equ	0xFF2
  2714                           intcon2	equ	0xFF1
  2715                           intcon3	equ	0xFF0
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           postdec1	equ	0xFE5
  2719                           fsr1l	equ	0xFE1
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function _BusyXLCD *****************
  2723 ;; Defined at:
  2724 ;;		line 227 in file "nxlcd.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      unsigned char 
  2731 ;; Registers used:
  2732 ;;		wreg, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    5
  2745 ;; This function calls:
  2746 ;;		_DelayFor18TCY
  2747 ;; This function is called by:
  2748 ;;		_OpenXLCD
  2749 ;;		_putsXLCD
  2750 ;;		_putrsXLCD
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text13
  2755  001332                     __ptext13:
  2756                           	opt stack 0
  2757  001332                     _BusyXLCD:
  2758                           	opt stack 24
  2759                           
  2760                           ;nxlcd.c: 229: LATEbits.LATE2 = 1;
  2761                           
  2762                           ;incstack = 0
  2763  001332  848D               	bsf	3981,2,c	;volatile
  2764                           
  2765                           ;nxlcd.c: 230: LATEbits.LATE0 = 0;
  2766  001334  908D               	bcf	3981,0,c	;volatile
  2767                           
  2768                           ;nxlcd.c: 231: DelayFor18TCY();
  2769  001336  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2770                           
  2771                           ;nxlcd.c: 232: LATEbits.LATE1 = 1;
  2772  00133A  828D               	bsf	3981,1,c	;volatile
  2773                           
  2774                           ;nxlcd.c: 233: DelayFor18TCY();
  2775  00133C  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2776                           
  2777                           ;nxlcd.c: 249: if(PORTD&0x80)
  2778  001340  AE83               	btfss	3971,7,c	;volatile
  2779  001342  D00A               	goto	l155
  2780                           
  2781                           ;nxlcd.c: 253: {
  2782                           ;nxlcd.c: 254: LATEbits.LATE1 = 0;
  2783  001344  928D               	bcf	3981,1,c	;volatile
  2784                           
  2785                           ;nxlcd.c: 255: DelayFor18TCY();
  2786  001346  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2787                           
  2788                           ;nxlcd.c: 256: LATEbits.LATE1 = 1;
  2789  00134A  828D               	bsf	3981,1,c	;volatile
  2790                           
  2791                           ;nxlcd.c: 257: DelayFor18TCY();
  2792  00134C  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2793                           
  2794                           ;nxlcd.c: 258: LATEbits.LATE1 = 0;
  2795  001350  928D               	bcf	3981,1,c	;volatile
  2796                           
  2797                           ;nxlcd.c: 259: LATEbits.LATE2 = 0;
  2798  001352  948D               	bcf	3981,2,c	;volatile
  2799                           
  2800                           ;nxlcd.c: 260: return 1;
  2801  001354  0E01               	movlw	1
  2802                           
  2803                           ;nxlcd.c: 261: }
  2804  001356  0012               	return	
  2805  001358                     l155:
  2806                           
  2807                           ;nxlcd.c: 262: else
  2808                           ;nxlcd.c: 263: {
  2809                           ;nxlcd.c: 264: LATEbits.LATE1 = 0;
  2810  001358  928D               	bcf	3981,1,c	;volatile
  2811                           
  2812                           ;nxlcd.c: 265: DelayFor18TCY();
  2813  00135A  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2814                           
  2815                           ;nxlcd.c: 266: LATEbits.LATE1 = 1;
  2816  00135E  828D               	bsf	3981,1,c	;volatile
  2817                           
  2818                           ;nxlcd.c: 267: DelayFor18TCY();
  2819  001360  EC0B  F00A         	call	_DelayFor18TCY	;wreg free
  2820                           
  2821                           ;nxlcd.c: 268: LATEbits.LATE1 = 0;
  2822  001364  928D               	bcf	3981,1,c	;volatile
  2823                           
  2824                           ;nxlcd.c: 269: LATEbits.LATE2 = 0;
  2825  001366  948D               	bcf	3981,2,c	;volatile
  2826                           
  2827                           ;nxlcd.c: 270: return 0;
  2828  001368  0E00               	movlw	0
  2829  00136A  0012               	return	
  2830  00136C                     __end_of_BusyXLCD:
  2831                           	opt stack 0
  2832                           tblptru	equ	0xFF8
  2833                           tblptrh	equ	0xFF7
  2834                           tblptrl	equ	0xFF6
  2835                           tablat	equ	0xFF5
  2836                           prodh	equ	0xFF4
  2837                           prodl	equ	0xFF3
  2838                           intcon	equ	0xFF2
  2839                           intcon2	equ	0xFF1
  2840                           intcon3	equ	0xFF0
  2841                           postinc0	equ	0xFEE
  2842                           wreg	equ	0xFE8
  2843                           postdec1	equ	0xFE5
  2844                           fsr1l	equ	0xFE1
  2845                           status	equ	0xFD8
  2846                           
  2847 ;; *************** function _DelayFor18TCY *****************
  2848 ;; Defined at:
  2849 ;;		line 12 in file "nxlcd.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2866 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    4
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_SetDDRamAddr
  2874 ;;		_BusyXLCD
  2875 ;;		_WriteCmdXLCD
  2876 ;;		_WriteDataXLCD
  2877 ;;		_SetCGRamAddr
  2878 ;;		_ReadAddrXLCD
  2879 ;;		_ReadDataXLCD
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text14
  2884  001416                     __ptext14:
  2885                           	opt stack 0
  2886  001416                     _DelayFor18TCY:
  2887                           	opt stack 24
  2888                           
  2889                           ;nxlcd.c: 14: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2890                           
  2891                           ;incstack = 0
  2892  001416  0E21               	movlw	33
  2893  001418                     u1167:
  2894  001418  2EE8               	decfsz	wreg,f,c
  2895  00141A  D7FE               	bra	u1167
  2896  00141C  F000               	nop	
  2897  00141E  0012               	return		;funcret
  2898  001420                     __end_of_DelayFor18TCY:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           intcon2	equ	0xFF1
  2908                           intcon3	equ	0xFF0
  2909                           postinc0	equ	0xFEE
  2910                           wreg	equ	0xFE8
  2911                           postdec1	equ	0xFE5
  2912                           fsr1l	equ	0xFE1
  2913                           status	equ	0xFD8
  2914                           
  2915 ;; *************** function _LowPriorityISR *****************
  2916 ;; Defined at:
  2917 ;;		line 36 in file "main.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2933 ;;      Temps:          0      23       0       0       0       0       0       0       0
  2934 ;;      Totals:         0      23       0       0       0       0       0       0       0
  2935 ;;Total ram usage:       23 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    3
  2938 ;; This function calls:
  2939 ;;		___ftmul
  2940 ;;		___fttol
  2941 ;;		___lltoft
  2942 ;;		___lwtoft
  2943 ;; This function is called by:
  2944 ;;		Interrupt level 1
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	intcodelo
  2949  000018                     __pintcodelo:
  2950                           	opt stack 0
  2951  000018                     _LowPriorityISR:
  2952                           	opt stack 24
  2953                           
  2954                           ;incstack = 0
  2955  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2956  00001A  CFD8 F062          	movff	status,??_LowPriorityISR+2
  2957  00001E  CFE8 F063          	movff	wreg,??_LowPriorityISR+3
  2958  000022  CFE0 F064          	movff	bsr,??_LowPriorityISR+4
  2959  000026  CFFA F065          	movff	pclath,??_LowPriorityISR+5
  2960  00002A  CFFB F066          	movff	pclatu,??_LowPriorityISR+6
  2961  00002E  CFE9 F067          	movff	fsr0l,??_LowPriorityISR+7
  2962  000032  CFEA F068          	movff	fsr0h,??_LowPriorityISR+8
  2963  000036  CFE1 F069          	movff	fsr1l,??_LowPriorityISR+9
  2964  00003A  CFE2 F06A          	movff	fsr1h,??_LowPriorityISR+10
  2965  00003E  CFD9 F06B          	movff	fsr2l,??_LowPriorityISR+11
  2966  000042  CFDA F06C          	movff	fsr2h,??_LowPriorityISR+12
  2967  000046  CFF3 F06D          	movff	prodl,??_LowPriorityISR+13
  2968  00004A  CFF4 F06E          	movff	prodh,??_LowPriorityISR+14
  2969  00004E  CFF6 F06F          	movff	tblptrl,??_LowPriorityISR+15
  2970  000052  CFF7 F070          	movff	tblptrh,??_LowPriorityISR+16
  2971  000056  CFF8 F071          	movff	tblptru,??_LowPriorityISR+17
  2972  00005A  CFF5 F072          	movff	tablat,??_LowPriorityISR+18
  2973  00005E  C04A  F073         	movff	btemp,??_LowPriorityISR+19
  2974  000062  C04B  F074         	movff	btemp+1,??_LowPriorityISR+20
  2975  000066  C04C  F075         	movff	btemp+2,??_LowPriorityISR+21
  2976  00006A  C04D  F076         	movff	btemp+3,??_LowPriorityISR+22
  2977                           
  2978                           ;main.c: 37: PIR1bits.ADIF = 0;
  2979  00006E  9C9E               	bcf	3998,6,c	;volatile
  2980                           
  2981                           ;main.c: 38: contador++;
  2982  000070  0100               	movlb	0	; () banked
  2983  000072  2BAA               	incf	_contador& (0+255),f,b
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;main.c: 39: valorconv = 256 * ADRESH + ADRESL;
  2987  000074  50C4               	movf	4036,w,c	;volatile
  2988  000076  6F61               	movwf	(??_LowPriorityISR+1)& (0+255),b
  2989  000078  6B60               	clrf	??_LowPriorityISR& (0+255),b
  2990  00007A  50C3               	movf	4035,w,c	;volatile
  2991  00007C  2560               	addwf	??_LowPriorityISR& (0+255),w,b
  2992  00007E  6E48               	movwf	_valorconv,c
  2993  000080  0E00               	movlw	0
  2994  000082  2161               	addwfc	(??_LowPriorityISR+1)& (0+255),w,b
  2995  000084  6E49               	movwf	_valorconv+1,c
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;main.c: 40: if(leiturapotenciometro){
  2999  000086  5046               	movf	_leiturapotenciometro,w,c
  3000  000088  1047               	iorwf	_leiturapotenciometro+1,w,c
  3001  00008A  B4D8               	btfsc	status,2,c
  3002  00008C  D05D               	goto	i1l84
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;main.c: 41: leiturapotenciometro = 0;
  3006  00008E  0E00               	movlw	0
  3007  000090  6E47               	movwf	_leiturapotenciometro+1,c
  3008  000092  0E00               	movlw	0
  3009  000094  6E46               	movwf	_leiturapotenciometro,c
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;main.c: 42: result2 = 4.887585533*valorconv;
  3013  000096  0E67               	movlw	103
  3014  000098  6E27               	movwf	___ftmul@f2,c
  3015  00009A  0E9C               	movlw	156
  3016  00009C  6E28               	movwf	___ftmul@f2+1,c
  3017  00009E  0E40               	movlw	64
  3018  0000A0  6E29               	movwf	___ftmul@f2+2,c
  3019  0000A2  C048  F01B         	movff	_valorconv,___lwtoft@c
  3020  0000A6  C049  F01C         	movff	_valorconv+1,___lwtoft@c+1
  3021  0000AA  ECE5  F009         	call	___lwtoft	;wreg free
  3022  0000AE  C01B  F024         	movff	?___lwtoft,___ftmul@f1
  3023  0000B2  C01C  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  3024  0000B6  C01D  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  3025  0000BA  EC66  F006         	call	___ftmul	;wreg free
  3026  0000BE  C024  F033         	movff	?___ftmul,___fttol@f1
  3027  0000C2  C025  F034         	movff	?___ftmul+1,___fttol@f1+1
  3028  0000C6  C026  F035         	movff	?___ftmul+2,___fttol@f1+2
  3029  0000CA  ECEC  F005         	call	___fttol	;wreg free
  3030  0000CE  C033  F042         	movff	?___fttol,_result2
  3031  0000D2  C034  F043         	movff	?___fttol+1,_result2+1
  3032  0000D6  C035  F044         	movff	?___fttol+2,_result2+2
  3033  0000DA  C036  F045         	movff	?___fttol+3,_result2+3
  3034                           
  3035                           ;main.c: 43: result2 = result2*0.03;
  3036  0000DE  0EC3               	movlw	195
  3037  0000E0  6E27               	movwf	___ftmul@f2,c
  3038  0000E2  0EF5               	movlw	245
  3039  0000E4  6E28               	movwf	___ftmul@f2+1,c
  3040  0000E6  0E3C               	movlw	60
  3041  0000E8  6E29               	movwf	___ftmul@f2+2,c
  3042  0000EA  C042  F01B         	movff	_result2,___lltoft@c
  3043  0000EE  C043  F01C         	movff	_result2+1,___lltoft@c+1
  3044  0000F2  C044  F01D         	movff	_result2+2,___lltoft@c+2
  3045  0000F6  C045  F01E         	movff	_result2+3,___lltoft@c+3
  3046  0000FA  ECDF  F008         	call	___lltoft	;wreg free
  3047  0000FE  C01B  F024         	movff	?___lltoft,___ftmul@f1
  3048  000102  C01C  F025         	movff	?___lltoft+1,___ftmul@f1+1
  3049  000106  C01D  F026         	movff	?___lltoft+2,___ftmul@f1+2
  3050  00010A  EC66  F006         	call	___ftmul	;wreg free
  3051  00010E  C024  F033         	movff	?___ftmul,___fttol@f1
  3052  000112  C025  F034         	movff	?___ftmul+1,___fttol@f1+1
  3053  000116  C026  F035         	movff	?___ftmul+2,___fttol@f1+2
  3054  00011A  ECEC  F005         	call	___fttol	;wreg free
  3055  00011E  C033  F042         	movff	?___fttol,_result2
  3056  000122  C034  F043         	movff	?___fttol+1,_result2+1
  3057  000126  C035  F044         	movff	?___fttol+2,_result2+2
  3058  00012A  C036  F045         	movff	?___fttol+3,_result2+3
  3059                           
  3060                           ;main.c: 44: result2 = 350+result2;
  3061  00012E  0E5E               	movlw	94
  3062  000130  2442               	addwf	_result2,w,c
  3063  000132  6E42               	movwf	_result2,c
  3064  000134  0E01               	movlw	1
  3065  000136  2043               	addwfc	_result2+1,w,c
  3066  000138  6E43               	movwf	_result2+1,c
  3067  00013A  0E00               	movlw	0
  3068  00013C  2044               	addwfc	_result2+2,w,c
  3069  00013E  6E44               	movwf	_result2+2,c
  3070  000140  0E00               	movlw	0
  3071  000142  2045               	addwfc	_result2+3,w,c
  3072  000144  6E45               	movwf	_result2+3,c
  3073                           
  3074                           ;main.c: 45: } else {
  3075  000146  D024               	goto	i1l85
  3076  000148                     i1l84:
  3077                           
  3078                           ;main.c: 46: result = valorconv*4.887585533;
  3079  000148  0E67               	movlw	103
  3080  00014A  6E27               	movwf	___ftmul@f2,c
  3081  00014C  0E9C               	movlw	156
  3082  00014E  6E28               	movwf	___ftmul@f2+1,c
  3083  000150  0E40               	movlw	64
  3084  000152  6E29               	movwf	___ftmul@f2+2,c
  3085  000154  C048  F01B         	movff	_valorconv,___lwtoft@c
  3086  000158  C049  F01C         	movff	_valorconv+1,___lwtoft@c+1
  3087  00015C  ECE5  F009         	call	___lwtoft	;wreg free
  3088  000160  C01B  F024         	movff	?___lwtoft,___ftmul@f1
  3089  000164  C01C  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  3090  000168  C01D  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  3091  00016C  EC66  F006         	call	___ftmul	;wreg free
  3092  000170  C024  F033         	movff	?___ftmul,___fttol@f1
  3093  000174  C025  F034         	movff	?___ftmul+1,___fttol@f1+1
  3094  000178  C026  F035         	movff	?___ftmul+2,___fttol@f1+2
  3095  00017C  ECEC  F005         	call	___fttol	;wreg free
  3096  000180  C033  F0A6         	movff	?___fttol,_result
  3097  000184  C034  F0A7         	movff	?___fttol+1,_result+1
  3098  000188  C035  F0A8         	movff	?___fttol+2,_result+2
  3099  00018C  C036  F0A9         	movff	?___fttol+3,_result+3
  3100  000190                     i1l85:
  3101  000190  C076  F04D         	movff	??_LowPriorityISR+22,btemp+3
  3102  000194  C075  F04C         	movff	??_LowPriorityISR+21,btemp+2
  3103  000198  C074  F04B         	movff	??_LowPriorityISR+20,btemp+1
  3104  00019C  C073  F04A         	movff	??_LowPriorityISR+19,btemp
  3105  0001A0  C072  FFF5         	movff	??_LowPriorityISR+18,tablat
  3106  0001A4  C071  FFF8         	movff	??_LowPriorityISR+17,tblptru
  3107  0001A8  C070  FFF7         	movff	??_LowPriorityISR+16,tblptrh
  3108  0001AC  C06F  FFF6         	movff	??_LowPriorityISR+15,tblptrl
  3109  0001B0  C06E  FFF4         	movff	??_LowPriorityISR+14,prodh
  3110  0001B4  C06D  FFF3         	movff	??_LowPriorityISR+13,prodl
  3111  0001B8  C06C  FFDA         	movff	??_LowPriorityISR+12,fsr2h
  3112  0001BC  C06B  FFD9         	movff	??_LowPriorityISR+11,fsr2l
  3113  0001C0  C06A  FFE2         	movff	??_LowPriorityISR+10,fsr1h
  3114  0001C4  C069  FFE1         	movff	??_LowPriorityISR+9,fsr1l
  3115  0001C8  C068  FFEA         	movff	??_LowPriorityISR+8,fsr0h
  3116  0001CC  C067  FFE9         	movff	??_LowPriorityISR+7,fsr0l
  3117  0001D0  C066  FFFB         	movff	??_LowPriorityISR+6,pclatu
  3118  0001D4  C065  FFFA         	movff	??_LowPriorityISR+5,pclath
  3119  0001D8  C064  FFE0         	movff	??_LowPriorityISR+4,bsr
  3120  0001DC  C063  FFE8         	movff	??_LowPriorityISR+3,wreg
  3121  0001E0  C062  FFD8         	movff	??_LowPriorityISR+2,status
  3122  0001E4  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3123  0001E6  0010               	retfie	
  3124  0001E8                     __end_of_LowPriorityISR:
  3125                           	opt stack 0
  3126                           pclatu	equ	0xFFB
  3127                           pclath	equ	0xFFA
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           prodh	equ	0xFF4
  3133                           prodl	equ	0xFF3
  3134                           intcon	equ	0xFF2
  3135                           intcon2	equ	0xFF1
  3136                           intcon3	equ	0xFF0
  3137                           postinc0	equ	0xFEE
  3138                           fsr0h	equ	0xFEA
  3139                           fsr0l	equ	0xFE9
  3140                           wreg	equ	0xFE8
  3141                           postdec1	equ	0xFE5
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           bsr	equ	0xFE0
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8
  3148                           
  3149 ;; *************** function ___lwtoft *****************
  3150 ;; Defined at:
  3151 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  c               2   26[COMRAM] unsigned int 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  3   26[COMRAM] float 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0, cstack
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3165 ;;      Params:         3       0       0       0       0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3168 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3169 ;;Total ram usage:        3 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    2
  3172 ;; This function calls:
  3173 ;;		___ftpack
  3174 ;; This function is called by:
  3175 ;;		_LowPriorityISR
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text16
  3180  0013CA                     __ptext16:
  3181                           	opt stack 0
  3182  0013CA                     ___lwtoft:
  3183                           	opt stack 24
  3184                           
  3185                           ;incstack = 0
  3186  0013CA  C01B  F013         	movff	___lwtoft@c,___ftpack@arg
  3187  0013CE  C01C  F014         	movff	___lwtoft@c+1,___ftpack@arg+1
  3188  0013D2  6A15               	clrf	___ftpack@arg+2,c
  3189  0013D4  0E8E               	movlw	142
  3190  0013D6  6E16               	movwf	___ftpack@exp,c
  3191  0013D8  0E00               	movlw	0
  3192  0013DA  6E17               	movwf	___ftpack@sign,c
  3193  0013DC  EC40  F007         	call	___ftpack	;wreg free
  3194  0013E0  C013  F01B         	movff	?___ftpack,?___lwtoft
  3195  0013E4  C014  F01C         	movff	?___ftpack+1,?___lwtoft+1
  3196  0013E8  C015  F01D         	movff	?___ftpack+2,?___lwtoft+2
  3197  0013EC  0012               	return	
  3198  0013EE                     __end_of___lwtoft:
  3199                           	opt stack 0
  3200                           pclatu	equ	0xFFB
  3201                           pclath	equ	0xFFA
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           prodh	equ	0xFF4
  3207                           prodl	equ	0xFF3
  3208                           intcon	equ	0xFF2
  3209                           intcon2	equ	0xFF1
  3210                           intcon3	equ	0xFF0
  3211                           postinc0	equ	0xFEE
  3212                           fsr0h	equ	0xFEA
  3213                           fsr0l	equ	0xFE9
  3214                           wreg	equ	0xFE8
  3215                           postdec1	equ	0xFE5
  3216                           fsr1h	equ	0xFE2
  3217                           fsr1l	equ	0xFE1
  3218                           bsr	equ	0xFE0
  3219                           fsr2h	equ	0xFDA
  3220                           fsr2l	equ	0xFD9
  3221                           status	equ	0xFD8
  3222                           
  3223 ;; *************** function ___lltoft *****************
  3224 ;; Defined at:
  3225 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  c               4   26[COMRAM] unsigned long 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  exp             1   34[COMRAM] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  3   26[COMRAM] float 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3239 ;;      Params:         4       0       0       0       0       0       0       0       0
  3240 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3241 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3242 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3243 ;;Total ram usage:        9 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    2
  3246 ;; This function calls:
  3247 ;;		___ftpack
  3248 ;; This function is called by:
  3249 ;;		_LowPriorityISR
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text17
  3254  0011BE                     __ptext17:
  3255                           	opt stack 0
  3256  0011BE                     ___lltoft:
  3257                           	opt stack 24
  3258                           
  3259                           ;incstack = 0
  3260  0011BE  0E8E               	movlw	142
  3261  0011C0  6E23               	movwf	___lltoft@exp,c
  3262  0011C2  D006               	goto	i1l559
  3263  0011C4  90D8               	bcf	status,0,c
  3264  0011C6  321E               	rrcf	___lltoft@c+3,f,c
  3265  0011C8  321D               	rrcf	___lltoft@c+2,f,c
  3266  0011CA  321C               	rrcf	___lltoft@c+1,f,c
  3267  0011CC  321B               	rrcf	___lltoft@c,f,c
  3268  0011CE  2A23               	incf	___lltoft@exp,f,c
  3269  0011D0                     i1l559:
  3270  0011D0  0E00               	movlw	0
  3271  0011D2  141B               	andwf	___lltoft@c,w,c
  3272  0011D4  6E1F               	movwf	??___lltoft& (0+255),c
  3273  0011D6  0E00               	movlw	0
  3274  0011D8  141C               	andwf	___lltoft@c+1,w,c
  3275  0011DA  6E20               	movwf	(??___lltoft+1)& (0+255),c
  3276  0011DC  0E00               	movlw	0
  3277  0011DE  141D               	andwf	___lltoft@c+2,w,c
  3278  0011E0  6E21               	movwf	(??___lltoft+2)& (0+255),c
  3279  0011E2  0EFF               	movlw	255
  3280  0011E4  141E               	andwf	___lltoft@c+3,w,c
  3281  0011E6  6E22               	movwf	(??___lltoft+3)& (0+255),c
  3282  0011E8  501F               	movf	??___lltoft,w,c
  3283  0011EA  1020               	iorwf	??___lltoft+1,w,c
  3284  0011EC  1021               	iorwf	??___lltoft+2,w,c
  3285  0011EE  1022               	iorwf	??___lltoft+3,w,c
  3286  0011F0  A4D8               	btfss	status,2,c
  3287  0011F2  D7E8               	goto	i1l560
  3288  0011F4  C01B  F013         	movff	___lltoft@c,___ftpack@arg
  3289  0011F8  C01C  F014         	movff	___lltoft@c+1,___ftpack@arg+1
  3290  0011FC  C01D  F015         	movff	___lltoft@c+2,___ftpack@arg+2
  3291  001200  C023  F016         	movff	___lltoft@exp,___ftpack@exp
  3292  001204  0E00               	movlw	0
  3293  001206  6E17               	movwf	___ftpack@sign,c
  3294  001208  EC40  F007         	call	___ftpack	;wreg free
  3295  00120C  C013  F01B         	movff	?___ftpack,?___lltoft
  3296  001210  C014  F01C         	movff	?___ftpack+1,?___lltoft+1
  3297  001214  C015  F01D         	movff	?___ftpack+2,?___lltoft+2
  3298  001218  0012               	return	
  3299  00121A                     __end_of___lltoft:
  3300                           	opt stack 0
  3301                           pclatu	equ	0xFFB
  3302                           pclath	equ	0xFFA
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           intcon2	equ	0xFF1
  3311                           intcon3	equ	0xFF0
  3312                           postinc0	equ	0xFEE
  3313                           fsr0h	equ	0xFEA
  3314                           fsr0l	equ	0xFE9
  3315                           wreg	equ	0xFE8
  3316                           postdec1	equ	0xFE5
  3317                           fsr1h	equ	0xFE2
  3318                           fsr1l	equ	0xFE1
  3319                           bsr	equ	0xFE0
  3320                           fsr2h	equ	0xFDA
  3321                           fsr2l	equ	0xFD9
  3322                           status	equ	0xFD8
  3323                           
  3324 ;; *************** function ___fttol *****************
  3325 ;; Defined at:
  3326 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  f1              3   50[COMRAM] float 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  lval            4   60[COMRAM] unsigned long 
  3331 ;;  exp1            1   64[COMRAM] unsigned char 
  3332 ;;  sign1           1   59[COMRAM] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  4   50[COMRAM] long 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3342 ;;      Params:         4       0       0       0       0       0       0       0       0
  3343 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3344 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3345 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3346 ;;Total ram usage:       15 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    1
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_LowPriorityISR
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text18
  3357  000BD8                     __ptext18:
  3358                           	opt stack 0
  3359  000BD8                     ___fttol:
  3360                           	opt stack 25
  3361                           
  3362                           ;incstack = 0
  3363  000BD8  C035  F037         	movff	___fttol@f1+2,??___fttol
  3364  000BDC  6A38               	clrf	(??___fttol+1)& (0+255),c
  3365  000BDE  6A39               	clrf	(??___fttol+2)& (0+255),c
  3366  000BE0  3434               	rlcf	___fttol@f1+1,w,c
  3367  000BE2  3637               	rlcf	??___fttol& (0+255),f,c
  3368  000BE4  E301               	bnc	u93_21
  3369  000BE6  8038               	bsf	(??___fttol+1)& (0+255),0,c
  3370  000BE8                     u93_21:
  3371  000BE8  5037               	movf	??___fttol,w,c
  3372  000BEA  6E41               	movwf	___fttol@exp1,c
  3373  000BEC  5041               	movf	___fttol@exp1,w,c
  3374  000BEE  A4D8               	btfss	status,2,c
  3375  000BF0  D009               	goto	i1l502
  3376  000BF2  0E00               	movlw	0
  3377  000BF4  6E33               	movwf	?___fttol,c
  3378  000BF6  0E00               	movlw	0
  3379  000BF8  6E34               	movwf	?___fttol+1,c
  3380  000BFA  0E00               	movlw	0
  3381  000BFC  6E35               	movwf	?___fttol+2,c
  3382  000BFE  0E00               	movlw	0
  3383  000C00  6E36               	movwf	?___fttol+3,c
  3384  000C02  0012               	return	
  3385  000C04                     i1l502:
  3386  000C04  0E17               	movlw	23
  3387  000C06  6E37               	movwf	??___fttol& (0+255),c
  3388  000C08  C033  F038         	movff	___fttol@f1,??___fttol+1
  3389  000C0C  C034  F039         	movff	___fttol@f1+1,??___fttol+2
  3390  000C10  C035  F03A         	movff	___fttol@f1+2,??___fttol+3
  3391  000C14  2837               	incf	??___fttol,w,c
  3392  000C16  6E3B               	movwf	(??___fttol+4)& (0+255),c
  3393  000C18  D004               	goto	i1u95_20
  3394  000C1A                     i1u95_25:
  3395  000C1A  90D8               	bcf	status,0,c
  3396  000C1C  323A               	rrcf	??___fttol+3,f,c
  3397  000C1E  3239               	rrcf	??___fttol+2,f,c
  3398  000C20  3238               	rrcf	??___fttol+1,f,c
  3399  000C22                     i1u95_20:
  3400  000C22  2E3B               	decfsz	(??___fttol+4)& (0+255),f,c
  3401  000C24  D7FA               	goto	i1u95_25
  3402  000C26  5038               	movf	??___fttol+1,w,c
  3403  000C28  6E3C               	movwf	___fttol@sign1,c
  3404  000C2A  8E34               	bsf	___fttol@f1+1,7,c
  3405  000C2C  0EFF               	movlw	255
  3406  000C2E  1633               	andwf	___fttol@f1,f,c
  3407  000C30  0EFF               	movlw	255
  3408  000C32  1634               	andwf	___fttol@f1+1,f,c
  3409  000C34  0E00               	movlw	0
  3410  000C36  1635               	andwf	___fttol@f1+2,f,c
  3411  000C38  5033               	movf	___fttol@f1,w,c
  3412  000C3A  6E3D               	movwf	___fttol@lval,c
  3413  000C3C  5034               	movf	___fttol@f1+1,w,c
  3414  000C3E  6E3E               	movwf	___fttol@lval+1,c
  3415  000C40  5035               	movf	___fttol@f1+2,w,c
  3416  000C42  6E3F               	movwf	___fttol@lval+2,c
  3417  000C44  6A40               	clrf	___fttol@lval+3,c
  3418  000C46  0E8E               	movlw	142
  3419  000C48  5E41               	subwf	___fttol@exp1,f,c
  3420  000C4A  AE41               	btfss	___fttol@exp1,7,c
  3421  000C4C  D016               	goto	i1l504
  3422  000C4E  5041               	movf	___fttol@exp1,w,c
  3423  000C50  0A80               	xorlw	128
  3424  000C52  0F8F               	addlw	143
  3425  000C54  B0D8               	btfsc	status,0,c
  3426  000C56  D009               	goto	i1l505
  3427  000C58  0E00               	movlw	0
  3428  000C5A  6E33               	movwf	?___fttol,c
  3429  000C5C  0E00               	movlw	0
  3430  000C5E  6E34               	movwf	?___fttol+1,c
  3431  000C60  0E00               	movlw	0
  3432  000C62  6E35               	movwf	?___fttol+2,c
  3433  000C64  0E00               	movlw	0
  3434  000C66  6E36               	movwf	?___fttol+3,c
  3435  000C68  0012               	return	
  3436  000C6A                     i1l505:
  3437  000C6A  90D8               	bcf	status,0,c
  3438  000C6C  3240               	rrcf	___fttol@lval+3,f,c
  3439  000C6E  323F               	rrcf	___fttol@lval+2,f,c
  3440  000C70  323E               	rrcf	___fttol@lval+1,f,c
  3441  000C72  323D               	rrcf	___fttol@lval,f,c
  3442  000C74  3E41               	incfsz	___fttol@exp1,f,c
  3443  000C76  D7F9               	goto	i1l505
  3444  000C78  D015               	goto	i1u99_20
  3445  000C7A                     i1l504:
  3446  000C7A  0E17               	movlw	23
  3447  000C7C  6441               	cpfsgt	___fttol@exp1,c
  3448  000C7E  D00F               	goto	i1l510
  3449  000C80  0E00               	movlw	0
  3450  000C82  6E33               	movwf	?___fttol,c
  3451  000C84  0E00               	movlw	0
  3452  000C86  6E34               	movwf	?___fttol+1,c
  3453  000C88  0E00               	movlw	0
  3454  000C8A  6E35               	movwf	?___fttol+2,c
  3455  000C8C  0E00               	movlw	0
  3456  000C8E  6E36               	movwf	?___fttol+3,c
  3457  000C90  0012               	return	
  3458  000C92  90D8               	bcf	status,0,c
  3459  000C94  363D               	rlcf	___fttol@lval,f,c
  3460  000C96  363E               	rlcf	___fttol@lval+1,f,c
  3461  000C98  363F               	rlcf	___fttol@lval+2,f,c
  3462  000C9A  3640               	rlcf	___fttol@lval+3,f,c
  3463  000C9C  0641               	decf	___fttol@exp1,f,c
  3464  000C9E                     i1l510:
  3465  000C9E  5041               	movf	___fttol@exp1,w,c
  3466  000CA0  A4D8               	btfss	status,2,c
  3467  000CA2  D7F7               	goto	i1l511
  3468  000CA4                     i1u99_20:
  3469  000CA4  503C               	movf	___fttol@sign1,w,c
  3470  000CA6  B4D8               	btfsc	status,2,c
  3471  000CA8  D008               	goto	i1l513
  3472  000CAA  1E40               	comf	___fttol@lval+3,f,c
  3473  000CAC  1E3F               	comf	___fttol@lval+2,f,c
  3474  000CAE  1E3E               	comf	___fttol@lval+1,f,c
  3475  000CB0  6C3D               	negf	___fttol@lval,c
  3476  000CB2  0E00               	movlw	0
  3477  000CB4  223E               	addwfc	___fttol@lval+1,f,c
  3478  000CB6  223F               	addwfc	___fttol@lval+2,f,c
  3479  000CB8  2240               	addwfc	___fttol@lval+3,f,c
  3480  000CBA                     i1l513:
  3481  000CBA  C03D  F033         	movff	___fttol@lval,?___fttol
  3482  000CBE  C03E  F034         	movff	___fttol@lval+1,?___fttol+1
  3483  000CC2  C03F  F035         	movff	___fttol@lval+2,?___fttol+2
  3484  000CC6  C040  F036         	movff	___fttol@lval+3,?___fttol+3
  3485  000CCA  0012               	return	
  3486  000CCC                     __end_of___fttol:
  3487                           	opt stack 0
  3488                           pclatu	equ	0xFFB
  3489                           pclath	equ	0xFFA
  3490                           tblptru	equ	0xFF8
  3491                           tblptrh	equ	0xFF7
  3492                           tblptrl	equ	0xFF6
  3493                           tablat	equ	0xFF5
  3494                           prodh	equ	0xFF4
  3495                           prodl	equ	0xFF3
  3496                           intcon	equ	0xFF2
  3497                           intcon2	equ	0xFF1
  3498                           intcon3	equ	0xFF0
  3499                           postinc0	equ	0xFEE
  3500                           fsr0h	equ	0xFEA
  3501                           fsr0l	equ	0xFE9
  3502                           wreg	equ	0xFE8
  3503                           postdec1	equ	0xFE5
  3504                           fsr1h	equ	0xFE2
  3505                           fsr1l	equ	0xFE1
  3506                           bsr	equ	0xFE0
  3507                           fsr2h	equ	0xFDA
  3508                           fsr2l	equ	0xFD9
  3509                           status	equ	0xFD8
  3510                           
  3511 ;; *************** function ___ftmul *****************
  3512 ;; Defined at:
  3513 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  f1              3   35[COMRAM] float 
  3516 ;;  f2              3   38[COMRAM] float 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  3519 ;;  sign            1   49[COMRAM] unsigned char 
  3520 ;;  cntr            1   48[COMRAM] unsigned char 
  3521 ;;  exp             1   44[COMRAM] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  3   35[COMRAM] float 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3531 ;;      Params:         6       0       0       0       0       0       0       0       0
  3532 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3533 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3534 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:       15 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    2
  3538 ;; This function calls:
  3539 ;;		___ftpack
  3540 ;; This function is called by:
  3541 ;;		_LowPriorityISR
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text19
  3546  000CCC                     __ptext19:
  3547                           	opt stack 0
  3548  000CCC                     ___ftmul:
  3549                           	opt stack 24
  3550                           
  3551                           ;incstack = 0
  3552  000CCC  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  3553  000CD0  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  3554  000CD2  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  3555  000CD4  3425               	rlcf	___ftmul@f1+1,w,c
  3556  000CD6  362A               	rlcf	??___ftmul& (0+255),f,c
  3557  000CD8  E301               	bnc	u75_21
  3558  000CDA  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  3559  000CDC                     u75_21:
  3560  000CDC  502A               	movf	??___ftmul,w,c
  3561  000CDE  6E2D               	movwf	___ftmul@exp,c
  3562  000CE0  502D               	movf	___ftmul@exp,w,c
  3563  000CE2  A4D8               	btfss	status,2,c
  3564  000CE4  D007               	goto	i1l481
  3565  000CE6  0E00               	movlw	0
  3566  000CE8  6E24               	movwf	?___ftmul,c
  3567  000CEA  0E00               	movlw	0
  3568  000CEC  6E25               	movwf	?___ftmul+1,c
  3569  000CEE  0E00               	movlw	0
  3570  000CF0  6E26               	movwf	?___ftmul+2,c
  3571  000CF2  0012               	return	
  3572  000CF4                     i1l481:
  3573  000CF4  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  3574  000CF8  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  3575  000CFA  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  3576  000CFC  3428               	rlcf	___ftmul@f2+1,w,c
  3577  000CFE  362A               	rlcf	??___ftmul& (0+255),f,c
  3578  000D00  E301               	bnc	u77_21
  3579  000D02  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  3580  000D04                     u77_21:
  3581  000D04  502A               	movf	??___ftmul,w,c
  3582  000D06  6E32               	movwf	___ftmul@sign,c
  3583  000D08  5032               	movf	___ftmul@sign,w,c
  3584  000D0A  A4D8               	btfss	status,2,c
  3585  000D0C  D007               	goto	i1l483
  3586  000D0E  0E00               	movlw	0
  3587  000D10  6E24               	movwf	?___ftmul,c
  3588  000D12  0E00               	movlw	0
  3589  000D14  6E25               	movwf	?___ftmul+1,c
  3590  000D16  0E00               	movlw	0
  3591  000D18  6E26               	movwf	?___ftmul+2,c
  3592  000D1A  0012               	return	
  3593  000D1C                     i1l483:
  3594  000D1C  5032               	movf	___ftmul@sign,w,c
  3595  000D1E  0F7B               	addlw	123
  3596  000D20  262D               	addwf	___ftmul@exp,f,c
  3597  000D22  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  3598  000D26  5029               	movf	___ftmul@f2+2,w,c
  3599  000D28  1A32               	xorwf	___ftmul@sign,f,c
  3600  000D2A  0E80               	movlw	128
  3601  000D2C  1632               	andwf	___ftmul@sign,f,c
  3602  000D2E  8E25               	bsf	___ftmul@f1+1,7,c
  3603  000D30  8E28               	bsf	___ftmul@f2+1,7,c
  3604  000D32  0EFF               	movlw	255
  3605  000D34  1627               	andwf	___ftmul@f2,f,c
  3606  000D36  0EFF               	movlw	255
  3607  000D38  1628               	andwf	___ftmul@f2+1,f,c
  3608  000D3A  0E00               	movlw	0
  3609  000D3C  1629               	andwf	___ftmul@f2+2,f,c
  3610  000D3E  0E00               	movlw	0
  3611  000D40  6E2E               	movwf	___ftmul@f3_as_product,c
  3612  000D42  0E00               	movlw	0
  3613  000D44  6E2F               	movwf	___ftmul@f3_as_product+1,c
  3614  000D46  0E00               	movlw	0
  3615  000D48  6E30               	movwf	___ftmul@f3_as_product+2,c
  3616  000D4A  0E07               	movlw	7
  3617  000D4C  6E31               	movwf	___ftmul@cntr,c
  3618  000D4E  A024               	btfss	___ftmul@f1,0,c
  3619  000D50  D006               	goto	i1l485
  3620  000D52  5027               	movf	___ftmul@f2,w,c
  3621  000D54  262E               	addwf	___ftmul@f3_as_product,f,c
  3622  000D56  5028               	movf	___ftmul@f2+1,w,c
  3623  000D58  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  3624  000D5A  5029               	movf	___ftmul@f2+2,w,c
  3625  000D5C  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  3626  000D5E                     i1l485:
  3627  000D5E  90D8               	bcf	status,0,c
  3628  000D60  3226               	rrcf	___ftmul@f1+2,f,c
  3629  000D62  3225               	rrcf	___ftmul@f1+1,f,c
  3630  000D64  3224               	rrcf	___ftmul@f1,f,c
  3631  000D66  90D8               	bcf	status,0,c
  3632  000D68  3627               	rlcf	___ftmul@f2,f,c
  3633  000D6A  3628               	rlcf	___ftmul@f2+1,f,c
  3634  000D6C  3629               	rlcf	___ftmul@f2+2,f,c
  3635  000D6E  2E31               	decfsz	___ftmul@cntr,f,c
  3636  000D70  D7EE               	goto	i1l484
  3637  000D72  0E09               	movlw	9
  3638  000D74  6E31               	movwf	___ftmul@cntr,c
  3639  000D76  A024               	btfss	___ftmul@f1,0,c
  3640  000D78  D006               	goto	i1l488
  3641  000D7A  5027               	movf	___ftmul@f2,w,c
  3642  000D7C  262E               	addwf	___ftmul@f3_as_product,f,c
  3643  000D7E  5028               	movf	___ftmul@f2+1,w,c
  3644  000D80  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  3645  000D82  5029               	movf	___ftmul@f2+2,w,c
  3646  000D84  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  3647  000D86                     i1l488:
  3648  000D86  90D8               	bcf	status,0,c
  3649  000D88  3226               	rrcf	___ftmul@f1+2,f,c
  3650  000D8A  3225               	rrcf	___ftmul@f1+1,f,c
  3651  000D8C  3224               	rrcf	___ftmul@f1,f,c
  3652  000D8E  90D8               	bcf	status,0,c
  3653  000D90  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  3654  000D92  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  3655  000D94  322E               	rrcf	___ftmul@f3_as_product,f,c
  3656  000D96  2E31               	decfsz	___ftmul@cntr,f,c
  3657  000D98  D7EE               	goto	i1l487
  3658  000D9A  C02E  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  3659  000D9E  C02F  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3660  000DA2  C030  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3661  000DA6  C02D  F016         	movff	___ftmul@exp,___ftpack@exp
  3662  000DAA  C032  F017         	movff	___ftmul@sign,___ftpack@sign
  3663  000DAE  EC40  F007         	call	___ftpack	;wreg free
  3664  000DB2  C013  F024         	movff	?___ftpack,?___ftmul
  3665  000DB6  C014  F025         	movff	?___ftpack+1,?___ftmul+1
  3666  000DBA  C015  F026         	movff	?___ftpack+2,?___ftmul+2
  3667  000DBE  0012               	return	
  3668  000DC0                     __end_of___ftmul:
  3669                           	opt stack 0
  3670                           pclatu	equ	0xFFB
  3671                           pclath	equ	0xFFA
  3672                           tblptru	equ	0xFF8
  3673                           tblptrh	equ	0xFF7
  3674                           tblptrl	equ	0xFF6
  3675                           tablat	equ	0xFF5
  3676                           prodh	equ	0xFF4
  3677                           prodl	equ	0xFF3
  3678                           intcon	equ	0xFF2
  3679                           intcon2	equ	0xFF1
  3680                           intcon3	equ	0xFF0
  3681                           postinc0	equ	0xFEE
  3682                           fsr0h	equ	0xFEA
  3683                           fsr0l	equ	0xFE9
  3684                           wreg	equ	0xFE8
  3685                           postdec1	equ	0xFE5
  3686                           fsr1h	equ	0xFE2
  3687                           fsr1l	equ	0xFE1
  3688                           bsr	equ	0xFE0
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function ___ftpack *****************
  3694 ;; Defined at:
  3695 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  arg             3   18[COMRAM] unsigned um
  3698 ;;  exp             1   21[COMRAM] unsigned char 
  3699 ;;  sign            1   22[COMRAM] unsigned char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  3   18[COMRAM] float 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3711 ;;      Params:         5       0       0       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3713 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3714 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3715 ;;Total ram usage:        8 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		___ftmul
  3722 ;;		___lltoft
  3723 ;;		___lwtoft
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text20
  3728  000E80                     __ptext20:
  3729                           	opt stack 0
  3730  000E80                     ___ftpack:
  3731                           	opt stack 24
  3732                           
  3733                           ;incstack = 0
  3734  000E80  5016               	movf	___ftpack@exp,w,c
  3735  000E82  B4D8               	btfsc	status,2,c
  3736  000E84  D005               	goto	i1u59_20
  3737  000E86  5013               	movf	___ftpack@arg,w,c
  3738  000E88  1014               	iorwf	___ftpack@arg+1,w,c
  3739  000E8A  1015               	iorwf	___ftpack@arg+2,w,c
  3740  000E8C  A4D8               	btfss	status,2,c
  3741  000E8E  D00C               	goto	i1l402
  3742  000E90                     i1u59_20:
  3743  000E90  0E00               	movlw	0
  3744  000E92  6E13               	movwf	?___ftpack,c
  3745  000E94  0E00               	movlw	0
  3746  000E96  6E14               	movwf	?___ftpack+1,c
  3747  000E98  0E00               	movlw	0
  3748  000E9A  6E15               	movwf	?___ftpack+2,c
  3749  000E9C  0012               	return	
  3750  000E9E  2A16               	incf	___ftpack@exp,f,c
  3751  000EA0  90D8               	bcf	status,0,c
  3752  000EA2  3215               	rrcf	___ftpack@arg+2,f,c
  3753  000EA4  3214               	rrcf	___ftpack@arg+1,f,c
  3754  000EA6  3213               	rrcf	___ftpack@arg,f,c
  3755  000EA8                     i1l402:
  3756  000EA8  0E00               	movlw	0
  3757  000EAA  1413               	andwf	___ftpack@arg,w,c
  3758  000EAC  6E18               	movwf	??___ftpack& (0+255),c
  3759  000EAE  0E00               	movlw	0
  3760  000EB0  1414               	andwf	___ftpack@arg+1,w,c
  3761  000EB2  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3762  000EB4  0EFE               	movlw	254
  3763  000EB6  1415               	andwf	___ftpack@arg+2,w,c
  3764  000EB8  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3765  000EBA  5018               	movf	??___ftpack,w,c
  3766  000EBC  1019               	iorwf	??___ftpack+1,w,c
  3767  000EBE  101A               	iorwf	??___ftpack+2,w,c
  3768  000EC0  B4D8               	btfsc	status,2,c
  3769  000EC2  D00C               	goto	i1l405
  3770  000EC4  D7EC               	goto	i1l403
  3771  000EC6  2A16               	incf	___ftpack@exp,f,c
  3772  000EC8  0E01               	movlw	1
  3773  000ECA  2613               	addwf	___ftpack@arg,f,c
  3774  000ECC  0E00               	movlw	0
  3775  000ECE  2214               	addwfc	___ftpack@arg+1,f,c
  3776  000ED0  0E00               	movlw	0
  3777  000ED2  2215               	addwfc	___ftpack@arg+2,f,c
  3778  000ED4  90D8               	bcf	status,0,c
  3779  000ED6  3215               	rrcf	___ftpack@arg+2,f,c
  3780  000ED8  3214               	rrcf	___ftpack@arg+1,f,c
  3781  000EDA  3213               	rrcf	___ftpack@arg,f,c
  3782  000EDC                     i1l405:
  3783  000EDC  0E00               	movlw	0
  3784  000EDE  1413               	andwf	___ftpack@arg,w,c
  3785  000EE0  6E18               	movwf	??___ftpack& (0+255),c
  3786  000EE2  0E00               	movlw	0
  3787  000EE4  1414               	andwf	___ftpack@arg+1,w,c
  3788  000EE6  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3789  000EE8  0EFF               	movlw	255
  3790  000EEA  1415               	andwf	___ftpack@arg+2,w,c
  3791  000EEC  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3792  000EEE  5018               	movf	??___ftpack,w,c
  3793  000EF0  1019               	iorwf	??___ftpack+1,w,c
  3794  000EF2  101A               	iorwf	??___ftpack+2,w,c
  3795  000EF4  B4D8               	btfsc	status,2,c
  3796  000EF6  D006               	goto	i1l408
  3797  000EF8  D7E6               	goto	i1l406
  3798  000EFA  0616               	decf	___ftpack@exp,f,c
  3799  000EFC  90D8               	bcf	status,0,c
  3800  000EFE  3613               	rlcf	___ftpack@arg,f,c
  3801  000F00  3614               	rlcf	___ftpack@arg+1,f,c
  3802  000F02  3615               	rlcf	___ftpack@arg+2,f,c
  3803  000F04                     i1l408:
  3804  000F04  BE14               	btfsc	___ftpack@arg+1,7,c
  3805  000F06  D003               	goto	i1u63_20
  3806  000F08  0E02               	movlw	2
  3807  000F0A  6016               	cpfslt	___ftpack@exp,c
  3808  000F0C  D7F6               	goto	i1l409
  3809  000F0E                     i1u63_20:
  3810  000F0E  A016               	btfss	___ftpack@exp,0,c
  3811  000F10  9E14               	bcf	___ftpack@arg+1,7,c
  3812  000F12  90D8               	bcf	status,0,c
  3813  000F14  3216               	rrcf	___ftpack@exp,f,c
  3814  000F16  5016               	movf	___ftpack@exp,w,c
  3815  000F18  1215               	iorwf	___ftpack@arg+2,f,c
  3816  000F1A  5017               	movf	___ftpack@sign,w,c
  3817  000F1C  A4D8               	btfss	status,2,c
  3818  000F1E  8E15               	bsf	___ftpack@arg+2,7,c
  3819  000F20  C013  F013         	movff	___ftpack@arg,?___ftpack
  3820  000F24  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3821  000F28  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3822  000F2C  0012               	return	
  3823  000F2E                     __end_of___ftpack:
  3824                           	opt stack 0
  3825                           pclatu	equ	0xFFB
  3826                           pclath	equ	0xFFA
  3827                           tblptru	equ	0xFF8
  3828                           tblptrh	equ	0xFF7
  3829                           tblptrl	equ	0xFF6
  3830                           tablat	equ	0xFF5
  3831                           prodh	equ	0xFF4
  3832                           prodl	equ	0xFF3
  3833                           intcon	equ	0xFF2
  3834                           intcon2	equ	0xFF1
  3835                           intcon3	equ	0xFF0
  3836                           postinc0	equ	0xFEE
  3837                           fsr0h	equ	0xFEA
  3838                           fsr0l	equ	0xFE9
  3839                           wreg	equ	0xFE8
  3840                           postdec1	equ	0xFE5
  3841                           fsr1h	equ	0xFE2
  3842                           fsr1l	equ	0xFE1
  3843                           bsr	equ	0xFE0
  3844                           fsr2h	equ	0xFDA
  3845                           fsr2l	equ	0xFD9
  3846                           status	equ	0xFD8
  3847                           
  3848 ;; *************** function _HighPriorityISR *****************
  3849 ;; Defined at:
  3850 ;;		line 18 in file "main.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;		None
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      void 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3864 ;;      Params:         0       0       0       0       0       0       0       0       0
  3865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3866 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3867 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3868 ;;Total ram usage:       18 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		Interrupt level 2
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	intcode
  3878  000008                     __pintcode:
  3879                           	opt stack 0
  3880  000008                     _HighPriorityISR:
  3881                           	opt stack 24
  3882                           
  3883                           ;incstack = 0
  3884  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3885  00000A  EDE0  F006         	call	int_func,f	;refresh shadow registers
  3886                           pclatu	equ	0xFFB
  3887                           pclath	equ	0xFFA
  3888                           tblptru	equ	0xFF8
  3889                           tblptrh	equ	0xFF7
  3890                           tblptrl	equ	0xFF6
  3891                           tablat	equ	0xFF5
  3892                           prodh	equ	0xFF4
  3893                           prodl	equ	0xFF3
  3894                           intcon	equ	0xFF2
  3895                           intcon2	equ	0xFF1
  3896                           intcon3	equ	0xFF0
  3897                           postinc0	equ	0xFEE
  3898                           fsr0h	equ	0xFEA
  3899                           fsr0l	equ	0xFE9
  3900                           wreg	equ	0xFE8
  3901                           postdec1	equ	0xFE5
  3902                           fsr1h	equ	0xFE2
  3903                           fsr1l	equ	0xFE1
  3904                           bsr	equ	0xFE0
  3905                           fsr2h	equ	0xFDA
  3906                           fsr2l	equ	0xFD9
  3907                           status	equ	0xFD8
  3908                           
  3909                           	psect	intcode_body
  3910  000DC0                     __pintcode_body:
  3911                           	opt stack 24
  3912  000DC0                     int_func:
  3913                           	opt stack 24
  3914  000DC0  0006               	pop		; remove dummy address from shadow register refresh
  3915  000DC2  CFFA F001          	movff	pclath,??_HighPriorityISR
  3916  000DC6  CFFB F002          	movff	pclatu,??_HighPriorityISR+1
  3917  000DCA  CFE9 F003          	movff	fsr0l,??_HighPriorityISR+2
  3918  000DCE  CFEA F004          	movff	fsr0h,??_HighPriorityISR+3
  3919  000DD2  CFE1 F005          	movff	fsr1l,??_HighPriorityISR+4
  3920  000DD6  CFE2 F006          	movff	fsr1h,??_HighPriorityISR+5
  3921  000DDA  CFD9 F007          	movff	fsr2l,??_HighPriorityISR+6
  3922  000DDE  CFDA F008          	movff	fsr2h,??_HighPriorityISR+7
  3923  000DE2  CFF3 F009          	movff	prodl,??_HighPriorityISR+8
  3924  000DE6  CFF4 F00A          	movff	prodh,??_HighPriorityISR+9
  3925  000DEA  CFF6 F00B          	movff	tblptrl,??_HighPriorityISR+10
  3926  000DEE  CFF7 F00C          	movff	tblptrh,??_HighPriorityISR+11
  3927  000DF2  CFF8 F00D          	movff	tblptru,??_HighPriorityISR+12
  3928  000DF6  CFF5 F00E          	movff	tablat,??_HighPriorityISR+13
  3929  000DFA  C04A  F00F         	movff	btemp,??_HighPriorityISR+14
  3930  000DFE  C04B  F010         	movff	btemp+1,??_HighPriorityISR+15
  3931  000E02  C04C  F011         	movff	btemp+2,??_HighPriorityISR+16
  3932  000E06  C04D  F012         	movff	btemp+3,??_HighPriorityISR+17
  3933                           
  3934                           ;main.c: 19: INTCONbits.TMR0IF = 0;
  3935  000E0A  94F2               	bcf	intcon,2,c	;volatile
  3936                           
  3937                           ;main.c: 20: TMR0L = 100;
  3938  000E0C  0E64               	movlw	100
  3939  000E0E  6ED6               	movwf	4054,c	;volatile
  3940                           
  3941                           ;main.c: 21: ADCON0bits.GO_DONE = 1;
  3942  000E10  82C2               	bsf	4034,1,c	;volatile
  3943                           
  3944                           ;main.c: 22: if(contador == 100){
  3945  000E12  0E64               	movlw	100
  3946  000E14  0100               	movlb	0	; () banked
  3947  000E16  19AA               	xorwf	_contador& (0+255),w,b
  3948  000E18  A4D8               	btfss	status,2,c
  3949  000E1A  D009               	goto	i2l77
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;main.c: 23: contador = 1;
  3953  000E1C  0E01               	movlw	1
  3954  000E1E  6FAA               	movwf	_contador& (0+255),b
  3955                           
  3956                           ;main.c: 24: leiturapotenciometro = 1;
  3957  000E20  0E00               	movlw	0
  3958  000E22  6E47               	movwf	_leiturapotenciometro+1,c
  3959  000E24  0E01               	movlw	1
  3960  000E26  6E46               	movwf	_leiturapotenciometro,c
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;main.c: 25: ADCON0bits.CHS1 = 1;
  3964  000E28  86C2               	bsf	4034,3,c	;volatile
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;main.c: 26: ADCON0bits.CHS0 = 1;
  3968  000E2A  84C2               	bsf	4034,2,c	;volatile
  3969  000E2C  D002               	goto	L1
  3970  000E2E                     i2l77:
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;main.c: 30: ADCON0bits.CHS1 = 0;
  3974  000E2E  96C2               	bcf	4034,3,c	;volatile
  3975                           
  3976                           ;main.c: 31: ADCON0bits.CHS0 = 0;
  3977  000E30  94C2               	bcf	4034,2,c	;volatile
  3978  000E32                     L1:
  3979                           
  3980                           ;main.c: 32: ADCON0bits.GO_DONE = 1;
  3981  000E32  82C2               	bsf	4034,1,c	;volatile
  3982                           
  3983                           ; BSR set to: 0
  3984                           
  3985                           ; BSR set to: 0
  3986  000E34  C012  F04D         	movff	??_HighPriorityISR+17,btemp+3
  3987  000E38  C011  F04C         	movff	??_HighPriorityISR+16,btemp+2
  3988  000E3C  C010  F04B         	movff	??_HighPriorityISR+15,btemp+1
  3989  000E40  C00F  F04A         	movff	??_HighPriorityISR+14,btemp
  3990  000E44  C00E  FFF5         	movff	??_HighPriorityISR+13,tablat
  3991  000E48  C00D  FFF8         	movff	??_HighPriorityISR+12,tblptru
  3992  000E4C  C00C  FFF7         	movff	??_HighPriorityISR+11,tblptrh
  3993  000E50  C00B  FFF6         	movff	??_HighPriorityISR+10,tblptrl
  3994  000E54  C00A  FFF4         	movff	??_HighPriorityISR+9,prodh
  3995  000E58  C009  FFF3         	movff	??_HighPriorityISR+8,prodl
  3996  000E5C  C008  FFDA         	movff	??_HighPriorityISR+7,fsr2h
  3997  000E60  C007  FFD9         	movff	??_HighPriorityISR+6,fsr2l
  3998  000E64  C006  FFE2         	movff	??_HighPriorityISR+5,fsr1h
  3999  000E68  C005  FFE1         	movff	??_HighPriorityISR+4,fsr1l
  4000  000E6C  C004  FFEA         	movff	??_HighPriorityISR+3,fsr0h
  4001  000E70  C003  FFE9         	movff	??_HighPriorityISR+2,fsr0l
  4002  000E74  C002  FFFB         	movff	??_HighPriorityISR+1,pclatu
  4003  000E78  C001  FFFA         	movff	??_HighPriorityISR,pclath
  4004  000E7C  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4005  000E7E  0011               	retfie		f
  4006  000E80                     __end_of_HighPriorityISR:
  4007                           	opt stack 0
  4008                           pclatu	equ	0xFFB
  4009                           pclath	equ	0xFFA
  4010                           tblptru	equ	0xFF8
  4011                           tblptrh	equ	0xFF7
  4012                           tblptrl	equ	0xFF6
  4013                           tablat	equ	0xFF5
  4014                           prodh	equ	0xFF4
  4015                           prodl	equ	0xFF3
  4016                           intcon	equ	0xFF2
  4017                           intcon2	equ	0xFF1
  4018                           intcon3	equ	0xFF0
  4019                           postinc0	equ	0xFEE
  4020                           fsr0h	equ	0xFEA
  4021                           fsr0l	equ	0xFE9
  4022                           wreg	equ	0xFE8
  4023                           postdec1	equ	0xFE5
  4024                           fsr1h	equ	0xFE2
  4025                           fsr1l	equ	0xFE1
  4026                           bsr	equ	0xFE0
  4027                           fsr2h	equ	0xFDA
  4028                           fsr2l	equ	0xFD9
  4029                           status	equ	0xFD8
  4030                           pclatu	equ	0xFFB
  4031                           pclath	equ	0xFFA
  4032                           tblptru	equ	0xFF8
  4033                           tblptrh	equ	0xFF7
  4034                           tblptrl	equ	0xFF6
  4035                           tablat	equ	0xFF5
  4036                           prodh	equ	0xFF4
  4037                           prodl	equ	0xFF3
  4038                           intcon	equ	0xFF2
  4039                           intcon2	equ	0xFF1
  4040                           intcon3	equ	0xFF0
  4041                           postinc0	equ	0xFEE
  4042                           fsr0h	equ	0xFEA
  4043                           fsr0l	equ	0xFE9
  4044                           wreg	equ	0xFE8
  4045                           postdec1	equ	0xFE5
  4046                           fsr1h	equ	0xFE2
  4047                           fsr1l	equ	0xFE1
  4048                           bsr	equ	0xFE0
  4049                           fsr2h	equ	0xFDA
  4050                           fsr2l	equ	0xFD9
  4051                           status	equ	0xFD8
  4052                           
  4053                           	psect	rparam
  4054  0000                     pclatu	equ	0xFFB
  4055                           pclath	equ	0xFFA
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           intcon	equ	0xFF2
  4063                           intcon2	equ	0xFF1
  4064                           intcon3	equ	0xFF0
  4065                           postinc0	equ	0xFEE
  4066                           fsr0h	equ	0xFEA
  4067                           fsr0l	equ	0xFE9
  4068                           wreg	equ	0xFE8
  4069                           postdec1	equ	0xFE5
  4070                           fsr1h	equ	0xFE2
  4071                           fsr1l	equ	0xFE1
  4072                           bsr	equ	0xFE0
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077                           	psect	temp
  4078  00004A                     btemp:
  4079                           	opt stack 0
  4080  00004A                     	ds	1
  4081  0000                     int$flags	set	btemp
  4082  0000                     wtemp6	set	btemp+1
  4083                           pclatu	equ	0xFFB
  4084                           pclath	equ	0xFFA
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           intcon2	equ	0xFF1
  4093                           intcon3	equ	0xFF0
  4094                           postinc0	equ	0xFEE
  4095                           fsr0h	equ	0xFEA
  4096                           fsr0l	equ	0xFE9
  4097                           wreg	equ	0xFE8
  4098                           postdec1	equ	0xFE5
  4099                           fsr1h	equ	0xFE2
  4100                           fsr1l	equ	0xFE1
  4101                           bsr	equ	0xFE0
  4102                           fsr2h	equ	0xFDA
  4103                           fsr2l	equ	0xFD9
  4104                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    0
    Data        4
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      73
    BANK0           160     66      79
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityISR in COMRAM

    _LowPriorityISR->___fttol
    ___lwtoft->___ftpack
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lltoft

Critical Paths under _HighPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    _putsXLCD->_WriteDataXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _LowPriorityISR in BANK0

    None.

Critical Paths under _HighPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowPriorityISR in BANK1

    None.

Critical Paths under _HighPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowPriorityISR in BANK2

    None.

Critical Paths under _HighPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityISR in BANK3

    None.

Critical Paths under _HighPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityISR in BANK4

    None.

Critical Paths under _HighPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityISR in BANK5

    None.

Critical Paths under _HighPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityISR in BANK6

    None.

Critical Paths under _HighPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityISR in BANK7

    None.

Critical Paths under _HighPriorityISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0    4304
                                             36 BANK0     30    30      0
                           _OpenXLCD
                       _WriteCmdXLCD
                      _WriteDataXLCD
                            ___awdiv
                            ___awmod
                            ___lldiv
                            ___llmod
                             ___wmul
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     317
                                             24 BANK0      2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                             23 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     615
                                             23 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     314
                                             23 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1056
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1060
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     110
                                             24 BANK0      1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      44
                                             23 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         1     1      0      44
                                             23 BANK0      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowPriorityISR                                      23    23      0    8988
                                              0 BANK0     23    23      0
                            ___ftmul
                            ___fttol
                           ___lltoft
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             3     0      3    2601
                                             26 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___lltoft                                             9     5      4    2572
                                             26 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     480
                                             50 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    3335
                                             35 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2427
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighPriorityISR                                     18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _SetDDRamAddr
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   _WriteDataXLCD
     _DelayFor18TCY
   ___awdiv
   ___awmod
   ___lldiv
   ___llmod
   ___wmul
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY

 _LowPriorityISR (ROOT)
   ___ftmul
     ___ftpack
     ___lltoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lltoft
     ___ftpack
   ___lwtoft
     ___ftpack

 _HighPriorityISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     42      4F       5       49.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      20        0.0%
DATA                 0      0      98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Nov 29 12:05:43 2023

                      l91 08E2              ___awdiv@sign 007C                        _dc 00A2  
                      bsr 000FE0       ___wmul@multiplicand 0079                       l132 0F88  
                     l141 0FB8                       l126 0F6C                       l135 0F98  
                     l144 0FC8                       l138 0FA8                       l155 1358  
                     l172 138E                       l173 136E                       l362 103E  
                     l363 1048                       l355 0FF0                       l371 111C  
                     l364 1056                       l356 1000                       l372 1114  
                     l358 101E                       l542 10C4                       l359 1016  
                     l375 1134                       l543 10D2                       l376 113E  
                     l368 10FA                       l552 119E                       l377 114C  
                     l369 1106                       l553 11AC                       l538 1090  
                     l539 1084                       l548 1176                       l549 116A  
                     _PR2 000FCB                       u660 0F76                       u900 1120  
                     u840 1022   __end_of_HighPriorityISR 0E80     __size_of_WriteCmdXLCD 0044  
            ___awmod@sign 007C                       wreg 000FE8              __CFG_FOSC$HS 000000  
            __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000                      STR_1 0808  
                    STR_2 080C                      STR_3 0801                      u1020 1094  
                    u1050 117A                      u1137 08D8                      u1147 13F6  
                    u1157 140A                      u1167 1418             __CFG_DEBUG$ON 000000  
                    i1l84 0148                      i1l85 0190                      i2l77 0E2E  
    _leiturapotenciometro 0046                      _main 0812              ___ftpack@arg 0013  
                    _duty 00AB              ___ftpack@exp 0016                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr2h 000FDA                      fsr0l 000FE9  
                    fsr1l 000FE1                      fsr2l 000FD9                      btemp 004A  
             main@result3 0088    __size_of_WriteDataXLCD 0044                      prodh 000FF4  
                    prodl 000FF3                      start 01E8             __CFG_MCLRE$ON 000000  
            ___ftmul@cntr 0031              ___param_bank 000000              ___ftmul@sign 0032  
            ___fttol@exp1 0041              ___fttol@lval 003D              _WriteCmdXLCD 12EE  
           ?_SetDDRamAddr 0001                     ?_main 0001           __end_of___awdiv 1060  
         __end_of___awmod 1156           __end_of___lldiv 10E4           __end_of___ftmul 0DC0  
                   _T0CON 000FD5           ___awdiv@divisor 0079           __end_of___llmod 11BE  
         __end_of___fttol 0CCC                     i1l402 0EA8                     i1l403 0E9E  
                   i1l405 0EDC                     i1l406 0EC6                     i1l510 0C9E  
                   i1l502 0C04                     i1l511 0C92                     i1l408 0F04  
                   i1l504 0C7A                     i1l409 0EFA                     i1l513 0CBA  
                   i1l505 0C6A                     i1l560 11C4                     i1l481 0CF4  
                   i1l483 0D1C                     i1l484 0D4E                     i1l485 0D5E  
                   i1l487 0D76                     i1l559 11D0                     i1l488 0D86  
         ___awdiv@counter 007B                     _TMR0L 000FD6                     _PORTD 000F83  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISD 000F95                     u75_21 0CDC                     u77_21 0D04  
                   u93_21 0BE8              ___lltoft@exp 0023             ___ftpack@sign 0017  
                   pclath 000FFA                     tablat 000FF5                     status 000FD8  
                   wtemp6 004B           __initialization 121A              __end_of_main 0BD8  
        __end_of_BusyXLCD 136C        __size_of_DelayXLCD 0014     __size_of_DelayPORXLCD 0014  
          ??_SetDDRamAddr 0077          __end_of_OpenXLCD 0FDA                    ??_main 0084  
           ___fttol@sign1 003C             __activetblptr 000001             _WriteDataXLCD 12AA  
        ?_HighPriorityISR 0001                    _ADCON1 000FC1                    _ADCON2 000FC0  
        ___llmod@dividend 0077                    _ADRESH 000FC4                    _ADRESL 000FC3  
                  _CCPR1L 000FBE          ___awdiv@dividend 0077          ??_LowPriorityISR 0060  
        __end_of___ftpack 0F2E          __end_of___lltoft 121A          __end_of___lwtoft 13EE  
            _DelayPORXLCD 1402                    ___wmul 13A2                 ??___awdiv 007B  
               ??___awmod 007B                 ??___lldiv 007F                 ??___ftmul 002A  
               ??___llmod 007F                 ??___fttol 0037                    _dconst 00AD  
                  clear_0 1240                    clear_1 124C          ___awdiv@quotient 007D  
         ___awmod@divisor 0079                    _result 00A6           ___awmod@counter 007B  
          ?_WriteDataXLCD 0001     ___ftmul@f3_as_product 002E              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
        __end_of_putsXLCD 13A2         __end_of_DelayXLCD 1402                __accesstop 0060  
 __end_of__initialization 1252             ___rparam_used 000001                ___ftmul@f1 0024  
              ___ftmul@f2 0027                ___fttol@f1 0033            __pcstackCOMRAM 0001  
            __pidataBANK0 1420                ___lltoft@c 001B                ___lwtoft@c 001B  
  __size_of_DelayFor18TCY 000A                __pbssBANK0 00A2                 ?_BusyXLCD 0001  
         WriteCmdXLCD@cmd 0077      __end_of_SetDDRamAddr 12AA                 ?_OpenXLCD 0001  
       WriteDataXLCD@data 0077                   ?___wmul 0077           ??_WriteDataXLCD 0077  
               ?___ftpack 0013                 ?___lltoft 001B                 ?___lwtoft 001B  
                 i1u63_20 0F0E                   i1u59_20 0E90                   i1u95_20 0C22  
                 i1u95_25 0C1A                   i1u99_20 0CA4                ??_BusyXLCD 0077  
              ??_OpenXLCD 0078                   __Hparam 0000                   __Lparam 0000  
                 ___awdiv 0FDA             _DelayFor18TCY 1416                   ___awmod 10E4  
                 ___lldiv 1060           __size_of___wmul 0028                   ___ftmul 0CCC  
                 ___llmod 1156                   ___fttol 0BD8                 ?_putsXLCD 0078  
            __psmallconst 0800                   __pcinit 121A                ??___ftpack 0018  
                 __ramtop 0800                ??___lltoft 001F                   __ptext0 0812  
                 __ptext1 136C                   __ptext2 12AA                   __ptext3 13A2  
                 __ptext4 1156                   __ptext5 1060                   __ptext6 10E4  
                 __ptext7 0FDA                   __ptext8 0F2E                   __ptext9 12EE  
              ??___lwtoft 001E                 _T2CONbits 000FCA          ___awmod@dividend 0077  
                 _result2 0042                   main@dez 008C                   main@aux 009E  
                 main@uni 008E            __pintcode_body 0DC0      end_of_initialization 1252  
                 int_func 0DC0           ___lldiv@divisor 007B           ___lldiv@counter 0083  
          ?_DelayFor18TCY 0001                   postdec1 000FE5                   postinc0 000FEE  
              ??_putsXLCD 007A                 _TRISAbits 000F92                 _TRISEbits 000F96  
   __size_of_SetDDRamAddr 0046  __size_of_HighPriorityISR 0E78               _CCP1CONbits 000FBD  
             _CCP2CONbits 000FBA                 _DelayXLCD 13EE               ___ftmul@exp 002D  
          __end_of___wmul 13CA              _SetDDRamAddr 1264        SetDDRamAddr@DDaddr 0077  
     start_initialization 121A           ___llmod@divisor 007B         __size_of_BusyXLCD 003A  
         ___llmod@counter 007F                ?_DelayXLCD 0001           ??_DelayFor18TCY 0077  
 __size_of_LowPriorityISR 01D0         __size_of_OpenXLCD 00AC                  ??___wmul 007B  
           ?_WriteCmdXLCD 0001               __pdataBANK0 00AB         __size_of___ftpack 00AE  
       __size_of___lltoft 005C               __pbssCOMRAM 0042         __size_of___lwtoft 0024  
           __pcstackBANK0 0060         ??_HighPriorityISR 0001            putsXLCD@buffer 0078  
               __pintcode 0008            ??_WriteCmdXLCD 0077                  ?___awdiv 0077  
                ?___awmod 0077                  ?___lldiv 0077                  ?___ftmul 0024  
                ?___llmod 0077                  ?___fttol 0033               __pintcodelo 0018  
       __size_of_putsXLCD 0036     __end_of_WriteDataXLCD 12EE               __smallconst 0800  
          ___wmul@product 007B                  _LATEbits 000F8D               ??_DelayXLCD 0077  
                _IPR1bits 000F9F                  _PIE1bits 000F9D             ?_DelayPORXLCD 0001  
                _PIR1bits 000F9E           OpenXLCD@lcdtype 0078                  _RCONbits 000FD0  
               _valorconv 0048                _ADCON0bits 000FC2         ___wmul@multiplier 0077  
               main@cent2 0090                 main@cent3 0096               _INTCON2bits 000FF1  
             _INTCON3bits 000FF0                 copy_data0 122E                  _BusyXLCD 1332  
          ??_DelayPORXLCD 0077                  _OpenXLCD 0F2E                  __Hrparam 0000  
          _LowPriorityISR 0018                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___awdiv 0086          __size_of___awmod 0072          __size_of___lldiv 0084  
        __size_of___ftmul 00F4          __size_of___llmod 0068          __size_of___fttol 00F4  
                ___ftpack 0E80                  ___lltoft 11BE                  ___lwtoft 13CA  
                __ptext10 1264                  __ptext11 13EE                  __ptext20 0E80  
                __ptext12 1402                  __ptext13 1332                  __ptext14 1416  
                __ptext16 13CA                  __ptext17 11BE                  __ptext18 0BD8  
                __ptext19 0CCC      __end_of_WriteCmdXLCD 1332                  _contador 00AA  
           __size_of_main 03C6    __end_of_LowPriorityISR 01E8                  int$flags 004A  
                _putsXLCD 136C                  main@dez2 0092                  main@dez3 0098  
                main@cent 008A                  main@aux2 00A0                  main@aux3 009C  
                main@uni2 0094                  main@uni3 009A     __CFG_CPUDIV$OSC1_PLL2 000000  
              _INTCONbits 000FF2           _HighPriorityISR 0008                  intlevel1 0000  
                intlevel2 0000          ___lldiv@dividend 0077           ?_LowPriorityISR 0001  
   __end_of_DelayFor18TCY 1420      __end_of_DelayPORXLCD 1416          ___lldiv@quotient 007F  
